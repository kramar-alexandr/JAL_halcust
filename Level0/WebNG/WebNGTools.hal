//std hal
external function string 255 removenextnode(var string);
external function string 255 GetNextValue(var string);
external function string 255 removenextlistitem(var string,string);
external procedure ResolveMailboxNumber(var row MailVc);
//translation
external function string 255 ToolWebNGTranslateText(integer);
external function string 255 GetTranslatedCompanyName(record WebNGCompCountryVc);
external function string 255 GetTranslatedGroupDescription(record WebNGCompCountryVc);
//statistics
external procedure LogWebNGElementAccess(string,string);
//webng
external procedure RedirectToURL(string);
//forward declaration
external procedure SetCountryAllowedLanguage(string);
//std
external function string 255 ConvertXml(string);
//CUST
external function boolean FileNameIsVideo(string);
external inner function roundmode SetRoundModeD(Integer);
external procedure AddComment(boolean,string,string,string);
external function string 50 GetFirstImage(string,string);
external function string 255 AddStr(string,string,string);
external procedure DrawEventForm(string);
external function boolean FileNameIsImage(string);

//CUST

global
function boolean LoginState()
begin
  LoginState = (WebLoginStatus==3);
  return;
end;

//SECTION: LANGUAGE AND COUNTRY TOOLS
procedure GetOverridingCountry(var string country)
begin
  record WebNGCountryVc WCr;
  
  if (nonblank(country) and country!="unknown") then begin
    WCr.Code = country;
    if (ReadFirstMain(WCr,1,true)) then begin
      if (nonblank(WCr.OvrCountry)) then begin
        country = WCr.OvrCountry;
      end;
    end;
  end;
  
  return;
end;

global
procedure UpdateWebProgCountry(string vatlawcountry)
begin
  transaction string 20 gVATLawCountry;
  gVATLawCountry = vatlawcountry;
  SetDetailedCookie("vatlawcountry",ConvertXml(vatlawcountry),"Application VAT Law Country","","/",15552000); //180days
  return;
end;

global
procedure UpdateWebLanguage(string langcode)
begin
  transaction string 20 gLangcode;
  gLangcode = langcode;
  SetDetailedCookie("langcode",ConvertXml(langcode),"Language Setting","","/",15552000); //180days
  return;
end;

global
procedure UpdateWebProductCode(string productcode)
begin
  transaction string 20 gWebBuildProductCode;
  gWebBuildProductCode = productcode;
  SetDetailedCookie("buildproductcode",ConvertXml(productcode),"Product Code","","/",15552000); //180days
  return;
end;

global
procedure UpdateWebLicenseMode(string licensemodestr)
begin
  transaction string 20 gWebLicenseMode;
  gWebLicenseMode = licensemodestr;

  SetDetailedCookie("licensemode",ConvertXml(licensemodestr),"License Mode","","/",15552000); //180days
  return;
end;

global
procedure UpdateWebCountry(string country)
begin
  transaction string 60 gCountryCode;
  string 60 mcountry;
  mcountry = country;
  GetOverridingCountry(mcountry);
  gCountryCode = mcountry;
  SetDetailedCookie("country",ConvertXml(mcountry),"Country Setting","","/",15552000); //180days
  SetCountryAllowedLanguage(country);
  return;
end;

function string 255 FindCountryByHostname()
begin
  record WebNGHostCountryVc WHCr;
  string 255 res;
  
  WHCr.Hostname = WebHost;
  if (ReadFirstMain(WHCr,1,true)) then begin
    res = WHCr.Country;
  end;
  FindCountryByHostname = res;
  return;
end;

global
function string 255 FindCountryFromHMCompany()
begin
  record WebNGCompCountryVc WCCr;
  string 255 res;
  
  WCCr.CompanyNr = CurrentCompany;
  if (ReadFirstMain(WCCr,1,true)) then begin
    res = WCCr.Country;
  end;
  FindCountryFromHMCompany = res;
  return;
end;

global
function string 10 ToolWebNGGetCountry()
begin
  transaction string 60 gCountryCode;
  string 255 country;
  string 255 countrycode;
  record WebNGCountryVc WCr;
  
  country = gCountryCode;
  if (blank(country)) then begin
    country = GetCookie("country");
  end;
  if (blank(country)) then begin
    country = WebGetArg("cc");
  end;
  if (blank(country)) then begin
    //figure out from logged in customer's enabler country
    if (LoginState) then begin
      country = FindCountryFromHMCompany;
    end;
    if (blank(country)) then begin
      country = FindCountryByHostname;
    end;
    if (blank(country)) then begin
      if (GeoLocationForIp(WebRemoteIpAddress,countrycode)) then begin
        WCr.IsoCode = countrycode;
        if (ReadFirstKey("IsoCode",WCr,1,true)) then begin
          country = WCr.Code;
        end;
      end;
    end;
    if (blank(country)) then begin
      country = "unknown";
      country = "global"; //temporary fix - dont show world map to new visitors
    end;
    UpdateWebCountry(country);
  end;
  
  if (country=="unknown") then begin
    country = "";
  end;
 
  //for testing 
  if (nonblank(WebGetArg("test"))) then begin
    country = WebGetArg("cc");
  end;
  
  ToolWebNGGetCountry = country;
  return;
end;

global
function string 10 GetCountryDefaultLanguage()
begin
  string 255 country,res;
  record WebNGCountryVc WCr;
  
  country = ToolWebNGGetCountry;
  if (nonblank(country)) then begin
    WCr.Code = country;
    if (ReadFirstMain(WCr,1,true)) then begin
      res = WCr.DefaultLanguage;
    end;
  end;
  GetCountryDefaultLanguage = res;
  return;
end;

function string 255 FindLanguageFromProgLang()
begin
  record WebNGLanguageVc WLr;
  string 255 res;
  
  WLr.HMProglang = WebGetArg("prog_lang");
  if (nonblank(WLr.HMProglang)) then begin
    if (ReadFirstKey("HMProglang",WLr,1,true)) then begin
      res = WLr.Code;
    end;
  end;
  FindLanguageFromProgLang = res;
  return;
end;

global
function string 10 CurrentWebLang()
begin
  transaction string 20 gLangcode;
  string 255 langcode;

  langcode = gLangcode;
  if (blank(langcode)) then begin
    langcode = GetCookie("langcode");
  end;
  if (blank(langcode)) then begin
    langcode = WebGetArg("lc");
  end;
  if (blank(langcode)) then begin
    //figure out from ProgLang which is passed by HW app when globe is pressed
    langcode = FindLanguageFromProgLang;
    if (blank(langcode)) then begin
      langcode = GetCountryDefaultLanguage;
    end;
    
    if (blank(langcode)) then begin
      langcode = "LV";//CUST
    end else begin
      UpdateWebLanguage(langcode);
    end;
  end;

  //for web apps
  if (nonblank(WebGetArg("forcelc"))) then begin
    langcode = WebGetArg("forcelc");
  end;
  
  //for testing 
  if (nonblank(WebGetArg("test"))) then begin
    langcode = WebGetArg("lc");
  end;
  CurrentWebLang = langcode;
  return;
end;

global
procedure SetCountryAllowedLanguage(string country)
begin
  transaction string 20 gLangcode;
  string 255 curlang,allowedlangs,lang;
  record WebNGCountryVc WCr;
  
  WCr.Code = country;
  if (nonblank(WCr.Code)) then begin
    if (ReadFirstMain(WCr,1,true)) then begin
      //TODO: when switching country, should we switch to default language of that country?
      //TODO: this is what happens now, because other logic is commented out.
      /*curlang = CurrentWebLang;
      if (nonblank(curlang)) then begin
        allowedlangs = WCr.AllowedLanguages;
        lang = GetNextValue(allowedlangs);
        while (nonblank(lang)) begin
          if (lang==curlang) then begin
            goto LSetCountryAllowedLanguage;
          end;
          lang = GetNextValue(allowedlangs);
        end;
      end;*/
      UpdateWebLanguage(WCr.DefaultLanguage);
    end;
  end;
LSetCountryAllowedLanguage:;
  return;
end;

global
procedure GetListOfCompaniesForCountry(string country,var array integer numberlist,var array string namelist)
begin
  record WebNGCompCountryVc WCCr;
  boolean testf;
  integer cnt,nextslot;
  
  testf = true;
  WCCr.Country = country;
  while (LoopKey("Country",WCCr,1,testf)) begin
    if (WCCr.Country!=country) then begin
      testf = false;
    end;
    if (testf) then begin
      nextslot = numberlist[0]+1;
      numberlist[nextslot] = WCCr.CompanyNr;
      namelist[nextslot] = GetTranslatedCompanyName(WCCr);
      numberlist[0] = nextslot;
    end;
  end;
  return;
end;

global
procedure GetListOfGroupsForCountry(string country,var array string grouplist,var array string namelist)
begin
  record WebNGCompCountryVc WCCr;
  boolean testf;
  integer cnt,nextslot;
  
  testf = true;
  nextslot = 0;
  WCCr.Country = country;
  while (LoopKey("Country",WCCr,1,testf)) begin
    if (WCCr.Country!=country) then begin
      testf = false;
    end;
    if (testf) then begin
      if (nonblank(WCCr.GroupID)) then begin
        nextslot = nextslot+1;
        grouplist[nextslot] = WCCr.GroupID;
        namelist[nextslot] = GetTranslatedGroupDescription(WCCr);
      end;
    end;
  end;
  grouplist[0] = nextslot;
  return;
end;

global
function boolean CountryCompanyMismatch()
begin
  record WebNGCompCountryVc WCCr;
  boolean res;
  
  res = false;
  WCCr.CompanyNr = CurrentCompany;
  if (ReadFirstMain(WCCr,1,true)) then begin
    if (WCCr.Country != ToolWebNGGetCountry) then begin
      res = true;
    end;
  end else begin
    if (CurrentCompany!=1) then begin
      res = true;
    end;
  end;
  
  CountryCompanyMismatch = res;
  return;
end;

// Moved to ToolsCommon2.hal

global
function string 255 CleanPath(string path)
begin
  integer i;
  string 255 res;
  res = "";
  for (i=0;i<len(path);i=i+1) begin
    if (mid(path,i,1)=="&" or mid(path,i,1)=="?") then begin
      goto LCleanPath;
    end else begin
      res = res & mid(path,i,1);
    end;
  end;
LCleanPath:;
  if (left(res,1)=="/") then begin
    res = mid(res,1,255);
  end;

  if (right(res,1)=="/") then begin
    res = left(res,len(res)-1);
  end;
  CleanPath=res;
  return;
end;

//SECTION: GET PATH TO STRUCTURE NODES
global
procedure RememberRequestURL(string path)
begin
  string 255 mpath;
  
  mpath = path;
  if (left(mpath,1)!="/") then begin
    mpath = "/" & mpath; //mid(path,1,255);
  end;
  PutSessionString("requesturl_old3",GetSessionString("requesturl_old2"));
  PutSessionString("requesturl_old2",GetSessionString("requesturl_old"));
  PutSessionString("requesturl_old",GetSessionString("requesturl"));
  PutSessionString("requesturl",mpath);
  return;
end;

global
procedure RollbackOneRequestURL()
begin
  PutSessionString("requesturl",GetSessionString("requesturl_old"));
  PutSessionString("requesturl_old",GetSessionString("requesturl_old2"));
  PutSessionString("requesturl_old2",GetSessionString("requesturl_old3"));
  PutSessionString("requesturl_old3","");
  return;
end;

global
procedure GetWebSiteSettings(var string startstruct,var string sitetitle,var string headerelement,var string footerelement,
                              var string stylesheet,var string analyticsid,var integer prependtitle,var boolean allowlogin,
                              var string errorpage,var longint loginnode,var longint selectcountry)
begin
  record WebNGSitesBlock WSb;
  row WebNGSitesBlock WSbrw;
  record WebNGTestBlock WTb;
  integer i,cnt,line;
  string 255 ovrwebhost;
  
  BlockLoad(WSb);
  ovrwebhost = WebHost;
  if (MatRowCnt(WSb)>0) then begin
    line = 0;
    cnt = MatRowCnt(WSb);
    for (i=0;i<cnt;i=i+1) begin
      MatRowGet(WSb,i,WSbrw);
      if (WSbrw.Host==ovrwebhost) then begin
        line = -1;
        i = cnt;
      end;
      if (blank(WSbrw.Host)) then begin
        line = i;
      end;
    end;
    
    if (line!=-1) then begin
      MatRowGet(WSb,line,WSbrw);
    end;
    
    startstruct = WSbrw.StartStruct;
    sitetitle = WSbrw.SiteTitle;
    headerelement = WSbrw.HeaderElement;
    footerelement = WSbrw.FooterElement;
    stylesheet = WSbrw.StyleSheet;
    analyticsid = WSbrw.GoogleAnalyticsID;
    prependtitle = WSbrw.PrependTitle;
    allowlogin = (WSbrw.AllowLogin==1);
    errorpage = WSbrw.ErrorPage;
    loginnode = WSbrw.LoginNode;
    selectcountry = WSbrw.SelectCountryStruct;
  end else begin
    //TODO: defaults?
  end;
  return;
end;

global
procedure GetLoginAndSelectCountryNodes(var longint loginnode,var longint selectcountry)
begin
  string 255 startstruct,sitetitle,headerelement,footerelement,stylesheet,analyticsid,errorpage;
  integer prependtitle;
  boolean allowlogin;
  string 255 res;

  GetWebSiteSettings(startstruct,sitetitle,headerelement,footerelement,stylesheet,analyticsid,prependtitle,allowlogin,errorpage,loginnode,selectcountry);  
  return;
end;

global
function boolean NodeIsApplication(record WebNGStructVc WSr)
begin
  boolean res;
  
  res = false;
  if (WSr.Type==kStructTypeHALFunction or 
      WSr.Type==kStructTypeContentHandlerApp or
      WSr.Type==kStructTypeForumApp or
      WSr.Type==kStructTypeItemBrowse or
      WSr.Type==kStructTypeShoppingBasket or
      WSr.Type==kStructTypeItemOrder or
      WSr.Type==kStructTypeUniversityApp or
      WSr.Type==kStructTypeProductImageApp or
      WSr.Type==kStructTypeWebshopApp or
      WSr.Type==kStructTypeASPApp or
      WSr.Type==15 or
      WSr.Type==kStructTypeOnlineReservationApp or
      WSr.Type==kStructTypeMyAccountApp or
      WSr.Type==kStructTypeSubscriptionsApp or
      WSr.Type==kStructTypeProductionPlan
      or WSr.Type==55//CUST  
      ) then begin
    res = true;
  end;
  
  NodeIsApplication = res;
  return;
end;

global
procedure addnode(var array longint visitednodes,longint node)
begin
  longint i,cnt;
  
  cnt = visitednodes[0];
  for (i=1;i<=cnt;i=i+1) begin
    if (visitednodes[i]==node) then begin
      goto Laddnode;
    end;
  end;
  visitednodes[0] = visitednodes[0]+1;
  visitednodes[visitednodes[0]] = node;
Laddnode:;
  return;
end;

global
function boolean visitedbefore(array longint visitednodes,longint node)
begin
  longint i,cnt;
  boolean res;
  
  res = false;
  cnt = visitednodes[0];
  for (i=1;i<=cnt;i=i+1) begin
    if (visitednodes[i]==node) then begin
      res = true;
      goto Lvisitedbefore;
    end;
  end;
Lvisitedbefore:;
  return;
end;

global
function boolean StructurePathValid(string path)
begin
  boolean res;
  record WebNGStructVc WSr;
  record WebNGPageVc WPr;
  string 255 mpath,node;
  integer lasttype;
  integer cnt;
  string 255 startstruct,sitetitle,headerelement,footerelement,stylesheet,analyticsid,errorpage;
  longint selectcountry;
  boolean rootrequested;
  array longint visitednodes;

  res = false;
  visitednodes[0] = 0;
  mpath = path;
  lasttype = -1;
  WSr.Mother = 0;
  if (len(mpath)==0) then begin
    lasttype = 0; //blank string is ok
    goto LStructurePathValid;
  end;
  if (mpath=="/") then begin
    rootrequested = true;
  end else begin
    WSr.Name = "/";
    if (ReadFirstKey("Mother",WSr,2,true)) then begin
      WSr.Mother = WSr.SerNr;
      addnode(visitednodes,WSr.SerNr);
    end;
  end;

  while (len(mpath)>0) begin
    cnt = cnt+1;
    if (rootrequested==false) then begin
      node = removenextnode(mpath);
    end else begin
      node = mpath;
      mpath = "";
    end;
    WSr.Name = node;
    
    lasttype = -1;
    if (ReadFirstKey("Mother",WSr,2,true)) then begin
      if (visitedbefore(visitednodes,WSr.SerNr)) then begin
        lasttype = -2;
        goto LStructurePathValid;
      end;

      lasttype = WSr.Type;
      WSr.Mother = WSr.SerNr;
      addnode(visitednodes,WSr.SerNr);
      if (NodeIsApplication(WSr)) then begin
        goto LStructurePathValid;
      end;
    end;
  end;
  
LStructurePathValid:;
  if (lasttype>=0) then begin
    res = true;
  end;
  
  StructurePathValid = res;
  return;
end;

global
function string 255 GetLinkToStruct(LongInt StructSerNr,boolean callfromweb)
begin
  record WebNGStructVc WSr;
  LongInt sernr;
  string 255 res,tstr,country;
  boolean firstnode;
  string 255 appendcountry;
 
  res = "";
  appendcountry = "";
  firstnode = true;
  sernr = StructSerNr;
  while (sernr!=-1 and sernr!=0) begin
    WSr.SerNr = sernr;
    if (ReadFirstMain(WSr,1,true)) then begin
      if (blank(WSr.Name)) then begin
        goto LGetLinkToStruct;
      end;
      tstr = WSr.Name;
      if (right(tstr,1)!="/") then begin
        tstr = tstr & "/";
      end;
      res = tstr & res;
      if (callfromweb) then begin
        if (WSr.Type==4 and firstnode) then begin //if redirect to country type link
          country = ToolWebNGGetCountry;
          if (nonblank(country)) then begin
            appendcountry = country;
          end;
        end;
      end;
      sernr = WSr.Mother;
      firstnode = false;
    end else begin
      sernr = -1;
      goto LGetLinkToStruct;
    end;
  end;

  if (len(res)!=0) then begin
    if (left(res,1)!="/") then begin
      res = "/" & res;
    end;
  end;

  if (nonblank(appendcountry)) then begin
    if (StructurePathValid(CleanPath(res & appendcountry & "/"))) then begin
      res = res & appendcountry & "/";
    end;
  end;

LGetLinkToStruct:;
  GetLinkToStruct = res;
  return;
end;

global
function string 255 GetStartStructLink()
begin
  record WebNGStructVc WSr;
  string 255 startstruct,sitetitle,headerelement,footerelement,stylesheet,analyticsid,errorpage;
  longint loginnode,selectcountry;
  integer prependtitle;
  boolean allowlogin;
  string 255 res;

  GetWebSiteSettings(startstruct,sitetitle,headerelement,footerelement,stylesheet,analyticsid,prependtitle,allowlogin,errorpage,loginnode,selectcountry);
  res = GetLinkToStruct(startstruct,true);
  
  GetStartStructLink = res;
  return;
end;

global
function string 255 GetCountrySelectStructLink()
begin
  record WebNGStructVc WSr;
  string 255 startstruct,sitetitle,headerelement,footerelement,stylesheet,analyticsid,errorpage;
  longint loginnode,selectcountry;
  integer prependtitle;
  boolean allowlogin;

  GetWebSiteSettings(startstruct,sitetitle,headerelement,footerelement,stylesheet,analyticsid,prependtitle,allowlogin,errorpage,loginnode,selectcountry);
  GetCountrySelectStructLink = GetLinkToStruct(selectcountry,true);
  return;
end;

global
function string 255 GetLoginPageStructLink()
begin
  record WebNGStructVc WSr;
  string 255 startstruct,sitetitle,headerelement,footerelement,stylesheet,analyticsid,errorpage;
  longint loginnode,selectcountry;
  integer prependtitle;
  boolean allowlogin;

  GetWebSiteSettings(startstruct,sitetitle,headerelement,footerelement,stylesheet,analyticsid,prependtitle,allowlogin,errorpage,loginnode,selectcountry);
  GetLoginPageStructLink = GetLinkToStruct(loginnode,true);
  return;
end;

global
function string 255 GetLinkToContentItem(longint sernr,boolean callfromweb)
begin
  record WebNGContentVc WCr;
  record WebNGContentStyleVc WCSr;
  string 255 res;
  
  res = "";
  WCr.SerNr = sernr;
  if (ReadFirstMain(WCr,1,true)) then begin
    WCSr.Code = WCr.ContentStyle;
    if (ReadFirstMain(WCSr,1,true)) then begin
      if (nonblank(WCSr.HandlerAppNode)) then begin
        res = GetLinkToStruct(WCSr.HandlerAppNode,callfromweb);
        if (nonblank(res)) then begin
          //append country
          if (false and nonblank(WCr.Country)) then begin
            res = res & WCr.Country & "/";
          end;
          //append sernr
          res = res & sernr & "/";
        end;
      end;
    end;
  end;
  
  GetLinkToContentItem = res;
  return;
end;

global
function string 255 GetLinkToItemBrowse(boolean callfromweb)
begin
  record WebNGShopBlock WSb;
  string 255 res;
  
  res = "";
  BlockLoad(WSb);
  res = GetLinkToStruct(WSb.NodeToItemBrowse,callfromweb);
  
  GetLinkToItemBrowse = res;
  return;
end;

global
function string 255 GetLinkToItemOrder(boolean callfromweb)
begin
  record WebNGShopBlock WSb;
  string 255 res;
  
  res = "";
  BlockLoad(WSb);
  res = GetLinkToStruct(WSb.NodeToItemOrder,callfromweb);
  
  GetLinkToItemOrder = res;
  return;
end;

global
procedure RequireSessionState()
begin
  PutSessionString("SessionStateRequired","1");
  return;
end;

function boolean IsSessionStateRequired()
begin
  boolean res;
  
  if (GetSessionString("SessionStateRequired")=="1") then begin
    res = true;
  end else begin
    res = false;
  end;
  IsSessionStateRequired = res;
  return;
end;

function string 255 ConvertAmpersands(string args)
begin
  string 255 res,c;
  integer i,cnt;
  
  cnt = len(args);
  for (i=0;i<cnt;i=i+1) begin
    c = mid(args,i,1);
    if (false and c=="&") then begin //disconnected because this should only happen when writing urls into tag attributes, not during redirection
      res = res & "&amp;";
    end else begin
      res = res & c;
    end;
  end;
  
  ConvertAmpersands = res;
  return;
end;

procedure AddCountryAndLanguage(var string path)
begin
  string 255 node,mpath,country,language,newpath;
  record WebNGCountryVc WCr;
  record WebNGLanguageVc WLr;
  
  mpath = path;
  while (Left(mpath,1)=="/") begin
    mpath = Right(mpath,Len(mpath)-1);
  end;
  node = removenextnode(mpath);
  WCr.Code = node;
  if (ReadFirstMain(WCr,1,true)) then begin
    country = WCr.Code;
    node = removenextnode(mpath);
  end;
  if (blank(country)) then begin
    country = ToolWebNGGetCountry;
  end;
  if (country=="global") then begin
    country = "";
  end;
  WLr.Code = node;
  if (ReadFirstMain(WLr,1,true)) then begin
    language = LowerCase(WLr.Code);
    node = "";
  end;
  
  WCr.Code = country;
  if (ReadFirstMain(WCr,1,true)) then begin
    newpath = AddStr("",country,"/");
  end;
  WLr.Code = language;
  if (ReadFirstMain(WLr,1,true)) then begin
    newpath = AddStr(newpath,language,"/");
  end;
  newpath = AddStr(newpath,node,"/");
  newpath = AddStr(newpath,mpath,"/");
  if (Left(path,1)=="/") then begin
    newpath = "/" & newpath;
  end;
  if (StructurePathValid(CleanPath(newpath))) then begin
    path = newpath;
  end;
  
  return;
end;

//SECTION: FORMATTING LINK FOR OUTPUT TO WEB
global
function string 255 FormatLink(string path,string args,boolean directlink,boolean callfromweb)
begin
  string 255 newpath,newargs;
  transaction boolean gLoggedOut;
  boolean nocookies,testmode;
  
  newpath = path;
  if (blank(newpath) and blank(args)) then begin
    newpath = "#";
  end else begin
    if (directlink==false) then begin
      AddCountryAndLanguage(newpath);
      if (UseHwindexHtm) then begin
        if (right(newpath,1)!="/") then begin
          newpath = newpath & "/";
        end;
        newpath = newpath & "hwindex.htm";
      end else begin
        if (right(newpath,1)=="/") then begin
          newpath = left(newpath,len(newpath) - 1);
        end;
      end;
    end;
  end;
  
  newargs = args;
  if (callfromweb) then begin
    if (blank(GetCookie("HSESSION")) and blank(GetCookie("langcode")) and blank(GetCookie("country"))) then begin
      nocookies = true;
    end else begin
      nocookies = false;
    end;
    if (nonblank(WebGetArg("test"))) then begin
      testmode = true;
    end else begin
      testmode = false;
    end;
    
//    if (nocookies or testmode) then begin
//      if (len(newargs)==0) then begin
//        newargs = "?";
//      end else begin
//        newargs = newargs & "&";
//      end;
//      if (nocookies and (IsSessionStateRequired or (WebLoginStatus==3 and gLoggedOut==false))) then begin //if an app requested we maintain session state
//        newargs = newargs & "HSESSION=" & GetWebSessionUUID & "&";
//      end;
//      if (testmode) begin
//        newargs = newargs & "test=" & WebGetArg("test") & "&";
//      end;
//      newargs = newargs & "lc=" & CurrentWebLang;
//      newargs = newargs & "&cc=" & ToolWebNGGetCountry;
//      if (nocookies and WebLoginStatus==3 and gLoggedOut==false) then begin
//        newargs = newargs & "&sessionid=" & WebGetArg("sessionid");
//      end;
//    end;
//    if (nonblank(WebGetArg("forcelc"))) then begin
//      if (len(newargs)==0) then begin
//        newargs = "?";
//      end else begin
//        newargs = newargs & "&";
//      end;
//      newargs = newargs & "forcelc=" & WebGetArg("forcelc");
//    end;
  end;

  if (len(newargs)>0) then begin
    if (left(newargs,1)=="&") then begin
      newargs = mid(newargs,1,255);
    end;
    if (left(newargs,1)!="?") then begin
      newargs = "?" & newargs;
    end;
    newpath = newpath & newargs;
  end;
  
  FormatLink = newpath;
  return;
end;

global
function string 255 FormatSimpleLink(string path,boolean callfromweb)
begin
  FormatSimpleLink = FormatLink(path,"",false,callfromweb);
  return;
end;

global
function string 255 FormatSimpleLinkWithArg(string path,string args,boolean callfromweb)
begin
  FormatSimpleLinkWithArg = FormatLink(path,args,false,callfromweb);
  return;
end;

//CUST-BEGIN
function string 255 GetWebNGTranslateHeader(string sernr)
begin
  record WebNGTranslateVc WTr;
  string 255 res;

  res = "";

  WTr.Code = sernr;
  WTr.FileName = 1;
  //stopalert("asdf");
  WTr.LangCode = CurrentWebLang;
  if readfirstmain(WTr,3,true) then begin
    res = WTr.Comment;
  end;
  GetWebNGTranslateHeader = res;
  return;
end;



global
procedure ShowCommentContent(string serstr)
begin
  record WebNGBlogCommentVc WebComr;
  longint sernr;
  string 255 tstr,link;
  Boolean TrHs,foundf;
  integer errorflags,cnt,page,pagecnt,comcnt,sStart,sEnd,count;
  roundmode res;

  res.decimals = 0;
  res.direction = kRoundingDirectionToFromPosInf; // kRoundingDirectionToFromZero
  res.mode = kRoundingModeHalfUp; //   kRoundingModeTruncate,kRoundingModeHalfUp,kRoundingModeHalfDown, kRoundingModeToEven, kRoundingModeToOdd,
  res.step =   kRoundingStepNone; // kRoundingStep5, kRoundingStep25
  
  count = 6;
  sernr = StringToLongInt(serstr);
  page = StringToLongInt(WebGetArg("compage"));
  if page == -1 then begin
    page = 1;
  end;
  
  comcnt = RecordsInIndex("WebNGBlogCommentVc","ContActSerNr:" & sernr);
  pagecnt = comcnt/count;
  //stopalert(comcnt & " skaits");
  if (count * pagecnt) <> comcnt then begin
    pagecnt=pagecnt+1;
  end;
  sStart = (page * count) - count;
  sEnd = (page * count);

//  WebOutStringFormatNL("<div id=""comment-head""><a href=""../news/" & sernr &""">" & toolwebngtranslatetext(24175) & GetWebNGTranslateHeader(sernr) & "</a></div>");
  Trhs = true;
  WebOutStringFormatNL("<div id=""blog-coms"">"); 
  //stopalert("nuuu " & GetWebNGTranslateHeader(sernr));
  WebOutStringFormatNL("<div id=""blog-coms-head"">" & toolwebngtranslatetext(22001) & "<a href=""../news/" & sernr &""">" & GetWebNGTranslateHeader(sernr) & "</a></div>");  
  
  foundf = false;
  WebComr.SerNr = -1;
  
  cnt = 1;
  while (LoopKey("ContActSerNr:" & sernr,WebComr,1,TrHs) and (cnt <= sEnd))begin
    if WebComr.AcceptFlag==0 then begin
	  if WebComr.TextType == 1 then begin
	    if sStart < cnt then begin
          WebOutStringFormatNL("<div id=""blog-comment-head"">");  
          WebOutStringFormatNL("<div id=""blog-comment""><b>" & WebComr.UserName & "</b></div><div id=""blog-comtime"">" & WebComr.TransDate & "  " & WebComr.TransTime & "</div>");
          WebOutStringFormatNL("</div>");  
          WebOutStringFormatNL("<p>");  
        
          WebOutText(WebComr,true,"");
          WebOutStringFormatNL(tstr);
          WebOutStringFormatNL("</p>");  
          foundf = true;
        end;
		cnt = cnt + 1;
      end;
	    
    end;
  end;
  if foundf==false then begin
    WebOutStringFormatNL("<div id=""blog-comment-head"">");
    WebOutStringFormatNL("<p>" & toolwebngtranslatetext(21044) & "<p>");
    WebOutStringFormatNL("</div>");
    WebOutStringFormatNL("<br>");
  end;

  if (pagecnt > 1) then begin
    WebOutStringFormat("<div id=""comnav"">");
    for (cnt = 1; cnt <= pagecnt; cnt = cnt + 1) begin
      if (page <> cnt) then begin
        WebOutTagOpen("<a href=""" & WebGetArg("contpath") & "?sernr=" & serstr & "&detlevel=2" & "&compage=" & cnt & """>");
        WebOutStringFormat(cnt);
        WebOutTagClose("</a>");
      end else begin
        WebOutStringFormat(cnt);
      end;
    end;
    WebOutStringFormat("</div>");
  end;  
  
  AddComment(false,sernr,"WebJALComment.hal","");
  
return;
end;

global
function boolean ContentHasImage(record WebNGContentVc WCr)
begin
  record Attach2Vc Attachr;
  record RLinkVc RLr;
  integer i;
  boolean res;
  
  i = 1;
  res = false;
  while (ReadRecordLink(WCr,i,Attachr,RLr) and res==false) begin
    if (FileNameIsImage(Attachr.FileName) or FileNameIsVideo(Attachr.FileName)) then begin
      res = true;
    end;
    i = i+1;
  end;

  ContentHasImage = res;
  return;
end;



function string 255 GetFileExtension(string filename)
begin
  string 255 ext;
  if (mid(filename,len(filename)-4,1)==".") then begin
    ext = right(filename,3);
  end else begin
    if (mid(filename,len(filename)-5,1)==".") then begin
      ext = right(filename,4);
    end;
  end;
  GetFileExtension = ext;
  return;
end;

procedure SetContentTypeForExtension(string ext)
begin
  switch (ext) begin
    case "css" : WebSetContentType("text/css");
    case "jpg" : WebSetContentType("image/jpeg");
    case "jpeg" : WebSetContentType("image/jpeg");
    case "png" : WebSetContentType("image/png");
    case "gif" : WebSetContentType("image/gif");
    case "htc" : WebSetContentType("text/x-component");
    case "exe" : WebSetContentType("application/binary");
    case "bin" : WebSetContentType("application/binary");
    case "obj" : WebSetContentType("application/binary");
    case "hpf" : WebSetContentType("application/binary");
    case "hob" : WebSetContentType("application/binary");
    case "dat" : WebSetContentType("application/binary");
    case "swf" : WebSetContentType("application/x-shockwave-flash");
    case "pdf" : WebSetContentType("application/pdf");
    case "zip" : WebSetContentType("application/zip");
    case "txt" : WebSetContentType("text/plain");
    case "xml" : WebSetContentType("text/xml");
    case "xsl" : WebSetContentType("text/xsl");
    case "htm" : WebSetContentType("text/html");
    case "html" : WebSetContentType("text/html");
    otherwise
      WebSetContentType("application/binary");
  end;
  return;
end;

procedure SendAttachedNote(record NotepadVc Noter,string filename,boolean downloadf)
begin
  string 255 ext;
  
  ext = GetFileExtension(filename);
    
  SetContentTypeForExtension(ext);
    
  if (downloadf) then begin
    WebSetContentDisposition("attachment; filename=" & filename);
  end else begin
    WebSetContentDisposition("inline; filename=" & filename);
  end;

  WebOutText(Noter,false,"");
  
  return;
end;

global
procedure SendAttachedFile(record Attach2Vc Attachr,boolean downloadf)
begin
  string 255 ext;
  
  if (Attachr.SerNr>0) then begin
    ext = GetFileExtension(Attachr.FileName);
    
    SetContentTypeForExtension(ext);
    //stopalert(ext & " jaas");
    if (downloadf) then begin
      WebSetContentDisposition("attachment; filename=" & Attachr.FileName);
    end else begin
      WebSetContentDisposition("inline; filename=" & Attachr.FileName);
    end;
    //WebOutStringFormatNL("<img src=""" & 
	WebOutAttachment(Attachr.SerNr) ;
	//& """/>");
  end;
  
  return;
end;

global
procedure ContentOutImages(string sernr)
begin
  record WebNGContentVc WCr;
  record Attach2Vc Attachr;
  record RLinkVc RLr;
  string 255 link,tlink,FName,ext;
//  integer num;
  integer i,page,pagecnt,comcnt,sStart,sEnd,count,colcnt,rowcnt,j;
  //boolean res;

  roundmode res;

  res.decimals = 0;
  res.direction = kRoundingDirectionToFromPosInf; // kRoundingDirectionToFromZero
  res.mode = kRoundingModeHalfUp; //   kRoundingModeTruncate,kRoundingModeHalfUp,kRoundingModeHalfDown, kRoundingModeToEven, kRoundingModeToOdd,
  res.step =   kRoundingStepNone; // kRoundingStep5, kRoundingStep25
  
  WCr.SerNr = sernr;
  if readfirstmain(WCr,1,true) then begin
    //sernr = StringToLongInt(serstr);
    page = StringToLongInt(WebGetArg("galpage"));
    if page < 1 then begin
      page = 1;
    end;
    i = 1;
    count=0;
    while ReadRecordLink(WCr,i,Attachr,RLr) begin
      if FileNameIsImage(Attachr.FileName) then begin
        count = count + 1;
      end;
    i = i + 1;
    end;
    comcnt = count;
    count = 12;
    pagecnt = comcnt/count;
    if (count * pagecnt) <> comcnt then begin
      pagecnt=pagecnt+1;
    end;
    sStart = (page * count) - count;
    sEnd = (page * count);
   /*
    if (pagecnt > 1) then begin
      WebOutStringFormat("<div id=""comnav"">");
      for (i = 1; i <= pagecnt; i = i + 1) begin
        if (page <> i) then begin
          WebOutStringFormatNL("<a href=""" & FormatSimpleLink(WebGetArg("path"),false) & "?galpage=" & i & """>" & i & "</a>");
        end else begin
          WebOutStringFormat(i);
        end;
      end;
      WebOutStringFormat("</div>");
    end;
*/
    i = 1;
    //res = false;
    WebOutTagOpen("<div id=""gallery_thumblist"">");

    count = 1;
    j=0;
    while (ReadRecordLink(WCr,i,Attachr,RLr) and (count <= sEnd)) begin
      
      if (sStart < count) then begin
        if FileNameIsImage(Attachr.FileName) then begin
          WebOutStringFormatNL("<a name=""" & Attachr.FileName & """ rel=""shadowbox[" & WCr.SerNr & "]"" href=""/WebShowImg.hal?sernr=" & WCr.SerNr & "&num=" & i & """>");//& FormatSimpleLink(WebGetArg("path"),false) & "/hwindex.htm?showimg=true&num=" & i & """>");
          WebOutStringFormatNL("<img src=""/WebShowImg.hal?sernr=" & WCr.SerNr & "&num=" & i & """ onerror=""changepicture(this);"" alt=""" & Attachr.FileName & """>");
          WebOutStringFormatNL("</a><input type=""hidden"" id=""imgcom" & (j) & """ value=""" & RLr.Comment & """>");
          count = count + 1;
		  j = j + 1;
        end;
      end else begin
        count = count + 1;
      end;
      i = i + 1;
    end;


    WebOutTagClose("</div>");
	if (pagecnt > 1) then begin
      WebOutStringFormat("<div id=""comnav"">");
      for (i = 1; i <= pagecnt; i = i + 1) begin
        if (page <> i) then begin
          WebOutStringFormatNL("<a href=""" & FormatSimpleLink(WebGetArg("path"),false) & "?galpage=" & i & """> [" & i & "] </a>");
        end else begin
          WebOutStringFormat(i);
        end;
      end;
      WebOutStringFormat("</div>");
    end;
  end;
  return;
end;

global webpublic
procedure WebShowImg()
begin
  record WebNGContentVc WCr;
  record RLinkVc RLr;
  record Attach2Vc Attachr;
  //stopalert("nuuu");
  WCr.SerNr = StringToLongInt(WebGetArg("sernr"));
  if readfirstmain(WCr,1,true) then begin
    if readrecordLink(WCr,StringToLongInt(WebGetArg("num")),Attachr,RLr) then begin
	  SendAttachedFile(Attachr,false);
	end;
  end;


return;
end;

global
procedure ContentOutOneImage(record WebNGContentVc WCr,integer num)
begin
  record Attach2Vc Attachr;
  record NotePadVc Noter;
  record RLinkVc RLr;
  string 255 link,tlink,FName,ext;
  integer i;
  boolean res,testf;
  
  i = 1;
  res = false;
  while (ReadRecordLink(WCr,num,Attachr,RLr) and res==false) begin
    SendAttachedFile(Attachr,false);
	res = true;
  end;

  return;
end;

function boolean getCourseCode(string sernr,var string cc)
begin
  boolean res;
  record CourseEventVc CEr;
  row CourseEventVc CErw;
  record WebNGContentVc WCr;
  record RLinkVc RLr;
  integer rwcnt,i;
  string 30 cust;

  cust = CurrentCust;
  WCr.SerNr = sernr;
  res = true;
  //i=1;
  //stopalert(cust & "kkk");
  if readfirstmain(WCr,1,true) then begin
    //stopalert("ir");
    if ReadRecordLink(WCr,1,CEr,RLr) then begin
      cc = CEr.SerNr;
      rwcnt = MatRowCnt(CEr);
      for (i = 0; i < rwcnt ; i = i + 1) begin
        MatRowGet(CEr,i,CErw);
        if CErw.CustCode == cust then begin
          res = false;
          i = rwcnt;
        end;
      end;
    end;
  end;
  getCourseCode=res;
  return;
end;
//CUST-END



function Boolean ToolWebOutTranslation(string code,string lang,Integer filename,var Boolean lastwastag,record WebNGContentStyleVc WCSr,Date specdate,Boolean printoverview,string linkstr)
begin
//  transaction integer level;
//  transaction boolean line;
  record WebNGTranslateVc WebNGTranslater;
  row WebNGTranslateVc WebNGTranslaterw;
  string 200 ckey,piclink;
  string 5 pcnt,ncnt;
  Integer i,rwcnt;
  Boolean foundf,testf;
  Boolean res;
  string 10 CourseCode;
  string 100 outdate1;

  outdate1 = datetostring(specdate, "DD.MM");

  res = false;
  foundf = true;
  ckey = "ElementLangCode:";
  switch (filename) begin
    case 0: ckey = "ElementLangCode:" & code;
    case 1: ckey = "ContentLangCode:" & code;
    case 2: ckey = "ProductLangCode:" & code;
  end;
  WebNGTranslater.LangCode = lang;
  WebNGTranslater.Sorting = -1;
  while (LoopKey(ckey,WebNGTranslater,2,foundf)) begin
    if (WebNGTranslater.LangCode!=lang) then begin
      foundf = false;
    end;
    testf = foundf;
    if (WebNGTranslater.FileName!=filename) then begin // Speed improvement possible if FileName is placed in a higher segment of the key 
      testf = false;
    end;
    if (testf) then begin
      if (SizeTextCnt(WebNGTranslater)>0) then begin
//        if (lastwastag) then begin
//          WebOutString(chr(13) & chr(10));
//          WebOutIndent(level);
//          line = true;
//          lastwastag = false;
//        end;
//CUST-BEGIN
        if (printoverview) then begin
          piclink = GetFirstImage(WebNGTranslater.Code,linkstr);
          rwcnt = MatRowCnt(WebNGTranslater);
          if (WCSr.ListViewFlag==0) then begin
            if piclink <> "" then begin 
              //WebOutStringFormatNL("<div id=""contlistimg""><a href=""" & linkstr & """><img src=""" & piclink & """ onerror=""changepicture(this);""></a></div>");
            end;
            WebOutString("<div id=""content-detail"">");
            if (WCSr.PrintDate!=0) then begin
              WebOutString("<div id=""content-date"">");//jzs
              WebOutString("<a href=""" & linkstr & """>" & outdate1 & " </a>");
              WebOutString("</div>");//jzs
            end;
            WebOutString("<div id=""content-head"">");//jzs
            if linkstr <>"" then begin
              WebOutStringFormat("<a href=""" & linkstr & """>");
            end;
            WebOutStringFormatNL("<div class='cont_head'>" & WebNGTranslater.Comment & "</div>");
            WebOutStringFormatNL("<div class='cont_text'>");
            for (i=0;i<rwcnt;i=i+1) begin
              MatRowGet(WebNGTranslater,i,WebNGTranslaterw);
              WebOutString(WebNGTranslaterw.OverviewText);
            end;
            WebOutStringFormatNL("</div>");
            if linkstr <>"" then begin
              WebOutStringFormat("</a>");
            end;
            if WebNGTranslater.FileName==1 then begin
              //stopalert("lists");
              //WebOutStringFormatNL("<div id=""blog-head-item"">" & "<a href=""" & FormatSimpleLink(WebGetArg("path") & "/" &  WebNGTranslater.Code,true) & "?sernr=" & WebNGTranslater.Code & "&detlevel=2"" id=""comment""> " & toolwebngtranslatetext(21040) & " (" & RecordsInIndex("WebNGBlogCommentVc","ContActSerNr:" & WebNGTranslater.Code) & ")</a></div>");
            end;
            WebOutString("</div>");//jzs
            WebOutString("</div>");
          end else begin
		        if (WCSr.ListViewFlag==1) then begin
              if piclink <> "" then begin 
               // WebOutStringFormatNL("<div id=""contlistimg""><img src=""" & piclink & """ onerror=""changepicture(this);""></div>");
              end;
              WebOutString("<div id=""content-detail"">");
              if (WCSr.PrintDate!=0) then begin
                WebOutString("<div id=""content-date"">");//jzs
                WebOutString("" & outdate1 & " ");
                WebOutString("</div>");//jzs
              end;
              Randomize;
              i = Random(0,rwcnt);
              if (i>=rwcnt) then begin
                i = 0;
              end;
              MatRowGet(WebNGTranslater,i,WebNGTranslaterw);
              WebOutString(WebNGTranslaterw.OverviewText);
              WebOutString("</div>");
            end else begin
			        if (WCSr.ListViewFlag==2) then begin
                if piclink <> "" then begin 
                  WebOutStringFormatNL("<div id=""gallistimg"">");
        				  if linkstr <>"" then begin
                    WebOutStringFormat("<a href=""" & linkstr & """>");
                  end;
                  WebOutStringFormat("<img src=""" & piclink & """ onerror=""changepicture(this);"">");
                  if linkstr <>"" then begin
                    WebOutStringFormat("</a></div>");
                  end;
                end;    
                WebOutString("<div id=""content-detail"">");
                WebOutString("<div id=""content-head"">");//jzs
                if linkstr <>"" then begin
                  WebOutStringFormat("<a href=""" & linkstr & """>");
                end;
                MatRowGet(WebNGTranslater,0,WebNGTranslaterw);
                WebOutString(WebNGTranslaterw.OverviewText);
				
                if linkstr <>"" then begin
                  WebOutStringFormat("</a>");
                end;

                if (WCSr.PrintDate!=0) then begin
                  WebOutString("<div id=""content-date"">");
                  WebOutString("" & outdate1 & " ");
                  WebOutString("</div>");
                end;
                
                WebOutString("</div>");
                WebOutString("</div>");
              end else begin //pas�kumiem
                //if piclink <> "" then begin 
                //  WebOutStringFormatNL("<div id=""gallistimg""><img src=""" & piclink & """></div>");
                //end;    
                WebOutString("<div id=""content-detail"">");
                WebOutString("<div id=""content-head"">");//jzs
                if linkstr <>"" then begin
                  WebOutStringFormat("<a href=""" & linkstr & """>");
                end;
                MatRowGet(WebNGTranslater,0,WebNGTranslaterw);
                WebOutString(WebNGTranslaterw.OverviewText);
				
                if linkstr <>"" then begin
                  WebOutStringFormat("</a>");
                end;

                if (WCSr.PrintDate!=0) then begin
                  WebOutString("<div id=""content-date"">");
                  WebOutString("" & outdate1 & " ");
                  WebOutString("</div>");
                end;
                //CourseCode = getCourseCode(WebNGTranslater.Code);
                WebOutString("<div class=""log"">");
                if CurrentCust <> "" then begin
                  if getCourseCode(WebNGTranslater.Code,CourseCode) then begin
                    WebOutString("<a href=""/WebPartCourse.hal?cc=" & CourseCode & "&cpath=" & WebGetArg("path") & """>" & toolwebngtranslatetext(20090) & "</a>");
                  end else begin
                    WebOutString("<a href=""/WebDeleteFromCourse.hal?cc=" & CourseCode & "&cpath=" & WebGetArg("path") & """>" & toolwebngtranslatetext(20091) & "</a>");
                  end;
                end else begin
                  WebOutString("<a href=""" & FormatSimpleLink("/login/",true) & """>" & toolwebngtranslatetext(20085) & "</a>");
                end;
				WebOutString("</div>");
                WebOutString("</div>");
                WebOutString("</div>");
              end;
                
            end;
          end;
        end else begin
          
          if (WCSr.PrintDate!=0) then begin
            WebOutString(outdate1);
          end;
		  //stopalert("asdf");
		  
          if (WCSr.CommentFlag!=0) then begin
		    //stopalert("nav nulle");
            if (nonblank(WCSr.HeadingClass)) then begin
              WebOutTagOpen("<h1 class=""" & WCSr.HeadingClass & """>");
            end else begin
              WebOutTagOpen("<h1>");
            end;
			
            WebOutString(WebNGTranslater.Comment);
            if WebNGTranslater.FileName==1 then begin
			  //stopalert("aa");
              if WCSr.ListViewFlag == 0 then begin
			    //stopalert("asdf");
                WebOutStringFormatNL("<div id=""blog-head-item"">" & "<a href=""" & FormatSimpleLink(WebGetArg("path"),true) & "?sernr=" & WebNGTranslater.Code & "&detlevel=2"" id=""comment""> " & toolwebngtranslatetext(21040) & " (" & RecordsInIndex("WebNGBlogCommentVc","MailSerNr:" & WebNGTranslater.Code) & ")</a></div>");
              end;
            end;
            WebOutTagClose("</h1>");
          end;
		
          if WebNGTranslater.FileName==1 then begin
            if WCSr.ListViewFlag==2 then begin
			        WebOutText(WebNGTranslater,WebNGTranslater.HtmlTranslation==1,"");
              ContentOutImages(WebNGTranslater.Code);
            end else begin
              //WebOutStringFormatNL("<div id=""blog-head-item"">" & "<a href=""" & WebGetArg("path") & "hwindex.htm?sernr=" & WebNGTranslater.Code & "&detlevel=2"" id=""comment""> " & toolwebngtranslatetext(21040) & " (" & RecordsInIndex("WebNGBlogCommentVc","MailSerNr:" & WebNGTranslater.Code) & ")</a></div>");
              piclink = GetFirstImage(WebNGTranslater.Code,linkstr);
			  
              if piclink <> "" then begin 
                //WebOutStringFormatNL("<div id=""contimgbig""><img src=""" & piclink & """ onerror=""changepicture(this);""></div>");
              end; 
              WebOutText(WebNGTranslater,WebNGTranslater.HtmlTranslation==1,"");
			  WebOutStringFormatNL("<div id=""com-form"">");
              AddComment(true,WebNGTranslater.Code,"WebJALComment.hal","");
			  WebOutStringFormatNL("</div>");
            end;
			if WCSr.ListViewFlag == 3 then begin
				WebOutString("<div class=""log"">");
                if CurrentCust <> "" then begin
                  if getCourseCode(WebNGTranslater.Code,CourseCode) then begin
                    WebOutString("<a href=""/WebPartCourse.hal?cc=" & CourseCode & "&cpath=" & WebGetArg("path") & """>" & toolwebngtranslatetext(20090) & "</a>");
                  end else begin
                    WebOutString("<a href=""/WebDeleteFromCourse.hal?cc=" & CourseCode & "&cpath=" & WebGetArg("path") & """>" & toolwebngtranslatetext(20091) & "</a>");
                  end;
                end else begin
                  WebOutString("<a href=""" & FormatSimpleLink("/login/",true) & """>" & toolwebngtranslatetext(20085) & "</a>");
				  if getCourseCode(WebNGTranslater.Code,CourseCode) then begin
				    DrawEventForm(CourseCode);
				  end;
                end;
				WebOutString("</div>");
				//WebOutStringFormat("<a href=""javascript:history.back();"">" & ToolWebNGTranslateText(25509) & "</a>"); //Back
			  end;
          end else begin
            WebOutText(WebNGTranslater,WebNGTranslater.HtmlTranslation==1,"");
          end;
            
//CUST-END
        end;
        res = true;
      end;
    end;
  end;
  ToolWebOutTranslation = res;
  return;
end;

// Same logic as above. Sad to have two functions....
function Boolean ToolWebFindTranslation(string code,string lang,Integer filename,var record WebNGTranslateVc WTr)
begin
  string 200 ckey;
  Boolean foundf,testf;
  Boolean res;
  
  res = false;
  foundf = true;
  ckey = "ElementLangCode:";
  switch (filename) begin
    case 0: ckey = "ElementLangCode:" & code;
    case 1: ckey = "ContentLangCode:" & code;
    case 2: ckey = "ProductLangCode:" & code;
    case 4: ckey = "PageLangCode:" & code;
  end;
  RecordNew(WTr);
  ResetLoop(WTr);
  if (lang==";;;") then begin
    WTr.LangCode = "";
  end else begin
    WTr.LangCode = lang;
  end;
  WTr.Sorting = -1;
  while (LoopKey(ckey,WTr,2,foundf)) begin
    if (lang!=";;;" and WTr.LangCode!=lang) then begin
      foundf = false;
    end;
    testf = foundf;
    if (WTr.FileName!=filename) then begin // Speed improvement possible if FileName is placed in a higher segment of the key 
      testf = false;
    end;
    if (testf) then begin
      if (SizeTextCnt(WTr)>0) then begin
        res = true;
        foundf = false;
      end;
    end;
  end;
  ToolWebFindTranslation = res;
  return;
end;

global
procedure ToolWebOutElementTextFormat(record WebNGElementVc WEr)
begin
  transaction boolean lastwastag;
  record WebNGContentStyleVc WCSr;
  
  RecordNew(WCSr);
  if (ToolWebOutTranslation(WEr.Code,CurrentWebLang,0,lastwastag,WCSr,CurrentDate,false,"")==false) then begin
    if (ToolWebOutTranslation(WEr.Code,WEr.DefLangCode,0,lastwastag,WCSr,CurrentDate,false,"")==false) then begin
      if (WEr.LogAccess!=0) then begin LogWebNGElementAccess(WEr.Code,"--"); end;
// Error page
    end else begin
      if (WEr.LogAccess!=0) then begin LogWebNGElementAccess(WEr.Code,WEr.DefLangCode); end;
    end;
  end else begin
    if (WEr.LogAccess!=0) then begin LogWebNGElementAccess(WEr.Code,CurrentWebLang); end;
  end;
  return;
end;

global
procedure ToolWebOutContentTextFormat(record WebNGContentVc WCr,Boolean printoverview)
begin
  transaction boolean lastwastag;
//CUST-BEGIN
  string 255 tstr,link;
  record WebNGContentStyleVc WCSr;
  
  string 25 detlevel,showimg;
  integer num;
  detlevel = WebGetArg("detlevel");
  showimg = WebGetArg("showimg");
  num = StringToLongint(WebGetArg("num"));
  if showimg == "false" or showimg=="" then begin
    WCSr.Code = WCr.ContentStyle;
    if (ReadFirstMain(WCSr,1,true)) then begin end;

    if ((detlevel != "") and (detlevel!="1")) then begin 
      ShowCommentContent(WCr.SerNr);
    end else begin  
    if (ToolWebOutTranslation(WCr.SerNr,CurrentWebLang,1,lastwastag,WCSr,WCr.SpecDate,printoverview,"")==false) then begin
      if (ToolWebOutTranslation(WCr.SerNr,WCr.DefLangCode,1,lastwastag,WCSr,WCr.SpecDate,printoverview,"")==false) then begin
  // Error page
        end;
      end;
    end;
  end else begin
    ContentOutOneImage(WCr,num);
  end;  
//CUST-END
  lastwastag = false;
  return;
end;

//CUST-BEGIN
global
procedure WebOutContentTextFormat2(record WebNGContentVc WCr,Boolean printoverview,string linkstr)//jzs
begin
  transaction boolean lastwastag;
  string 255 tstr;
  record WebNGContentStyleVc WCSr;
  string 25 detlevel;
  //stopalert("sauc");
  detlevel = WebGetArg("detlevel");
  WCSr.Code = WCr.ContentStyle;
  if (ReadFirstMain(WCSr,1,true)) then begin end;
 
    if (ToolWebOutTranslation(WCr.SerNr,CurrentWebLang,1,lastwastag,WCSr,WCr.SpecDate,printoverview,linkstr)==false) then begin
      if (ToolWebOutTranslation(WCr.SerNr,WCr.DefLangCode,1,lastwastag,WCSr,WCr.SpecDate,printoverview,linkstr)==false) then begin
// Error page
    end;
  end;
  lastwastag = false;
  return;
end;
//CUST-END

global
function boolean ToolWebOutProductInfoTextFormat(record WebNGProductVc WPr)
begin
  transaction boolean lastwastag;
  string 255 tstr;
  record WebNGContentStyleVc WCSr;
  boolean res;

  res = true;
  RecordNew(WCSr);
  WCSr.CommentFlag = 1;
  if (ToolWebOutTranslation(WPr.Code,CurrentWebLang,2,lastwastag,WCSr,CurrentDate,false,"")==false) then begin
    if (ToolWebOutTranslation(WPr.Code,WPr.DefLangCode,2,lastwastag,WCSr,CurrentDate,false,"")==false) then begin
      res = false;
    end;
  end;
  lastwastag = false;
  ToolWebOutProductInfoTextFormat = res;
  return;
end;

global
function Boolean FindMatchingContentTranslation(record WebNGContentVc WCr,var record WebNGTranslateVc WTr)
begin
  Boolean res;
  
  res = false;
  if (ToolWebFindTranslation(WCr.SerNr,CurrentWebLang,1,WTr)) then begin
    res = true;
  end else begin
    if (ToolWebFindTranslation(WCr.SerNr,WCr.DefLangCode,1,WTr)) then begin
      res = true;
    end;
  end;
  FindMatchingContentTranslation = res;
  return;
end;

global
function Boolean FindWebPageTranslation(record WebNGPageVc WPr,var record WebNGTranslateVc WTr)
begin
  Boolean res;
  
  res = false;
  if (ToolWebFindTranslation(WPr.Code,CurrentWebLang,4,WTr)) then begin
    res = true;
  end else begin
    if (ToolWebFindTranslation(WPr.Code,WPr.DefLangCode,4,WTr)) then begin
      res = true;
    end else begin
      if (ToolWebFindTranslation(WPr.Code,";;;",4,WTr)) then begin //any language
        RecordNew(WTr);
        ResetLoop(WTr);
        res = true;
      end;
    end;
  end;
  
  FindWebPageTranslation = res;
  return;
end;

//SECTION: REDIRECT TOOLS
function string 255 GetWebHostAndPort(boolean secure)
begin
  record ProgramStatusBlock PSb;
  string 255 res;
  longint l;
  
  res = "";
  if (secure==WebSecureMode) then begin
    res = WebHost;
  end else begin
    res = WebHost;
    l = InString(res,":");
    if (l!=0) then begin
      res = left(res,l-1);
    end;
    
    BlockLoad(PSb);
    if (secure) then begin
      if (PSb.httpsPort!=443) then begin
        res = res & ":" & PSb.httpsPort;
      end;
    end else begin
      if (PSb.httpPort!=80) then begin
        res = res & ":" & PSb.httpPort;
      end;
    end;
  end;
    
  GetWebHostAndPort = res;
  return;
end;

procedure ShowRedirectHtml(string link,boolean secure)
begin
  string 255 mlink,hostport;
  transaction boolean gDontOutputHTMLDoctype;
  
  mlink = link;
  if (gDontOutputHTMLDoctype==false) then begin
    WebOutStringFormatNL("<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01//EN"" ""http://www.w3.org/TR/html4/strict.dtd"">");
  end;
  WebOutTagOpen("<html>");
  WebOutTagOpen("<head>");
  WebOutStringFormatNL("<title>302 tyd Redirect</title>");
  WebOutStringFormat("<meta http-equiv=""refresh"" content=""0; url=" & mlink & """>");
  WebOutTagClose("</head>");
  WebOutTagOpen("<body>");
  WebOutTagOpen("<script>");
  WebOutStringFormatNL("document.location = " & mlink & "");
  WebOutTagClose("</script>");
  hostport = "";
  if (InString(mlink,"http:")==0 and InString(mlink,"https:")==0) then begin
    if (secure) then begin
      hostport = "https://";
    end else begin
      hostport = "http://";
    end;
    hostport = hostport & GetWebHostAndPort(secure);
  end;
  WebOutStringFormat(ToolWebNGTranslateText(25417) & " "); //If your browser does not automatically redirect you in 5 seconds, please
  WebOutStringFormat("<a href=""");
  WebOutStringFormat(hostport);
  WebOutStringFormat(mlink);
  if (secure!=WebSecureMode) then begin
    mlink = hostport & mlink;
  end;
  WebOutStringFormat(""">");
  WebOutStringFormat(ToolWebNGTranslateText(25418)); //Click here
  WebOutStringFormat("</a>");
  WebOutTagClose("</body>");
  WebOutTagClose("</html>");
  SetHttpRedirect(mlink);
  return;
end;

procedure DetectBrowserOS(var string OSName,var string OSVersion)
begin
  array string 255 a_os;
  integer i,alen;
  string 255 browserstr;
  
  OSName = "";
  OSVersion = "";
  
  browserstr = WebAgent;

  a_os[0] = "iPad";
  a_os[1] = "iPhone";
  a_os[2] = "iPod";
  alen = 3;
  
  for (i=0;i<alen;i=i+1) begin
    if (InString(browserstr,a_os[i])>0) then begin
      OSName = "iOS";
      goto LRecogniseOS;
    end;
  end;
  
  a_os[0] = "Android";
  alen = 1;
  
  for (i=0;i<alen;i=i+1) begin
    if (InString(browserstr,a_os[i])>0) then begin
      OSName = "Android";
      if (a_os!="Android") then begin
        OSVersion = a_os[i];
      end;
      goto LRecogniseOS;
    end;
  end;  

  a_os[0] = "mac";
  a_os[1] = "nt";
  a_os[2] = "win";
  alen = 3;
  
  for (i=0;i<alen;i=i+1) begin
    if (InString(browserstr,a_os[i])>0 and InString(browserstr,"linux")==0) then begin
      OSName = a_os[i];
      switch (a_os[i]) begin
        case "win":
          if (InString(browserstr,"95")>0) then begin
            OSVersion = "95";
            goto LRecogniseOS;
          end;
          if (InString(browserstr,"9x 4.9")>0) then begin
            OSVersion = "me";
            goto LRecogniseOS;
          end;
          if (InString(browserstr,"98")>0) then begin
            OSVersion = "98";
            goto LRecogniseOS;
          end;
          if (InString(browserstr,"2000")>0) then begin
            OSVersion = "5.0";
            OSName = "nt";
            goto LRecogniseOS;
          end;
          if (InString(browserstr,"xp")>0) then begin
            OSVersion = "5.1";
            OSName = "nt";
            goto LRecogniseOS;
          end;
          if (InString(browserstr,"2003")>0) then begin
            OSVersion = "5.2";
            OSName = "nt";
            goto LRecogniseOS;
          end;
          if (InString(browserstr,"vista")>0) then begin
            OSVersion = "6.0";
            OSName = "nt";
            goto LRecogniseOS;
          end;
          if (InString(browserstr,"ce")>0) then begin
            OSVersion = "CE";
            goto LRecogniseOS;
          end;
        case "nt":
          if (InString(browserstr,"nt 6.1")>0) then begin
            OSVersion = "6.1";
            goto LRecogniseOS;
          end;
          if (InString(browserstr,"nt 6.0")>0) then begin
            OSVersion = "6.0";
            goto LRecogniseOS;
          end;
          if (InString(browserstr,"nt 5.2")>0) then begin
            OSVersion = "5.2";
            goto LRecogniseOS;
          end;
          if (InString(browserstr,"nt 5.1")>0 or InString(browserstr,"xp")>0) then begin
            OSVersion = "5.1";
            goto LRecogniseOS;
          end;
          if (InString(browserstr,"nt 5")>0 or InString(browserstr,"2000")>0) then begin
            OSVersion = "5.0";
            goto LRecogniseOS;
          end;
          if (InString(browserstr,"nt 4")>0) then begin
            OSVersion = "4";
            goto LRecogniseOS;
          end;
          if (InString(browserstr,"nt 3")>0) then begin
            OSVersion = "3";
            goto LRecogniseOS;
          end;
        case "mac":
          if (InString(browserstr,"os x")>0) then begin
            OSVersion = "10";
            goto LRecogniseOS;
          end;
          if (InString(browserstr,"saf")>0 or InString(browserstr,"cam")>0) then begin
            OSVersion = "10";
            goto LRecogniseOS;
          end;
      end;
    end;
  end;
  
  a_os[0] = "FreeBSD";
  a_os[1] = "OpenBSD";
  a_os[2] = "NetBSD";
  a_os[3] = "BSD";
  a_os[4] = "UnixWare";
  a_os[5] = "Solaris";
  a_os[6] = "SUNOS";
  a_os[7] = "SUN4";
  a_os[8] = "SUN5";
  a_os[9] = "SUNi86";
  a_os[10] = "SUN";
  a_os[11] = "IRIX5";
  a_os[12] = "IRIX6";
  a_os[13] = "IRIX";
  a_os[14] = "HPUX9";
  a_os[15] = "HPUX10";
  a_os[16] = "HPUX11";
  a_os[17] = "HPUX";
  a_os[18] = "HP-UX";
  a_os[19] = "AIX1";
  a_os[20] = "AIX2";
  a_os[21] = "AIX3";
  a_os[22] = "AIX4";
  a_os[23] = "AIX5";
  a_os[24] = "AIX";
  a_os[25] = "SCO";
  a_os[26] = "UnixWare";
  a_os[27] = "Mpras";
  a_os[28] = "Reliant";
  a_os[29] = "Dec";
  a_os[30] = "Sinix";
  a_os[31] = "Unix";  
  alen = 32;
  
  for (i=0;i<alen;i=i+1) begin
    if (InString(browserstr,a_os[i])>0) then begin
      OSName = "Unix";
      if (a_os!="Unix") then begin
        OSVersion = a_os[i];
      end;
      goto LRecogniseOS;
    end;
  end;

  a_os[0] = "Ubuntu";
  a_os[1] = "Kubuntu";
  a_os[2] = "Xubuntu";
  a_os[3] = "Mepis";
  a_os[4] = "Xandros";
  a_os[5] = "Linspire";
  a_os[6] = "Winspire";
  a_os[7] = "Sidux";
  a_os[8] = "Kanotix";
  a_os[9] = "Debian";
  a_os[10] = "OpenSuSE";
  a_os[11] = "SuSE";
  a_os[12] = "Fedora";
  a_os[13] = "Redhat";
  a_os[14] = "Slackware";
  a_os[15] = "Slax";
  a_os[16] = "Mandrake";
  a_os[17] = "Mandriva";
  a_os[18] = "Gentoo";
  a_os[19] = "Sabayon";
  a_os[20] = "Linux";
  alen = 21;

  for (i=0;i<alen;i=i+1) begin
    if (InString(browserstr,a_os[i])>0) then begin
      OSName = "Linux";
      if (a_os!="Linux") then begin
        OSVersion = a_os[i];
      end;
      goto LRecogniseOS;
    end;
  end;
  
LRecogniseOS:;
  if (OSName=="win") then begin OSName = "Windows"; end;
  if (OSName=="nt") then begin OSName = "Windows NT"; end;
  if (OSName=="mac") then begin
    if (OSVersion=="10") then begin
      OSName = "MacOSX";
    end else begin
      OSName = "Macintosh";
    end;
  end;
  return;
end;

global
function string 255 GetBrowserOperatingSystem()
begin
  string 255 res,tstr;
  
  DetectBrowserOS(res,tstr);
  
  GetBrowserOperatingSystem = res;
  return;
end;

//SECTION: GENERAL TOOLS
global
procedure AddToSortedArray(string str,string str2,var array string arr,var array string arr2,var integer arrlen)
begin
  integer i;
  string 255 c;
  
  arr[arrlen] = str;
  arr2[arrlen] = str2;
  arrlen = arrlen + 1;
  i = arrlen-1;
  while (i!=0) begin
    if (arr[i]<arr[i-1]) then begin
      c = arr[i-1];
      arr[i-1] = arr[i];
      arr[i] = c;

      c = arr2[i-1];
      arr2[i-1] = arr2[i];
      arr2[i] = c;
      i = i-1;
    end else begin
      i = 0;
    end;
  end;
  return;
end;

// HAL rewrite of the C web-function 'mailsend'
global
updating procedure WebMailSend()
begin
  Boolean found,Accs;
  LongInt mailnumber;
  record MailVc Mailr,Mail2r;
  row MailVc Mailrw;
  LongInt sernumber;
  string 255 tstr,backpage,confcode;
  
  Accs = false;
  found = false;
  sernumber = WebGetArg("sernr");
  if (sernumber==-1) then begin sernumber = 0; end;
  
  mailnumber = WebGetArg("mailnumber");
  Mailr.SerNr = mailnumber;
  
  if (mailnumber>0) then begin
    found = true;
    if (ReadFirstMain(Mailr,1,true)) then begin
      Accs = true;
      RecordCopy(Mail2r,Mailr);
    end;
  end else begin
    Accs = true;
    found = false;
    RecordNew(Mailr);
  end;
  if (Accs) then begin
    tstr = WebGetArg("from_field");
    Mailrw.RowTyp = 1;
    Mailrw.AddrCode = tstr;
    ResolveMailboxNumber(Mailrw);
    MatRowPut(Mailr,0,Mailrw);

    tstr = WebGetArg("to_field");
    Mailrw.RowTyp = 0;
    Mailrw.AddrCode = tstr;
    ResolveMailboxNumber(Mailrw);
    MatRowPut(Mailr,1,Mailrw);

    tstr = WebGetArg("cc_field");
    if (nonblank(tstr)) then begin
      Mailrw.RowTyp = 3;
      Mailrw.AddrCode = tstr;
      ResolveMailboxNumber(Mailrw);
      MatRowPut(Mailr,2,Mailrw);
    end;

    Mailr.Header = WebGetArg("subject_field");
    Mailr.SendFlag = 1;
    
    WebGetText("mail_body",Mailr);

    confcode = WebGetArg("confcode");
    backpage = WebGetArg("backpage");
    if (blank(backpage)) then begin
      backpage = "WebMailView.hal";
    end;
    if (InString(backpage,"?")>0) then begin
      backpage = backpage & "&";
    end else begin
      backpage = backpage & "?";
    end;
    if (found) then begin
      if (RecordUpdate(Mail2r,Mailr,false)) then begin end;
    end else begin
      if (RecordStore(Mailr,false)) then begin end;
      mailnumber = Mailr.SerNr;
    end;
    
    if (nonblank(WebGetArg("sessionid"))) then begin
      backpage = backpage & "sessionid=" & WebGetArg("sessionid");
    end;
    backpage = backpage & "&sernr=" & sernumber;
    backpage = backpage & "&mailnumber=" & mailnumber;
    backpage = backpage & "&confcode=" & confcode;

    RedirectToURL("/" & backpage);
  end else begin
    WebOutString("An error occurred. Please navigate back and try again.");
  end;

  return;
end;

//SECTION: FIELDS
global
procedure SetWebNGFieldProduct(string code)
begin
  transaction string 255 gWebNGFieldProduct;
  
  gWebNGFieldProduct = code;
  return;
end;

global
function string 255 GetWebNGFieldProduct()
begin
  transaction string 255 gWebNGFieldProduct;
  
  GetWebNGFieldProduct = gWebNGFieldProduct;
  return;
end;

global
function string 255 GetWebNGFieldProductName()
begin
  transaction string 255 gWebNGFieldProduct;
  record WebNGProductVc WPr;
  
  WPr.Code = gWebNGFieldProduct;
  if (ReadFirstMAin(WPr,1,true)) then begin
    GetWebNGFieldProductName = WPr.Comment; //TODO: Get translated name
  end;
  return;
end;

global
function Integer GetCountryDefaultCompanyNr(string Country)
begin
  Integer res,FirstCompanyNr;
  record WebNGCompCountryVc WCCr;
  Boolean TrHs;
  
  WCCr.Country = Country;
  TrHs = true;
  while (LoopKey("Country",WCCr,1,TrHs)) begin
    if (WCCr.Country!=Country) then begin
      TrHs = false;
    end;
    if (TrHs) then begin
      if (FirstCompanyNr==0) then begin
        FirstCompanyNr = WCCr.CompanyNr;
      end;
      if (WCCr.CountryDefault!=0) then begin
        res = WCCr.CompanyNr;
        TrHs = false;
      end;
    end;
  end;
  if (res==0) then begin
    res = FirstCompanyNr;
  end;
  
  GetCountryDefaultCompanyNr = res;
  return;
end;

global
function string 255 CurrentWebCurrency()
begin
  record CUVc CUr;
  record WebNGCountryVc WCr;
  string 255 outcurrency;
  
  if (LoginState==true) then begin
    CUr.Code = CurrentCust;
    if (ReadFirstMain(CUr,1,true)) then begin
      outcurrency = CUr.CurncyCode;
    end;
  end;
  
  if(Blank(outcurrency)) then begin
    WCr.Code = ToolWebNGGetCountry;
    if(ReadFirstMain(WCr,1,true)) then begin
      outcurrency = WCr.CurncyCode;
    end;
  end;
  
  CurrentWebCurrency = outcurrency;
  return;
end;

global
procedure SessionAddToArray(string name,string text)
begin
  Integer cnt;
  
  cnt = StringToInt(GetSessionString(name & "cnt"));
  PutSessionString(name & cnt,text);
  cnt = cnt + 1;
  PutSessionString(name & "cnt",cnt);
  
  return;
end;

global
function Boolean SessionGetNextFromArray(string name,var string text,var Integer nr)
begin
  Boolean res;
  Integer cnt;
  
  cnt = StringToInt(GetSessionString(name & "cnt"));
  if (nr<cnt) then begin
    text = GetSessionString(name & nr);
    nr = nr + 1;
    res = true;
  end;
  
  SessionGetNextFromArray = res;
  return;
end;

global
procedure SessionClearArray(string name)
begin
  PutSessionString(name & "cnt","");
  
  return;
end;

global
procedure FillArrayWithCClass(string ctype,var array string texts,var array string codes,var integer arrlen)
begin
  record CClassVc CClassr;
  Boolean TrHs;
  
  arrlen = 0;
  CClassr.CType = ctype;
  TrHs = true;
  while (LoopKey("CType",CClassr,1,TrHs)) begin
    if (CClassr.CType!=ctype) then begin
      TrHs = false;
    end;
    if (TrHs) then begin
      texts[arrlen] = CClassr.Comment;
      codes[arrlen] = CClassr.Code;
      arrlen = arrlen + 1;
    end;
  end;
  return;
end;

global
procedure FillArrayWithCustCat(var array string texts,var array string codes,var integer arrlen)
begin
  record CCatVc CCatr;
  
  arrlen = 0;
  while (LoopMain(CCatr,1,true)) begin
    texts[arrlen] = CCatr.Comment;
    codes[arrlen] = CCatr.Code;
    arrlen = arrlen + 1;
  end;
  return;
end;

global
procedure FillArrayWithCountry(var array string texts,var array string codes,var integer arrlen)
begin
  record CountryVc Countryr;
  row CountryVc Countryrw;
  Integer i,cnt;
  string 255 langcode,text,code;
  
  langcode = CurrentWebLang;
  arrlen = 0;
  while (LoopMain(Countryr,1,true)) begin
    if (Countryr.ShowOnWeb!=0) then begin
      text = Countryr.Comment;
      code = Countryr.Code;
      cnt = MatRowCnt(Countryr);
      for (i=0;i<cnt;i=i+1) begin
        MatRowGet(Countryr,i,Countryrw);
        if (Countryrw.LangCode==langcode) then begin
          text = Countryrw.Text;
          i = cnt;
        end;
      end;
      AddToSortedArray(text,code,texts,codes,arrlen);
    end;
  end;
  return;
end;

global
procedure WebOutSubmit(string id,string class,string name,string value)
begin
  string 255 tstr;
  
  tstr = "<input type=""submit""";
  if (nonblank(id)) then begin
    tstr = tstr & " id=""" & id & """";
  end;
  if (nonblank(class)) then begin
    tstr = tstr & " class=""" & class & """";
  end;
  if (nonblank(name)) then begin
    tstr = tstr & " name=""" & name & """";
  end;
  if (nonblank(value)) then begin
    tstr = tstr & " value=""" & value & """";
  end;
  tstr = tstr & " />";
  WebOutStringFormatNL(tstr);
  
  return;
end;

global
procedure ShowRedirectHtmlFromArea(area alink,boolean secure)
begin
  string 255 mlink,hostport;
  transaction boolean gDontOutputHTMLDoctype;
  area apre,amlink;

  InsertAreaBeforeArea(alink,amlink);
  if (FindStringInArea("http:",amlink)<0 and FindStringInArea("https:",amlink)<0) then begin
    if (secure) then begin
      AddTextToArea("https://",apre);
    end else begin
      AddTextToArea("http://",apre);
    end;
    AddTextToArea(GetWebHostAndPort(secure),apre);
    InsertAreaBeforeArea(apre,amlink);
  end;

  if (gDontOutputHTMLDoctype==false) then begin
    WebOutStringFormatNL("<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01//EN"" ""http://www.w3.org/TR/html4/strict.dtd"">");
  end;
  WebOutTagOpen("<html>");
  WebOutTagOpen("<head>");
  WebOutStringFormatNL("<title>302 tyt Redirect</title>");
  WebOutTagClose("</head>");
  WebOutTagOpen("<body>");
  WebOutTagOpen("<script>");
  WebOutStringFormatNL("document.location = " & mlink & "");
  WebOutTagClose("</script>");

  WebOutStringFormat(ToolWebNGTranslateText(25417) & " "); //If your browser does not automatically redirect you in 5 seconds, please
  WebOutStringFormat("<a href=""");
  WebOutArea(amlink);
  WebOutStringFormat(""">");
  WebOutStringFormat(ToolWebNGTranslateText(25418)); //Click here
  WebOutStringFormat("</a>");
  WebOutTagClose("</body>");
  WebOutTagClose("</html>");
  SetHttpRedirectFromArea(amlink);
  return;
end;


//CUST-BEGIN
function boolean TestCommentForSpam(record WebNGBlogCommentVc WCr)
begin
  boolean res;
  integer cnt,i,j;
  string 255 tstr;

  res = false;

  cnt = LineTextCnt(WCr);
  for (i = 0; i < cnt ; i = i + 1) begin
    tstr = lineTextGet(WCr,i);
    for (j = 0; j < len(tstr); j = j + 1) begin
      if mid(tstr,j,2) == "<a" then begin
        res = true;
      end;
    end;
  end;
  
  TestCommentForSpam = res;

end;

global 
updating procedure WebHWLCommentContent()
begin
string 255 tstr,username,subject,email,result,textarea;
//record WebNGTranslateVc WTr; kzs
record WebNGContentVc WContr;
integer errflags;
record WebNGBlogCommentVc WebComr,WCr;
integer detlev;
string 3 detlev2;
boolean savef,Trhs;
time timep;

if nonblank(CurrentCust) then begin
  WContr.SerNr = stringToLongInt(WebGetArg("sernr"));
  if ReadFirstMain(WContr,1,true) then begin
    RecordNew(WebComr);
    username = WebGetArg("name");
    //subject = WebGetArg("subject");
    email = WebGetArg("e-mail");
    //result = WebGetArg("result");
    textarea = WebGetArg("comment-text");
    errflags = 0;
	/*
    if result <>"7" then begin
      errflags = 2;
    end;*/
    if username =="" then begin
      errflags = errflags + 4;
    end;
    if email =="" then begin
      //errflags = errflags + 8;
    end;
    if textarea =="" then begin
      errflags = errflags + 16;
    end;
    WebGetText("comment-text",WebComr);
    if TestCommentForSpam(WebComr) then begin
      errflags = errflags + 64;
    end;
    if errflags == 0 then begin
      WebComr.UserName = username;
      WebComr.CommentHeader = subject;
      WebComr.Email = email;
      WebComr.CommentType=0;
      WebComr.TextType = 1;
      WebComr.MailHeader = WContr.Comment;
      WebComr.MailSerNr = WContr.SerNr;
      WebComr.IPAddress = WebRemoteIPAddress;
      if CurrentCust <> "" then begin
        WebComr.CustCode = CurrentCust;
      end;
      
      savef = true;
	    Trhs = true;
	    timep = AddMinutes(WebComr.TransTime,-1);
      WCr.IPAddress = WebComr.IPAddress;
      while loopkey("IPAddress:" & WContr.SerNr,WCr,1,Trhs) begin
        if (WebComr.IPAddress == WCr.IPAddress) then begin
          if (WebComr.TransDate == WCr.TransDate) then begin
            if (timep<WCr.TransTime) then begin
            savef = false;
            errflags = errflags + 32;
            end;
          end;
        end else begin
          Trhs = false;
        end;
	    end;
      if savef then begin
        if recordStore(WebComr,true) then begin end;
		PutSessionString("cname","");      
        PutSessionString("cemail","");      
        PutSessionString("ctext","");   
      end else begin
	    PutSessionString("cname",username);      
        PutSessionString("cemail",email);      
        PutSessionString("ctext",textarea);    
	  end;
         
      //PutSessionString("chead","");      
      PutSessionString("err",errflags);      
    end else begin
      PutSessionString("cname",username);      
      PutSessionString("cemail",email);      
      PutSessionString("ctext",textarea);      
      //PutSessionString("chead",subject);      
      PutSessionString("err",errflags);      
    end;
    ShowRedirectHtml(FormatSimpleLink(WebGetArg("contpath"),true) & "?sernr=" & WContr.SerNr & "&detlevel=2",false);
  end;
end;
return;
end;

global webpublic
updating procedure WebJALComment()
begin
  string 100 sl,serstr;
  string 100 t1,t2,t3;
  //stopalert("koment�jam vai ko");
  sl = WebGetArg("sl");
  serstr = WebGetArg("sernr");
  //trace("varonis",sl);
  t1 = toolwebngtranslatetext(21042);
  t2 = toolwebngtranslatetext(22000);
  //trace("adsf",sl);
  //trace("asdf",t2);
  if (sl == t1) then begin
    WebHWLCommentContent;
	//stopalert("koment�jam tomer");
  end else begin
      //stopalert("apskatam");
	  ShowRedirectHtml(FormatSimpleLink(WebGetArg("contpath"),true) & "?sernr=" & serstr & "&detlevel=2",false);
  end;
  return;
end;

global webpublic
updating procedure WebContentChangeFB()
begin
  
  //record MailVc Mailr;
  //row MailVc Mailrw;
  record WebNGContentVc WContr;
  record WebNGBlogCommentVc WCr,tWCr;
  boolean Trhs,foundf;
  string 255 sernr,act;
  integer i;
  act = WebGetArg("fb");
  sernr = webGetArg("sernr");
    WContr.SerNr = StringToLongInt(sernr);
	if readfirstmain(WContr,1,true) then begin

  //Mailr.SerNr = sernr;
  //if ReadFirstMain(Mailr,1,true) then begin
  //setcompany(StringToLongInt(WebGetArg("compnr")),false);
    RecordNew(WCr);
    WCr.SerNr = NextSerNr("WebNGBlogCommentVc",CurrentDate,-1,false,"");
    WCr.MailSerNr = sernr;
    //MatRowGet(Mailr,0,Mailrw);
    //WCr.MailboxName = Mailrw.AddrCode;
    //WCr.MailHeader = Mailr.Header;
	
	WCr.TextType = 1;
	//stopalert(WebGetArg("tt") & " " & WCr.TextType);
    WCr.TransDate = CurrentDate;
    WCr.TransTime = CurrentTime;
    WCr.IPAddress = WebRemoteIPAddress;
    //WCr.TextType = 0;
    if act=="up" then begin 
      WCr.CommentType = 1;
    end;
    if act=="down" then begin
      WCr.CommentType = 2;    
    end;
    tWCr.IPAddress = WCr.IPAddress;
    TrHs = true;
    foundf = false;

    //if IsAllowedHWLIP(WCr.IPAddress) then begin
      while LoopKey("IPAddress:" & WCr.MailSerNr,tWCr,1,TrHs) begin
        if tWCr.IPAddress == WCr.IPAddress then begin
          if tWCr.TextType == WCr.TextType then begin
		    if ((tWCr.CommentType == 1) or (tWCr.CommentType == 2)) then begin	
              trhs = False;
			  foundf = true;
			end;
          end;
        end;
	  end;
      //end; 


      if foundf==false then begin
        if recordStore(WCr,true) then begin end;
      end;
   
	end;
  //end;
  //resetCompany(1);
  ShowRedirectHtml(FormatSimpleLink(WebGetArg("profpath"),true),false);
return;
end;
//CUST-END
