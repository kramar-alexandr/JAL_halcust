external function string 255 toolwebngtranslatetext(integer);external function string 255 FormatSimpleLink(string,boolean);external procedure ShowRedirectHtml(string,boolean);globalfunction string 50 GetEntryPersonName(record JALTeacherAccVc JTr)begin  record TeacherVc TCr;  record MentorVc MTr;  string 50 res;  res = "";  switch JTr.RecType begin    case 0:             TCr.TeacherCode = JTr.RecCode;            if readfirstmain(TCr,1,true) then begin              res = TCr.TeacherName;            end;    case 1:             MTr.MentorCode = JTr.RecCode;            if readfirstmain(MTr,1,true) then begin              res = MTr.MentorName;            end;  end;  GetEntryPersonName = res;return;end;function boolean EntryExists(string scode,string rcode,integer type,integer status)begin  boolean res,TrHs;  record JALTeacherAccVc JTr;  res = false;    ResetLoop(JTr);    JTr.StatusFlag = status;    JTr.RecType= type;    JTr.RecCode = rcode;    TrHs = true;    while loopkey("RecType",JTr,3,TrHs) begin      if JTr.StatusFlag <> status or JTr.RecType <> type or JTr.RecCode <> rcode then begin        TrHs = false;      end else begin        if JTr.SMFCode == scode then begin          res = true;          TrHs = false;        end;      end;    end;EntryExists = res;return;end;procedure OutputSingleEntryLineSMF(record JALTeacherAccVc JTr)begin    WebOutStringFormatNL("<div class='entry_item'>");    WebOutStringFormatNL("<div class='entry_line'>");    WebOutStringFormatNL("<div class='entry_name'><div class='entry_name_label'>" & ToolWebNGTranslateText(26121) & "</div><div class='entry_name_text'>" & GetEntryPersonName(JTr) & "</div></div>");    WebOutStringFormatNL("<div class='entry_name'><div class='entry_name_label'>" & ToolWebNGTranslateText(26120) & "</div><div class='entry_name_text'>" & ToolWebNGTranslateText(26110+JTr.StatusFlag) & "</div></div>");    WebOutStringFormatNL("</div>");    WebOutStringFormatNL("<div class='entry_line'>");    WebOutStringFormatNL("<div class='entry_name'><div class='entry_name_label'>" & ToolWebNGTranslateText(26122) & "</div><div class='entry_name_text'>" & JTr.TransDate & ";" & JTr.TransTime & "</div></div>");              WebOutStringFormatNL("</div>");    WebOutStringFormatNL("</div>");return;end;function string 255 GetSMFName(string code)begin  record SMFVc SMFr;  record CUVc CUr;  string 255 res;  res = "";  SMFr.SMFCode = code;  if readfirstmain(SMFr,1,true) then begin    res = SMFr.SMFName;    CUr.Code = SMFr.CustCode;    if readfirstmain(CUr,1,true) then begin      res = res & "(" & CUr.Name & ")";    end;  end;  GetSMFName = res;return;end;procedure OutputSingleEntryLine(record JALTeacherAccVc JTr,integer type,integer status)begin  string 255 name;  name = GetSMFName(JTr.SMFCode);    switch status begin //0-new,1-accepted,2-declined    case 0:          WebOutStringFormatNL("<div class='entry_item'>");          WebOutStringFormatNL("<div class='entry_info'>");          WebOutStringFormatNL("<div class='entry_line'>");          WebOutStringFormatNL("<div class='entry_name'><div class='entry_name_label'>" & ToolWebNGTranslateText(26123) & "</div><div class='entry_name_text'>" & name & "</div></div>");          WebOutStringFormatNL("</div>");                    WebOutStringFormatNL("<div class='entry_line'>");                    WebOutStringFormatNL("<div class='entry_name'><div class='entry_name_label'>" & ToolWebNGTranslateText(26120) & "</div><div class='entry_name_text'>" & ToolWebNGTranslateText(26110+JTr.StatusFlag) & "</div></div>");          WebOutStringFormatNL("</div>");          WebOutStringFormatNL("<div class='entry_line'>");          WebOutStringFormatNL("<div class='entry_name'><div class='entry_name_label'>" & ToolWebNGTranslateText(26122) & "</div><div class='entry_name_text'>" & JTr.TransDate & ";" & JTr.TransTime & "</div></div>");                    WebOutStringFormatNL("</div>");          WebOutStringFormatNL("</div>");          WebOutStringFormatNL("<div class='entry_form'>");          WebOutStringFormatNL("<form action='/WebJALChangeEntryStat.hal' method='POST'>");          WebOutStringFormatNL("<input type='hidden' name='sernr' value='" & JTr.SerNr & "'>");          WebOutStringFormatNL("<input type='hidden' name='type' value='" & type & "'>");          WebOutStringFormatNL("<input type='hidden' name='val' value='1'>");          WebOutStringFormatNL("<input type='hidden' name='path' value='" & webgetarg("path") & "'>");          WebOutStringFormatNL("<input type='submit' value='" & ToolWebNGTranslateText(26115) & "'>");          WebOutStringFormatNL("</form>");          WebOutStringFormatNL("<form action='/WebJALChangeEntryStat.hal' method='POST'>");          WebOutStringFormatNL("<input type='hidden' name='sernr' value='" & JTr.SerNr & "'>");          WebOutStringFormatNL("<input type='hidden' name='type' value='" & type & "'>");          WebOutStringFormatNL("<input type='hidden' name='val' value='2'>");          WebOutStringFormatNL("<input type='hidden' name='path' value='" & webgetarg("path") & "'>");          WebOutStringFormatNL("<input type='submit' value='" & ToolWebNGTranslateText(26116) & "'>");          WebOutStringFormatNL("</form>");          WebOutStringFormatNL("</div>");          WebOutStringFormatNL("</div>");    otherwise          WebOutStringFormatNL("<div class='entry_item'>");          WebOutStringFormatNL("<div class='entry_line'>");          WebOutStringFormatNL("<div class='entry_name'><div class='entry_name_label'>" & ToolWebNGTranslateText(26123) & "</div><div class='entry_name_text'>" & name & "</div></div>");          WebOutStringFormatNL("</div>");                    WebOutStringFormatNL("<div class='entry_line'>");                    WebOutStringFormatNL("<div class='entry_name'><div class='entry_name_label'>" & ToolWebNGTranslateText(26120) & "</div><div class='entry_name_text'>" & ToolWebNGTranslateText(26110+JTr.StatusFlag) & "</div></div>");          WebOutStringFormatNL("</div>");          WebOutStringFormatNL("<div class='entry_line'>");          WebOutStringFormatNL("<div class='entry_name'><div class='entry_name_label'>" & ToolWebNGTranslateText(26122) & "</div><div class='entry_name_text'>" & JTr.TransDate & ";" & JTr.TransTime & "</div></div>");                    WebOutStringFormatNL("</div>");          WebOutStringFormatNL("</div>");  end;return;end;function boolean SMFHasTeacher(string code,string tc,integer type)begin  record SMFVc SMFr;  row SMFVc SMFrw;  integer i,rwcnt;  boolean res;  res = false;  SMFr.SMFCode = code;  if readfirstmain(SMFr,1,true) then begin    rwcnt = MatRowCnt(SMFr);    for (i = 0; i < rwcnt;i = i + 1) begin      MatRowGet(SMFr,i,SMFrw);      if SMFrw.Type == type and SMFrw.Code == tc then begin        res = true;        i = rwcnt;      end;    end;  end;  SMFHasTeacher = res;return;end;procedure ShowTeacherSelectBox(string code)begin  record TeacherVc TCr;  record JALTeacherAccVc JTr;  boolean TrHs,foundf;  WebOutStringFormatNL("<select name='code'>");  WebOutStringFormatNL("<option value=''>" & ToolWebNGTranslateText(26100) & "</option>");  while loopmain(TCr,1,true) begin    if (!EntryExists(code,TCr.TeacherCode,0,0) and !EntryExists(code,TCr.TeacherCode,0,1)) and !SMFHasTeacher(code,TCr.TeacherCode,0) then begin      WebOutStringFormatNL("<option value='" & TCr.TeacherCode & "'>" & TCr.TeacherName & "</option>");    end;  end;  WebOutStringFormatNL("</select>");return;end;procedure ShowMentorSelectBox(string code)begin  record MentorVc MTr;  record JALTeacherAccVc JTr;  boolean TrHs,foundf;  string 20 cc;  WebOutStringFormatNL("<select name='code'>");  WebOutStringFormatNL("<option value=''>" & ToolWebNGTranslateText(26101) & "</option>");  while loopmain(MTr,1,true) begin    if (!EntryExists(code,MTr.MentorCode,1,0) and !EntryExists(code,MTr.MentorCode,1,1)) and !SMFHasTeacher(code,MTr.MentorCode,1) then begin      WebOutStringFormatNL("<option value='" & MTr.MentorCode & "'>" & MTr.MentorName & "</option>");    end;  end;  WebOutStringFormatNL("</select>");return;end;procedure ShowSMFEntryForm(integer type,record SMFVc SMFr)begin WebOutStringFormatNL("<div class='entry_section'>"); WebOutStringFormatNL("<div class='entry_section_title'>" & ToolWebNGTranslateText(26155 + type) & "</div>"); WebOutStringFormatNL("<div class='entryform_" & type & "'>"); WebOutStringFormatNL("<form action='/WebJALSendEntry.hal' method='POST'>"); WebOutStringFormatNL("<input type='hidden' name='type' value='" & type & "'>"); WebOutStringFormatNL("<input type='hidden' name='path' value='" & webgetarg("path") & "'>"); switch type begin    case 0: ShowTeacherSelectBox(SMFr.SMFCode);    case 1: ShowMentorSelectBox(SMFr.SMFCode); end; WebOutStringFormatNL("<input type='submit' value='" & ToolWebNGTranslateText(26105) & "'>"); WebOutStringFormatNL("</form>"); WebOutStringFormatNL("</div>"); WebOutStringFormatNL("</div>");return;end;global webpublic procedure WebgetTeacerInfo()begin	record SMFVc SMFr;	row SMFVc SMFrw;	boolean testf;	integer i,mtrw,cnt;	string 50 code,status,type;	record JALTeacherAccVc JTr;  boolean TrHs;		code = webgetarg("code");	type = webgetarg("type");	status = webgetarg("status");		WebOutStringFormatNL("{\"SMU\":[");		if(nonblank(code))then begin		resetLoop(JTr);		JTr.RecCode = code;		TrHs = true;		while(loopmain(JTr,1,TrHs))begin			cnt = cnt + 1;			if(cnt>1)then begin				weboutstring(",");			end;			SMFr.SMFCode = JTr.SMFCode;			if(readfirstmain(SMFr,1,true))then begin				weboutstring("{");					weboutstring("\"SMFCode\":\"" & JTr.SMFCode & "\",");					weboutstring("\"RecCode\":\"" & JTr.RecCode & "\",");					weboutstring("\"RecType\":\"" & JTr.RecType & "\",");					weboutstring("\"StatusFlag\":\"" & JTr.StatusFlag & "\",");					weboutstring("\"TransDate\":\"" & JTr.TransDate & "\",");										weboutstring("\"SMFName\":\"" & SMFr.SMFName & "\",");					weboutstring("\"SchoolName\":\"" & SMFr.SchoolName & "\",");					weboutstring("\"Manager\":\"" & SMFr.Manager & "\",");					weboutstring("\"ClassNum\":\"" & SMFr.ClassNum & SMFr.ClassChar & "\"");								weboutstring("}");			end;		end;	end;	/*if(nonblank(code))then begin		while(loopmain(SMFr,1,true))begin					mtrw = matrowcnt(SMFr);			For(i=0;i<mtrw;i=i+1) begin				matrowget(SMFr,i,SMFrw);				if(SMFrw.Code==code)then begin					i = mtrw;					cnt = cnt + 1;					if(cnt>1)then begin						weboutstring(",");					end;					weboutstring("{");						weboutstring("\"Cnt\":\"" & cnt & "\",");						weboutstring("\"Name\"");					weboutstring("}");				end;			end; 				end;	end;*/	WebOutStringFormatNL("]}");return;end;procedure DisplayEntryRows(integer type,string code,integer status)begin  record JALTeacherAccVc JTr;  boolean TrHs;  integer cnt;  cnt = 0;			 WebOutStringFormatNL("<script>document.teacherinfo=WebgetTeacerInfo.hal?code=" & code & "&type=" & type & "&status=" & status & "</script>");	  /*TrHs = true;  resetLoop(JTr);  JTr.RecType = type;  JTr.StatusFlag = status;  JTr.RecCode = code;  JTr.TransDate = addDay(CurrentDate,4);  WebOutStringFormatNL("<div class='entry_section'>");  WebOutStringFormatNL("<div class='entry_section_title'>" & ToolWebNGTranslateText(26125 + status) & "</div>");  while loopbackkey("RecType",JTr,4,TrHs) begin    if status <> JTr.StatusFlag or type <> JTr.RecType or code <> JTr.RecCode then begin      TrHs = false;    end else begin      cnt = cnt + 1;      OutputSingleEntryLine(JTr,type,status);    end;  end;  if cnt== 0 then begin    WebOutStringFormatNL("<div class='entry_section_msg'>" & ToolWebNGTranslateText(26130) & "</div>");  end;  WebOutStringFormatNL("</div>");*/return;end;procedure ShowTeacherEntry(record CUVc CUr,record TeacherVc TCr)begin  DisplayEntryRows(0,TCr.TeacherCode,0);  DisplayEntryRows(0,TCr.TeacherCode,1);  DisplayEntryRows(0,TCr.TeacherCode,2);return;end;procedure ShowMentorEntry(record CUVc CUr,record MentorVc MTr)begin  DisplayEntryRows(1,MTr.MentorCode,0);  DisplayEntryRows(1,MTr.MentorCode,1);  DisplayEntryRows(1,MTr.MentorCode,2);return;end;procedure ShowSMFEntry(record CUVc CUr,record SMFVc SMFr)begin  record JALTeacherAccVc JTr;  boolean TrHs;  integer cnt;  ShowSMFEntryForm(0,SMFr);  ShowSMFEntryForm(1,SMFr);  TrHs = true;  resetLoop(JTr);  JTr.SMFCode = SMFr.SMFCode;  JTr.TransDate = addDay(CurrentDate,4);  WebOutStringFormatNL("<div class='entry_section'>");  cnt = 0;  while loopbackkey("SMFCode",JTr,1,TrHs) begin    if SMFr.SMFCode <> JTr.SMFCode then begin      TrHs = false;    end else begin      cnt = cnt + 1;      OutputSingleEntryLineSMF(JTr);    end;  end;  if cnt== 0 then begin    WebOutStringFormatNL("<div class='entry_section_msg'>" & ToolWebNGTranslateText(26130) & "</div>");  end;  WebOutStringFormatNL("</div>");return;end;globalfunction integer GetJAlCustType(record CUVc CUr,var record SMFVc SMFr,var record TeacherVc TCr,var record MentorVc MTr)begin  integer res;  res = -1;  SMFr.CustCode = CUr.Code;  if readfirstkey("CustCode",SMFr,1,true) then begin    res = 0;    goto LGetCustType;  end;    TCr.CustCode = CUr.Code;  if readfirstkey("CustCode",TCr,1,true) then begin    res = 1;    goto LGetCustType;  end;  MTr.CustCode = CUr.Code;  if readfirstkey("CustCode",MTr,1,true) then begin    res = 2;    goto LGetCustType;  end;LGetCustType:;  GetJAlCustType = res;return;end;globalprocedure WebShowEntry()begin  record CUVc CUr;  record SMFVc SMFr;  record TeacherVc TCr;  record MentorVc MTr;  integer type;  if nonblank(CurrentCust)then begin    CUr.Code = CurrentCust;    if readfirstmain(CUr,1,true) then begin      type = GetJAlCustType(CUr,SMFr,TCr,MTr);      switch type begin        case 0://SMF               ShowSMFEntry(CUr,SMFr);        case 1://Teacher               ShowTeacherEntry(CUr,TCr);        case 2://Mentor               ShowMentorEntry(CUr,MTr);      end;    end;  end;return;end;global webpublicupdating procedure WebJALSendEntry()begin  record JALTeacherAccVc JTr;  record CUVc CUr;  record SMFVc SMFr;  record TeacherVc TCr;  record MentorVc MTr;  integer type;  string 20 code;  if nonblank(CurrentCust)then begin    CUr.Code = CurrentCust;    if readfirstmain(CUr,1,true) then begin      type = GetJAlCustType(CUr,SMFr,TCr,MTr);      if type == 0 then begin        code = webgetarg("code");        if nonblank(code) then begin          type= stringtoint(WebGetArg("type"));          if (!EntryExists(SMFr.SMFCode,code,type,0) and !EntryExists(SMFr.SMFCode,code,type,1)) then begin            RecordNew(JTr);            JTr.SerNr = NextSerNr("JALTeacherAccVc",CurrentDate,-1,false,"");            JTr.TransDate = CurrentDate;            JTr.TransTime = CurrentTime;            JTr.SMFCode = SMFr.SMFCode;            JTr.RecType = type;            JTr.RecCode = code;            JTr.StatusFlag = 0;            if recordStore(JTr,true) then begin                           end else begin            end;          end;        end;      end;    end;  end;  ShowRedirectHtml(FormatSimpleLink(webgetarg("path"),true),false);return;end;global webpublicupdating procedure WebJALChangeEntryStat()begin   record JALTeacherAccVc JTr,oldJTr;  record CUVc CUr;  record SMFVc SMFr;  record TeacherVc TCr;  record MentorVc MTr;  integer type,ttype;  string 20 code;  if nonblank(CurrentCust)then begin    CUr.Code = CurrentCust;    ttype = stringtoint(WebGetArg("type"));    if readfirstmain(CUr,1,true) then begin      type = GetJAlCustType(CUr,SMFr,TCr,MTr);      type = type - 1;      JTr.SerNr = StringToLongInt(WebGetArg("sernr"));      if readfirstmain(JTr,1,true) then begin         if type == ttype and type == JTr.RecType then begin          recordCopy(oldJTr,JTr);          JTr.StatusFlag = StringToInt(WebGetArg("val"));          if recordUpdate(oldJTr,JTr,true) then begin end;        end;      end;    end;  end;  ShowRedirectHtml(FormatSimpleLink(webgetarg("path"),true),false);return;end;