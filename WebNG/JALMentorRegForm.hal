external function string 255 FormatSimpleLink(string,boolean);
//external procedure WebOutStringFormatNL(string);
external function string 255 ToolWebNGtranslateText(integer);
external procedure ShowRedirectHtml(string,boolean);
external function Boolean GetNextCustNr(var string);

SetLangMode(LangLatvian,"LAT",0);



global
procedure SelBoxForDistrictForMentor(string region)
begin
  integer rwcnt,i;
  record JALDistrictBlock JDbl;
  row JALDistrictBlock JDblrw;
  boolean firstf;
  string 100 district;
  //stopalert(region);
  //stopalert(region);
  BlockLoad(JDbl);
  rwcnt = MatRowCnt(JDbl);
  firstf = true;
  WebOutStringFormatNL("<select  class=""spinput _select"" id=""districtselect"" name=""district"">");
  WebOutStringFormatNL("<option value=""-1"">" & ToolWebNGTranslateText(20084) & "</option>");
  for (i = 0 ; i < rwcnt; i = i + 1) begin
    MatRowGet(JDbl,i,JDblrw);
	if JDblrw.Region == region then begin
	  if firstf then begin
	    district = JDblrw.District;
		firstf = false;
	  end;
	  WebOutStringFormatNL("<option value=""" & i & """>" & JDblrw.District & "</option>");
    end;
  end;
  WebOutStringFormatNL("</select>");
  //WebOutStringFormatNL("<div>" & ToolWebNGTranslateText(20086) & "</div>");
return;
end;

global
procedure SelBoxForRegForMentor()
begin
  integer rwcnt,i;
  record JALRegionBlock JRbl;
  row JALRegionBlock JRblrw;
  string 30 region;

    
	BlockLoad(JRbl);

	rwcnt = MatRowCnt(JRbl);
    WebOutStringFormatNL("<select  class=""spinput _select"" id=""regselect"" name=""reg"" onchange=""getdistrict()"">");//onchange=""getschool()"">");//changeSchool('/WebJALChangeSchool.hal','reg=' + this.value)"">");
	WebOutStringFormatNL("<option value=""-1"">" & ToolWebNGTranslateText(20088) & "</option>");
	for ( i = 0; i < rwcnt; i = i + 1) begin
	  MatRowGet(JRbl,i,JRblrw);
	  if i == 0 then begin
	    region = JRblrw.Region;
	  end;
      WebOutStringFormatNL("<option value=""" & i & """>" & JRblrw.Region & "</option>");
	end;
	WebOutStringFormatNL("</select>");
	//WebOutStringFormatNL("<div>" & ToolWebNGTranslateText(20068) & "</div>");
	WebOutStringFormatNL("<div id=""districtdiv"">");
    SelBoxForDistrictForMentor(region);
	WebOutStringFormatNL("</div>");
  return;
end;

global
procedure MentorRegForm()
begin
  integer err;
  //stopalert("ads");
  WebOutStringFormatNL("<form method=""POST"" action=""/WebMentorReg.hal"" onSubmit=""return TestFieldsForMentor(this,'" & ToolWebNGtranslateText(20055) & "','" & ToolWebNGtranslateText(20060) & "','" & ToolWebNGtranslateText(20061) & "','" & ToolWebNGtranslateText(20057) & "'");
  WebOutStringFormatNL(",'" & ToolWebNGtranslateText(20058) & "','" & ToolWebNGtranslateText(20063) & "','" & toolwebngtranslatetext(21102) & "','" & toolwebngtranslatetext(20018) & "','" & toolwebngtranslatetext(20019) & "','" & toolwebngtranslatetext(20020) & "')"">");
  WebOutStringFormatNL("<input type=""hidden"" name=""regpath"" value=""" & WebGetArg("path") & """>");
  WebOutStringFormatNL("<input class=""spinput"" type=""text"" required name=""name"" value="""" placeholder=""V&#257rds, Uzv&#257rds"">");
  WebOutStringFormatNL("<input class=""spinput"" type=""text"" required name=""comp"" value="""" placeholder=""Uz&#326&#275mums"">");
  WebOutStringFormatNL("<input class=""spinput"" type=""text"" required name=""job"" value="""" placeholder=" & ToolWebNGtranslateText(20072) & ">");
  WebOutStringFormatNL("<input class=""spinput"" type=""tel"" required name=""tel"" pattern=""[+][0-9]{5,10}"" value="""" placeholder='Tel.nr'><div data-title='Tikai cipari un simbols +' class='info-sign'><img src='img/information.png'></img></div>");
  WebOutStringFormatNL("<input id=""regemail"" class=""spinput"" type=""email"" required name=""email"" placeholder=" & ToolWebNGtranslateText(20033) & "  onchange=""testemail(this.value); compemails('" & ToolWebNGTranslateText(21102) & "',1);""><div data-title='Jāievada ir aktuālais e-pasts, kas tiek izmantots ikdienā' class='info-sign'><img src='img/information.png'></img></div>");
  WebOutStringFormatNL("<input id=""regemail2"" class=""spinput"" type=""email"" required name=""email2"" placeholder=""Atk&#257rtojiet e-pastu""  onchange=""compemails('" & ToolWebNGTranslateText(21102) & "',0);"">");
  WebOutStringFormatNL("<input class=""spinput"" type=""text"" required name=""pso"" value="""" placeholder=""Pieder&#299ba sab. organiz&#257cij&#257m"">");
 // WebOutStringFormatNL("<input class=""spinput"" type=""text"" name=""city"" value=""""><div>" & ToolWebNGtranslateText(20065) & "</div>");
  SelBoxForRegForMentor;
  //WebOutStringFormatNL("<input class=""spinput"" type=""text"" required name=""nov"" value=""""><div>" & ToolWebNGtranslateText(20066) & "</div>");
  //WebOutStringFormatNL("<div class='reg_label'>" & ToolWebNGtranslateText(20087) & "</div><input class=""spinput"" type=""text"" name=""spam"" value="""">");
  WebOutStringFormatNL("<input class=""spinput"" type=""text"" required name=""contract"" value="""" placeholder=""Sadarbības līguma nr."">");
  WebOutStringFormatNL("<input class=""spinput"" type=""password"" required name=""password1"" minlength=""4"" placeholder=""Parole""><div data-title='Vismaz 4 simboli' class='info-sign'><img src='img/information.png'></img></div>");
  WebOutStringFormatNL("<input class=""spinput"" type=""password"" required name=""password2"" minlength=""4"" placeholder=""Parole atk&#257rtoti"">");
  WebOutStringFormatNL("<div id=""errormsg""><div id=""ename""></div><div id=""ecomp""></div><div id=""ejob""></div><div id=""etel""></div><div id=""eemail""></div><div id=""esameemail"">");
  WebOutStringFormatNL("<div id=""samemailmsg""></div></div><div id=""ecode""></div><div id=""ecompare""></div><div id=""epassword""></div><div id=""ereg""></div><div id=""edistrict""></div></div>");

  WebOutStringFormatNL("<input type=""submit"" class=""spbutton""  value=""" & ToolWebNGtranslateText(21064) & """ >");

  WebOutStringFormatNL("</form>");
  WebOutStringFormatNL("<script>");
  WebOutStringFormatNL("function testemail(email) {");
  WebOutStringFormatNL("  var reqid = email");
  WebOutStringFormatNL("  var link = '" & FormatSimpleLink("/ajx",true) & "?action=getmail&email=' + reqid;");
  WebOutStringFormatNL("  xmlhttp=new XMLHttpRequest();");
  WebOutStringFormatNL("  xmlhttp.open('GET',link,false);");
  WebOutStringFormatNL("  xmlhttp.send(null);");
  WebOutStringFormatNL("  var text = xmlhttp.responseText;");
  WebOutStringFormatNL("  TestEmail2(text);");
  WebOutStringFormatNL("}");
  WebOutStringFormatNL("function getdistrict() {");
  WebOutStringFormatNL("  var reqid = document.getElementById('regselect').options[document.getElementById('regselect').selectedIndex].value;");
  WebOutStringFormatNL("  var link = '" & FormatSimpleLink("/ajx",true) & "?action=getdistrictformentor&reg=' + reqid;");
  WebOutStringFormatNL("  xmlhttp=new XMLHttpRequest();");
  WebOutStringFormatNL("  xmlhttp.open('GET',link,false);");
  WebOutStringFormatNL("  xmlhttp.send(null);");
  WebOutStringFormatNL("  document.getElementById('districtdiv').innerHTML = xmlhttp.responseText;");
  
  


  WebOutStringFormatNL("}");
  WebOutStringFormatNL("</script>");
  return;
end;

global
updating procedure GenMail(string txt,string head,string conf,record MentroVc Mentr,boolean testf,record CUVc CUr,string tstr)
begin
  record MailVc Mailr;
  row MailVc Mailrw;
  integer i;
  record MailSettingsBlock MSr;

  BlockLoad(MSr);

    RecordNew(Mailr);
    Mailr.Header = head;
    LineTextPut(Mailr,0,txt);
	
    
    ClearRow(Mailr,Mailrw,0);
    Mailrw.RowTyp = 1;
	  if testf then begin
      LineTextPut(Mailr,0,txt);
      Mailrw.AddrCode = MSr.FromSystem;
	  end else begin
      LineTextPut(Mailr,0,USetStr(32347));
      LineTextPut(Mailr,1,USetStr(10018) & " " & CUr.eMail);
      LineTextPut(Mailr,2,USetStr(10029) & ": " & tstr);
      LineTextPut(Mailr,3,USetStr(32472));
      LineTextPut(Mailr,4,"http://jal.lv/WebJALApprovebyc3a.hal?c=" & CUr.Code & "&a=" & CUr.Comment);
      Mailrw.AddrCode = MSr.Postmaster;
	  end;
    MatRowPut(Mailr,0,Mailrw);
    ClearRow(Mailr,Mailrw,1);
    Mailrw.RowTyp = kMailRowTypeTo;
    Mailrw.AddrCode = conf;
    MatRowPut(Mailr,1,Mailrw);
    Mailr.SendFlag = 1;
    if recordStore(Mailr,true) then begin 
	  if testf then begin
	    CreateRecordLink(Mailr,currentcompany,Mentr,currentcompany);
      CreateRecordLink(Mentr,currentcompany,Mailr,currentcompany);
	  end;
	end;

return;
end;
  
function string 255 GenerateRandomHash()
begin
  string 100 ast;
  LongInt pos,length;
  LongInt i;
  string 255 res,tstr;
  
  length = 20;

  res = "";
  Randomize;
  ast = "0f3481ade786F29523aaadeccbb123456ff987C2a3b4d6dd7ee8f922f33e5"; // 61 characters
  for (i=0;i<length;i=i+1) begin
    pos = Random(0,60);
    tstr = Mid(ast,pos,1);
    res = res & tstr;    
  end;

  GenerateRandomHash = res;
return;
end;

global webpublic
updating procedure WebMentorReg()
begin
  
  integer i;
  string 100 name,email,phone,text;
  record CUVc CUr,tCUr,oldCUr;
  record TeacherVc TCr;
  record SchoolVc SCr;
  record JALClassblock JALClassbl;
  record ReportMailBlock RMbl;
  record JALDistrictBlock JDbl;
  row JALDistrictBlock JDblrw;
  record JALRegionBlock JRbl;
  row JALRegionBlock JRblrw;
  record MentorVc Mentr;
  string 100 tstr,code;
  boolean savef,TrHs,foundf;
  integer err;

  BlockLoad(RMbl);
  BlockLoad(JALClassbl);
  BlockLoad(JDbl);
  BlockLoad(JRbl);
  err = 0;
  name = WebGetArg("name");
  email = WebGetArg("email");
  phone = WebGetArg("tel");
  
  savef = false;
  TrHs = true;
  tCUr.eMail = email;
  if blank(email) then begin
    err= err + 2;
  end;
  if blank(name) then begin
    err = err + 4;
  end;
  if blank(phone) then begin
    err = err + 8;
  end;
  foundf = false;
  if err == 0 then begin
    if readfirstkey("eMail",tCUr,1,true) begin
      if SetInSet(JALClassbl.EventPart,tCUr.Classification) then begin
        savef = true;
        foundf = true;
        RecordCopy(oldCUr,tCUr);
        tCUr.Classification = JALClassbl.Mentor;
        tstr = WebGetArg("password1");
        tCUr.AllowLogin = 0;
        tCUr.Comment = GenerateRandomHash;
        tCUr.Phone = phone;
        tCUr.CustType = 1;
        tCUr.CUType = 0;
        tCUr.Password = CalcPassword(tstr,tCUr.Code,0);
        if recordStore(tCUr,true) then begin code = tCUr.Code; end;
      end;
    

    end else begin
      RecordNew(CUr);
      //if (GetNextCustNr(tstr)) then begin end;
      //CUr.Code = tstr;
      CUr.Name = name;
      CUr.eMail = email;
      //CUr.VATNr = WebGetArg("pk");
      CUr.Phone = phone;
      CUr.CustType = 1;
      CUr.CUType = 0;
      CUr.Classification = JALClassbl.Mentor;
      CUr.AllowLogin = 0;
      CUr.Comment = GenerateRandomHash;
      tstr = WebGetArg("password1");
      if nonblank(tstr) then begin
        CUr.Password = CalcPassword(tstr,CUr.Code,0);
        if recordStore(CUr,true) then begin 
          text = CUr.Name & USetStr(32341);
          savef = true;
          code = CUr.Code; 
        end;
      end;
    end;

    if savef then begin
      RecordNew(Mentr);
      Mentr.MentorCode = NextSerNr("MentorVc",CurrentDate,-1,false,"");
      Mentr.MentorName = name;
      //Mentr.Telephone = phone;
      //Mentr.Email = email;
      Mentr.Company = WebGetArg("comp");
      Mentr.Job = WebGetArg("job");
      MatRowGet(JDbl,StringToLongInt(WebGetArg("district")),JDblrw);
      Mentr.District = JDblrw.District;
      MatRowGet(JRbl,StringToLongInt(WebGetArg("reg")),JRblrw);
      Mentr.Region = JRblrw.Region;
      Mentr.TransDate = CurrentDate;
      Mentr.CustCode = code;
      if RecordStore(Mentr,true) then begin 
        GenMail(text,USetStr(32340),RMbl.MentorMail,Mentr,true,CUr,""); 
        text = USetStr(32347) & chr(13) & USetStr(10018) & " " & CUr.eMail &  chr(13) & USetStr(10029) & ": " & tstr;
        if foundf then begin
          GenMail(text,USetStr(32348),tCUr.eMail,Mentr,false,tCUr,tstr); 
        end else begin
          GenMail(text,USetStr(32348),CUr.eMail,Mentr,false,CUr,tstr); 
        end;
      end;
      ShowRedirectHtml(FormatSimpleLink("/afterreg2",true),false);
    end else begin
      ShowRedirectHtml(FormatSimpleLink("/badreg",true),false);
    end;
  end else begin
    ShowRedirectHtml(FormatSimpleLink("/badreg",true),false);
  end;
  
  //stopalert("asdf");
  
 
return;
end;