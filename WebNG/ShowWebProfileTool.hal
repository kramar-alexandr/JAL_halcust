external function string 4 GiveCode(var string);
external function string 255 FormatSimpleLink(string,boolean);
external procedure ShowRedirectHtml(string,boolean);
external updating procedure GenMailForSMU(string,string,string,string,var record SMFVc,boolean,record CUVc,string);
external function boolean CheckEmailStr(string);
external function string 255 GetLinkToStruct(LongInt,boolean);
external function Boolean GetNextCustNr(var string);
external function Boolean FindSMURecord(string,var record SMFVc);
external function Boolean FindTchrRecord(string,var record TeacherVc);// Edit ************************** BPI Ukraine - KramarAlexandr - Tuesday, 6 November 2018 14:28:54
external updating procedure GenMailForParents(string,string,string,var record SMFVc,boolean,record CUVc,string);
external updating procedure GenMailForEmp(string,string,string,var record SMFVc,boolean,record CUVc,string);
external updating procedure GenMailForTeacherMy(string,string,string,var record SMFVc,boolean,record CUVc,string);
external updating function Boolean RecordAction_raEMailQue(var record MailVc,Boolean);
external procedure ExtractObj(string,var Integer,var string);
external procedure SendJALEmail(vector string,string,string);
external updating procedure CreateTeachApp(Integer,string, string);
external updating procedure CreateUniqueTeachApp(Integer,string, string);
external function string 255 ToolWebNGTranslateText2(Longint);

function string 255 GenerateRandomHash()
begin
  string 100 ast;
  LongInt pos,length;
  LongInt i;
  string 255 res,tstr;
  
  length = 20;

  res = "";
  Randomize;
  ast = "0f3481ade786F29523aaadeccbb123456ff987C2a3b4d6dd7ee8f922f33e5"; // 61 characters
  for (i=0;i<length;i=i+1) begin
    pos = Random(0,60);
    tstr = Mid(ast,pos,1);
    res = res & tstr;    
  end;

  GenerateRandomHash = res;
return;
end;

updating procedure RemoveEmpApplication(string smfcode,string custcode)
begin  
  record JALTeacherAccVc JTr;
  Boolean TrHs;
  Integer res;

  TrHs = true;
  JTr.SMFCode = smfcode;
  JTr.StatusFlag = 0;
  while (LoopKey("SMFStatus",JTr,2,TrHs)) begin
    if (JTr.SMFCode!=smfcode or JTr.StatusFlag!=0) then begin
      TrHs = false;
    end else begin
      if (JTr.RecCode==custcode) then begin
        RecordRemove(JTr);
        goto LRemoveEmpApplication;
      end;
    end;
  end;

LRemoveEmpApplication:;
  return;
end;

global webpublic
updating procedure WebDeleteEmpApplication()
begin
  record CUVc CUr,oldCUr,tCUr;
  record SMFVc SMFr;
  record RLinkVc RLr;
  boolean res;
  integer i,pos,err;
	string 255 text,headertext,name,member,errmsg; 
	record JALClassblock JALClassbl;
	vector string 255 vVals;
	 
	BlockLoad(JALClassbl);
  CUr.Code = WebGetArg("emp");
  
  if ReadFirstMain(CUr,1,true) begin
    if (CurrentCust!=CUr.Code) then begin
      if ReadRecordLink(CUr,1,SMFr,RLr) or FindSMURecord(CurrentCust,SMFr) begin
        if SMFr.SMFCode == WebGetArg("smu") then begin
          RemoveEmpApplication(SMFr.SMFCode,CUr.Code);
        end;
      end;
    end else begin
      err = 1;
      errmsg = ToolWebNGTranslateText2(88001);
    end;
  end;
  WebOutString("<res err='" & err & "' errmsg='" & errmsg & "'></res>");

  return;
end;

global webpublic
updating procedure WebDeleteEmp()
begin
  record CUVc CUr,oldCUr,tCUr;
  record SMFVc SMFr;
  record RLinkVc RLr;
  boolean res;
  integer i,pos,err;
	string 255 text,headertext,name,member,errmsg; 
	record JALClassblock JALClassbl;
	vector string 255 vVals;
	 
	BlockLoad(JALClassbl);
  CUr.Code = WebGetArg("emp");
  
  if ReadFirstMain(CUr,1,true) begin
    if (CurrentCust!=CUr.Code) then begin
      if ReadRecordLink(CUr,1,SMFr,RLr) or FindSMURecord(CurrentCust,SMFr) begin
        if (SMFr.SMFCode == WebGetArg("smu") and CUr.Code!=SMFr.CustCode) then begin
          RecordRemove(RLr);
          //RecordCopy(oldCUr,CUr);
          //CUr.blockedFlag = 1;
          //if recordupdate(oldCUr,CUr,true)==0 then begin end;
          pos = 0;
          name = "";
          member = "";
          ExtractObj(SMFr.Member,pos,name);
          while(nonblank(name)) begin
            If(name!= CUr.Name) then begin
              member = member & name & ",";
            end;
            ExtractObj(SMFr.Member,pos,name);
          end;
          SMFr.Member = Left(member,len(member) - 1);
          RecordStore(SMFr,true);
          res = true;
          i = 1;
          while ReadRecordLink(SMFr,i,tCUr,RLr) and res begin
            if tCUr.Code == CUr.Code then begin
              RecordRemove(RLr);
              res = false;
            end;
            i = i + 1;
          end;
              
          vVals["smucode"] = SMFr.SMFCode;
          vVals["custcode"] = CUr.Code;
          SendJALEmail(vVals,JALCLassbl.EmployeeRemoveText,CUr.eMail);
          if(SMFr.AgeFlag!=0) then begin
              SendJALEmail(vVals,JALCLassbl.EmployeeRemoveText2,CUr.ParenteMail);
          end;
        end;
      end;
    end else begin
      err = 1;
      errmsg = ToolWebNGTranslateText2(88001);
    end;
  end;
  
  WebOutString("<res err='" & err & "' errmsg='" & errmsg & "'></res>");

  return;
end;

function integer getSchoolYear(date d1)
begin
  integer res;

  if (getMonth(d1)>= 8) then begin
    res = getYear(d1);
  end else begin
    res = getYear(d1) - 1;
  end;
  
  getSchoolYear = res;
  return;
end;

function string 4 GetCompIdCode(string code,integer year)
begin
  string 4 res;
  record SMFVc SMFr;
  boolean TrHs;
  integer num,max,tempyear;
  string  10 tempyearstr;
  string 4 tstr;



  SMFr.SchoolCode = code;                                                                                                                                         
  TrHs = true;
  max = -1;
  while (LoopKey("SchoolCode",SMFr,1,TrHs)) begin
    if (SMFr.SchoolCode<>code) then begin
      TrHs = false;
    end else begin
      tempyearstr = right(SMFr.SMFCode,4);
      tempyear = stringtoLongint(tempyearstr);
      if (tempyear == year) then begin
        tstr = right(SMFr.SMFCode,7);
        tstr = left(tstr,3);
        num = StringToLongInt(tstr);
        if num > max then begin
          max = num;
        end;
      end;
    end;
  end;
  max = max + 1;
	res = max;
  res = GiveCode(res);
  
  GetCompIdCode = res;
  return;
end;

global
updating procedure FillNewSMUData(var record SMFVc SMFr,record CUVc CUr)
begin
  record TeacherVc TCr;
  record SchoolVc SCr;
  row SMFVc SMFrw;
  Integer year;
  string 255 code;

  RecordNew(SMFr);
  ClearRow(SMFr,SMFrw,1);
  SMFrw.Type = 0;
  SMFrw.Code = CUr.TeacherCode;
  TCr.TeacherCode = SMFrw.Code;
  if (ReadFirstMain(TCr,1,true)) then begin
    SMFrw.Name = TCr.TeacherName;
  end;
  MatRowPut(SMFr,0,SMFrw);

  SMFr.CustCode = CUr.Code;
  SMFr.SchoolCode = CUr.SchoolCode;
  SCr.SchoolCode = SMFr.SchoolCode;
  if (ReadFirstMain(SCr,1,true)) then begin
    SMFr.SchoolName = SCr.SchoolName;
  end;
  SMFr.Region = SCr.Region;
  SMFr.Manager = CUr.Name;
  SMFr.Email = CUr.eMail;
  SMFr.StatusFlag = 0;
  SMFr.ClassNum = CUr.ClassNum;
  SMFr.ClassChar = CUr.ClassChar;
  switch (SMFr.StatusFlag) begin
    case 0: SMFr.StatusName=USetStr(32111);
    case 1: SMFr.StatusName=USetStr(32112);
    case 2: SMFr.StatusName=USetStr(32113);
  end;
  SMFr.TypeFlag = StringToLongInt(WebGetArg("type"));
  SMFr.TypeName = USetStr(32131 + SMFr.TypeFlag);
  year = getSchoolYear(CurrentDate);
  code = GetCompIdCode(SMFr.SchoolCode,year);
  SMFr.SMFCode = left(SMFr.TypeName,1) & left(SMFr.Region,1) & SMFr.SchoolCode & code & year;
  //year = getYear(CurrentDate);
  SMFr.RegDate = year & "/" & year + 1;
  RecordStore(SMFr,true);
  CreateRecordLink(SMFr,CurrentCompany,CUr,CurrentCompany);
  CreateRecordLink(CUr,CurrentCompany,SMFr,CurrentCompany);


  return;
end;

global webpublic 
updating procedure WebChangeProfile()
begin
  record SMFVc SMFr,oldSMFr;
	row SMFVc SMFrw;
  record CUVc CUr,tCUr;
  integer err;
  string 30 name,comp,cust;
  Boolean savef,updatef;
  record RLinkVc RLr;
  string 10 cls;
  string 255 prspec,text;
	record JALClassblock JALClassbl;
	  
	BlockLoad(JALClassbl);
  err = 0;

  name = WebGetArg("name");
  comp = WebGetArg("smu");
  cust = WebGetArg("emp");
  cls = WebGetArg("prclass");
  prspec = WebGetArg("prodinfo");

  if blank(name) then begin
    err = err + 2;
  end else begin
    SMFr.SMFName = name;
    if (ReadFirstKey("SMFName",SMFr,1,true)) then begin
      if (comp <> SMFr.SMFCode) then begin
        err = err + 2;
      end;
    end;
  end;

  savef = false;

  if (err == 0) then begin
    CUr.Code = cust;
    if (ReadFirstMain(CUr,1,true)) begin
      if (ReadRecordLink(CUr,1,SMFr,RLr) or FindSMURecord(CUr.Code,SMFr)) begin
        if (SMFr.SMFCode == comp) then begin
          RecordCopy(oldSMFr,SMFr);
          updatef = true;
        end;
      end;
      if (updatef==false) then begin
        RecordNew(SMFr);
        FillNewSMUData(SMFr,CUr);
      end;
       
      SMFr.SMFName = name;
      SMFr.Objects = cls;
      SMFr.ProdSpec = prspec;
      WebGetText("comment",SMFr);
//          SMFr.ReadyFlag = 1;//CHN::removed. we will have a separate button to send for approval
      if (RecordStore(SMFr,true)) then begin
        if (updatef==false) then begin
          CreateRecordLink(SMFr,CurrentCompany,CUr,CurrentCompany);
          CreateRecordLink(CUr,CurrentCompany,SMFr,CurrentCompany);          
        end;
            /*Is this really needed. Will add a new button that will send for approval to 
            text=USetStr(32488);
            GenMailForSMU(text,"",text,CUr.eMail,SMFr,true,CUr,"");   // ��������� �������
            if(SMFr.FirstUpd==0) then begin
              tCUr.Code = SMFrw.Code;
              ReadFirstMain(tCUr,1,true);
              text=USetStr(32504) & SMFr.SMFName & "darbiba";
              SMFr.FirstUpd = 1;
              GenMailForTeacherMy(text,USetStr(32485),tCUr.eMail,SMFr,false,tCUr,"");
            end;	
            if(SMFr.AgeFlag!=0) then begin
              GenMailForParents(text,text,SMFr.ParenteMail,SMFr,true,CUr,"");// ��������� �������
            end;
            */
            
      end;
    end;
  end;
  
  PutSessionString("err",err);

  ShowRedirectHTML(FormatSimpleLink(WebGetArg("tpath"),true),false);


return;
end;

global webpublic
updating procedure WebSaveCompEmp()
begin
  record CUVc CUr,tCUr,oldCUr,cCUr;
  record SMFVc SMFr;
  string 100 name,email,cust,comp,tstr,passw2,tstr2;
  record JALClassBlock JALClassbl;
  boolean TrHs;
  record SchoolVc SCr;
  integer err;
  boolean foundf,savef;
  record RLinkVc RLr;
  string 255 text,headertext;
	
	BlockLoad(JALClassbl);
		
  err = 0;

  BlockLoad(JALClassbl);

  
  comp = webgetArg("smu");
  cust = webGetArg("cust");
  name = WebGetArg("name");
  email = WebGetArg("email");
  tstr = WebGetArg("passw1");
  passw2 = WebGetArg("passw2");

  if blank(tstr) then begin
    err = err + 32;
  end else begin
    if tstr <> passw2 then begin
      err = err + 64;
    end;
  end;

  if blank(name) then begin
    err = err + 2;
  end;
  foundf = false;
  if blank(email) then begin
    err = err + 4;
  end else begin
    if CheckEmailStr(email) == false then begin
      err = err + 8;
    end else begin
      tCUr.eMail = email;
      TrHs = true;
      if ReadFirstKey("eMail",tCUr,1,true) begin
        //if SetInSet(JALClassbl.EventPart,tCUr.Classification)==false and (tCUr.blockedFlag == 0) then begin
          //err = err + 16;
        //end else begin
          foundf = true;
        //end;
      end;
    end;
  end;
  savef = false;
  if err == 0 then begin
    
    CUr.Code = cust;
    cCUr.Code = CurrentCust;
    if ReadFirstMain(cCUr,1,true) then begin end;
    if ReadFirstMain(CUr,1,true) then begin
      if ReadRecordLink(CUr,1,SMFr,RLr) or FindSMURecord(CUr.Code,SMFr) then begin
        if (SMFr.SMFCode == comp and cCUr.Code == SMFr.CustCode) then begin
          if foundf then begin
            RecordCopy(oldCUr,tCUr);
            tCUr.Name = name;
            tCUr.AllowLogin = 1;
            tCUr.Comment = GenerateRandomHash;
            tCUr.blockedFlag = 0;
            tCUr.Classification = JALClassbl.Schoolar;
            tCUr.Password = CalcPassword(tstr,tCUr.Code,0);
            if recordStore(tCUr,true) then begin 
              if (ReadRecordLink(tCUr,1,SMFr,RLr)) then begin
                RecordRemove(RLr);
              end;
              CreateRecordLink(SMFr,CurrentCompany,tCUr,CurrentCompany);
              CreateRecordLink(tCUr,CurrentCompany,SMFr,CurrentCompany);
              text = USetStr(32347) & chr(13) & USetStr(10018) & " " & email &  chr(13) & USetStr(10029) & ": " & tstr;
			  headertext = USetStr(32483);
              GenMailForSMU(text,"",headertext,tCUr.eMail,SMFr,false,tCUr,tstr);   //���������� ����������
            end;
            savef = true;
          end else begin
            RecordNew(CUr);
            if (GetNextCustNr(tstr2)) then begin end;
            CUr.Code = tstr2;
            CUr.Name = name;
            CUr.eMail = email;
            CUr.CUType = 1;
            CUr.Classification = JALClassbl.Schoolar;
            CUr.AllowLogin = 1;
            CUr.Comment = GenerateRandomHash;
            SCr.SchoolCode = SMFr.SchoolCode;
            CUr.Password = CalcPassword(tstr,CUr.Code,0);
            if recordStore(CUr,true) then begin 
              if ReadFirstMain(SCr,1,true) then begin
                CreateRecordLink(CUr,currentcompany,SCr,currentcompany);
              end;
              CreateRecordLink(SMFr,CurrentCompany,CUr,CurrentCompany);
              CreateRecordLink(CUr,CurrentCompany,SMFr,CurrentCompany);
              text = USetStr(32347) & chr(13) & USetStr(10018) & " " & email &  chr(13) & USetStr(10029) & ": " & tstr;
			  headertext = USetStr(32483);
              GenMailForSMU(text,"",headertext,CUr.eMail,SMFr,false,CUr,tstr); //���������� ����������
            end;
            savef = true;
          end;
        end;
      end;
    end;
  end;

  if savef then begin
    PutSessionString("ename","");
    PutSessionString("eemail","");
    PutSessionString("err","");
    ShowRedirectHTML(FormatSimpleLink(GetLinkToStruct(JALClassbl.ProfileCorrectionStruct,true),true),false);
  end else begin
    PutSessionString("ename",name);
    PutSessionString("eemail",email);
    PutSessionString("err",err);
    ShowRedirectHTML(FormatSimpleLink(WebGetArg("regpath"),true),false);
  end;

return;
end;

global
updating procedure QRemoveRecordLink(record RLinkVc RLr)
begin

  RecordDelete(RLr);

  return;
end;

global
updating procedure QCreateRecordLinks(record SMFVc SMFr,record CUVc tCUr)
begin

  CreateRecordLink(SMFr,CurrentCompany,tCUr,CurrentCompany);
  CreateRecordLink(tCUr,CurrentCompany,SMFr,CurrentCompany);

  return;
end;

global
updating procedure RemoveSMFLinks(record CUVc CUr)
begin
  record RLinkVc RLr,RL2r;
  Integer i;
  record SMFVc SMFr;
  
  i = 1;
  while (ReadRecordLink(CUr,i,SMFr,RL2r)) begin
    QRemoveRecordLink(RL2r);
    i = i +1;
  end;
  return;
end;

function Boolean FindActiveApplication(Integer type,string reccode,var record JALTeacherAccVc JTr)
begin
  Boolean res;
  
  ResetLoop(JTr);
  JTr.StatusFlag = 0;
  JTr.RecType = type;
  JTr.RecCode = reccode;
  if (ReadFirstKey("RecType",JTr,3,true)) then begin
    res = true;
  end;

  FindActiveApplication = res;
  return;
end;

function Integer SMFEmpApplications(record SMFVc SMFr)
begin
  record JALTeacherAccVc JTr;
  Boolean TrHs;
  Integer res;
  record CUVc CUr;
  record RLinkVc RLr;
  Integer i;

  TrHs = true;
  JTr.SMFCode = SMFr.SMFCode;
  JTr.StatusFlag = 0;
  while (LoopKey("SMFStatus",JTr,2,TrHs)) begin
    if (JTr.SMFCode!=SMFr.SMFCode or JTr.StatusFlag!=0) then begin
      TrHs = false;
    end else begin
      res = res + 1;
    end;
  end;

  i = 1;
  while (ReadRecordLink(SMFr,i,CUr,RLr)) begin
    res = res + 1;
    i = i + 1;
  end;

  SMFEmpApplications = res;
  return;
end;

global webpublic 
updating procedure WebSaveCompEmp2()
begin
  record JALClassBlock JALClassbl;
  boolean TrHs;
  record SchoolVc SCr;
  record RLinkVc RLr,RL2r;
  record CUVc CUr,tCUr,oldCUr;
  record SMFVc SMFr,oldSMFr,tSMFr;
  Integer i,err;
	string 255 text,headertext;
	boolean res;
	vector string 255 vVals;
	record JALTeacherAccVc JTr;
	
  BlockLoad(JALClassbl);
	CUr.Code = CurrentCust;
  tCUr.Code = WebGetArg("nemp");
  if ReadFirstMain(CUr,1,true) begin
    if ReadRecordLink(CUr,1,SMFr,RLr) or FindSMURecord(CurrentCust,SMFr) begin
      res = true;
      i = 1;
      tCUr.Code = WebGetArg("nemp");
      if (ReadFirstMain(tCUr,1,true)) then begin
        if (ReadRecordLink(tCUr,1,tSMFr,RLr) or FindSMURecord(tCUr.Code,tSMFr)) then begin
          //skip
        end else begin
          if (SMFEmpApplications(SMFr)>4) then begin
            err = 1;
          end else begin
            if (FindActiveApplication(2,tCUr.Code,JTr)==false) then begin
              CreateTeachApp(2,SMFr.SMFCode,tCUr.Code);
              RecordCopy(oldCUr,tCUr);
              tCUr.JobDesc = WebGetArg("nemp_pos");
              RecordUpdate(oldCUr,tCUr,true);
            end;
            vVals["custcode"] = tCUr.Code;
            vVals["smucode"] = SMFr.SMFCode;
            SendJALEmail(vVals,JALCLassbl.EmployeeAddText,tCUr.eMail);
          end;
          /*
          CreateRecordLink(SMFr,CurrentCompany,tCUr,CurrentCompany);
          CreateRecordLink(tCUr,CurrentCompany,SMFr,CurrentCompany);
          RecordCopy(oldSMFr,SMFr);
          if(Blank(SMFr.Member)) then begin
            SMFr.Member = tCUr.Name;
          end else begin
            SMFr.Member = SMFr.Member & "," & tCUr.Name;
          end;
          RecordUpdate(oldSMFr,SMFr,true);
          vVals["custcode"] = tCUr.Code;
          SendJALEmail(vVals,JALCLassbl.EmployeeAddText,tCUr.eMail);
          if (tCUr.AgeFlag==1) then begin
            SendJALEmail(vVals,JALCLassbl.EmployeeAddText2,tCUr.eMail);        
          end;
          //should send email to parents as well
          */
        end;
      end;
    end;
	end;	
  WebOutString("<res err='" & err & "'></res>");
  
  return;
end;

global webpublic
updating procedure WebSetEmpApplication()
begin
	record JALTeacherAccVc JTr,oldJTr;
	record CUVc CUr;
	Integer stat;

  stat = StringToInt(WebGetArg("stat"));
  if (stat>0 and stat<3) then begin
    CUr.Code = CurrentCust;
    if (ReadFirstMain(CUr,1,true)) then begin
      if (FindActiveApplication(2,CUr.Code,JTr)) then begin
        RecordCopy(oldJTr,JTr);
        JTr.StatusFlag = stat;
        RecordUpdate(oldJTr,JTr,true);
      end;
    end;
  end;
  
  return;
end;

global webpublic
updating procedure WebChangeCompEmp()
begin
  record CUVc CUr,tCUr,cCUr,oldCUr;
  record SMFVc SMFr,oldSMFr;
  string 100 name,email,cust,comp,tstr,passw2;
  record JALClassBlock JALClassbl;
  boolean TrHs;
  record SchoolVc SCr;
  integer err;
  boolean foundf,savef;
  record RLinkVc RLr;
  string 255 text;
  string 60 manemail,oldemail,telephone;

  err = 0;

  BlockLoad(JALClassbl);

  
  comp = webgetArg("smu");
  cust = webGetArg("cust");
  name = WebGetArg("name");
  email = WebGetArg("email");
  tstr = WebGetArg("passw1");
  passw2 = WebGetArg("passw2");
  telephone = WebGetArg("telephone");

  logtext(0, "1");

  if nonblank(tstr) then begin
    if tstr <> passw2 then begin
      err = err + 64;
    end;
  end;
logtext(0, "2");
  if blank(name) then begin
    err = err + 2;
  end;

  tCUr.Code = cust;
  if ReadFirstMain(tCUr,1,true) then begin oldemail = tCUr.eMail; end;
logtext(0, "3");
  foundf = false;
  if blank(email) then begin
    err = err + 4;
  end else begin
    if CheckEmailStr(email) == false then begin
      err = err + 8;
    end else begin
      if email <> tCUr.eMail then begin
        tCUr.eMail = email;
        TrHs = true;
        ResetLoop(tCUr);
        if ReadFirstKey("eMail",tCUr,1,true) begin
          if SetInSet(JALClassbl.EventPart,tCUr.Classification)==false and (tCUr.blockedFlag == 0) then begin
            err = err + 16;
          end;
        end;
      end;
    end;
  end;

  savef = false;
  if err == 0 then begin
    cCUr.Code = CurrentCust ;
    if ReadFirstMain(cCUr,1,true) then begin manemail = cCUr.eMail; end;
    
    CUr.Code = cust;
    if ReadFirstMain(CUr,1,true) then begin
      if ReadRecordLink(CUr,1,SMFr,RLr) or FindSMURecord(cCUr.Code,SMFr) then begin
        if SMFr.SMFCode == comp then begin
          if (cust == cCUr.Code or cCUr.Code == SMFr.CustCode) then begin
              RecordCopy(oldCUr,CUr);
              CUr.Name = name;
              CUr.eMail = email;
              logtext(0, "5");
              if(nonblank(telephone))then begin
              	CUr.Phone = telephone;
              end;
              //stopalert(email & " eee " & cust & ";" & manemail & ";" & CurrentCust);
              CUr.blockedFlag = 0;
              CUr.Classification = JALClassbl.Schoolar;
              if nonblank(tstr) then begin
                CUr.Password = CalcPassword(tstr,CUr.Code,0);
              end;
              if recordUpdate(oldCUr,CUr,true)== 0 then begin end;
              savef = true;
              if oldemail == SMFr.Email then begin
                recordCopy(oldSMFr,SMFr);
                SMFr.Manager = CUr.Name;
                SMFr.Email = CUr.eMail;
                if RecordStore(SMFr,true) then begin end;
              end;
							tCUr.Classification = JALClassbl.Schoolar;
							text = USetStr(32494) &  Chr(13) & USetStr(32493) & passw2;
							GenMailForSMU(text,"",text,tCUr.eMail,SMFr,true,tCUr,tstr);   //��������� ������
							if(SMFr.AgeFlag!=0) then begin
								text = USetStr(32491) & Chr(13) & USetStr(32492) & CUr.Name & Chr(13) & USetStr(32493) & passw2;
								GenMailForParents(text,text,SMFr.ParenteMail,SMFr,true,tCUr,tstr); //��������� ������
							end;
          end;
        end;
      end;
    end;
  end;
return;
end;

global webpublic
updating procedure WebChangeCompTch()
begin
  record CUVc CUr,tCUr,cCUr,oldCUr;
  record SMFVc SMFr,oldSMFr;
  string 100 name,email,cust,comp,tstr,passw2;
  record JALClassBlock JALClassbl;
  boolean TrHs;
  record SchoolVc SCr;
  integer err;
  boolean foundf,savef;
  record RLinkVc RLr;
  string 255 text;
  string 60 manemail,oldemail,telephone;
  record TeacherVc Tchr;

  err = 0;
	
	
	logtext(0,"WebChangeCompTch ");
	
  BlockLoad(JALClassbl);

  cust = webGetArg("cust");
  email = WebGetArg("email");
  telephone = WebGetArg("telephone");

  tCUr.Code = CurrentCust;
  if ReadFirstMain(tCUr,1,true) then begin oldemail = tCUr.eMail; end;
	
  foundf = false;
  if blank(email) then begin
    err = err + 4;
  end else begin
    if CheckEmailStr(email) == false then begin
      err = err + 8;
    end else begin
      if email <> tCUr.eMail then begin
        tCUr.eMail = email;
        TrHs = true;
        ResetLoop(tCUr);
        if ReadFirstKey("eMail",tCUr,1,true) begin
          if SetInSet(JALClassbl.EventPart,tCUr.Classification)==false and (tCUr.blockedFlag == 0) then begin
            err = err + 16;
          end;
        end;
      end;
    end;
  end;
  
  savef = false;
  if err == 0 then begin
    cCUr.Code = CurrentCust;
    if ReadFirstMain(cCUr,1,true) then begin manemail = cCUr.eMail; end;
    CUr.Code = cust;
    if ReadFirstMain(CUr,1,true) then begin
			RecordCopy(oldCUr,CUr);
			CUr.eMail = email;
			if(nonblank(telephone))then begin
			CUr.Phone = telephone;
			end;
			if recordStore(CUr,true) then begin end;
			savef = true;
    end;
  end;

  if savef then begin
    PutSessionString("err","");
    ShowRedirectHTML(FormatSimpleLink(WebGetArg("regpath"),true) & "?cust=" & cust,false);
  end else begin
    if err == 0 then begin
      PutSessionString("err",err);
      ShowRedirectHTML(FormatSimpleLink(GetLinkToStruct(JALClassbl.ProfileCorrectionStruct,true),true),false);
    end else begin
      PutSessionString("err",err);
      ShowRedirectHTML(FormatSimpleLink(WebGetArg("regpath"),true) & "?cust=" & cust,false);
    end;
  end;

return;
end;

global webpublic
updating procedure WebChangeCompParent()
begin
  record CUVc CUr,tCUr,cCUr,oldCUr;
  record SMFVc SMFr,oldSMFr;
  string 100 name,email,cust,comp,tstr,passw2, firstName, secondName;
  record JALClassBlock JALClassbl;
  boolean TrHs;
  record SchoolVc SCr;
  integer err;
  boolean foundf,savef;
  record RLinkVc RLr;
  string 255 text;
  string 60 manemail,oldemail,telephone;

  err = 0;

  BlockLoad(JALClassbl);

  
  comp = webgetArg("smu");
  cust = webGetArg("cust");
  firstName = webGetArg("firstName");
  secondName = webGetArg("secondName");
  email = webGetArg("email");
  SMFr.SMFCode = comp;
  ReadFirstMain(SMFr,1,true);

  SMFr.ParentName = firstName;// Edit ************************** BPI Ukraine - KramarAlexandr - Friday, 5 October 2018 17:42:32
	SMFr.ParentSurName = secondName;// Edit ************************** BPI Ukraine - KramarAlexandr - Friday, 5 October 2018 17:42:32
	SMFr.ParenteMail = email;// Edit ************************** BPI Ukraine - KramarAlexandr - Friday, 5 October 2018 17:42:33

	recordStore(SMFr, true);

	text = USetStr(32495);
	GenMailForSMU(text,"",text,SMFr.ParenteMail,SMFr,true,CUr,tstr); //��������� ���������� � ���������

	if(SMFr.AgeFlag!=0) then begin
		text = USetStr(32496) & Chr(13)&Chr(10) & USetStr(32497) & email & ", " & firstName & " " & secondName;
		GenMailForParents(text,text,SMFr.ParenteMail,SMFr,true,tCUr,tstr); //��������� ���������� � ���������
    end;
return;
end;

global webpublic
updating procedure WebEventStudentVisitTITAN()
begin
  record JALEventEntryVc JEEr;
	record JALEventVc JEr;
  string 60 code,dates,dateStart,dateEnd;
	integer ret;
	ret = 400;
	code = webGetArg("code");
	dates = webGetArg("date");
	JEEr.SerNr = "";
	While(LoopMain(JEEr,1,true)) begin
		if(JEEr.CustCode==code) then begin
			JEr.SerNr = JEEr.EventNr;
			if(ReadFirstMain(JEr,1,true)) then begin
				if(JEr.StatusFlag==2) then begin
					ret = 200;
					JEEr.StatusFlag = 4;
				end;
			end;	
		end;
	end;
	WebOutStringFormatNL(ret);
return;
end;	

global webpublic
updating procedure WebEventStudentVisitEnudiena()
begin
  record JALEventEntryVc JEEr;
	record JALEventVc JEr;
  string 60 code,dates,dateStart,dateEnd;
	integer ret;
	ret = 400;
	code = webGetArg("code");
	dates = webGetArg("date");
	JEEr.SerNr = "";
	While(LoopMain(JEEr,1,true)) begin
		if(JEEr.CustCode==code) then begin
			JEr.SerNr = JEEr.EventNr;
			if(ReadFirstMain(JEr,1,true)) then begin
				if(JEr.StatusFlag==1) then begin
					ret = 200;
					JEEr.StatusFlag = 4;
				end;
			end;	
		end;
	end;
	WebOutStringFormatNL(ret);
return;
end;	

global webpublic
 procedure WebGetDocuments()
begin
  record JALFileVc docr;
	record SMFVc SMFr;
  string 60 code,dates,dateStart,dateEnd;
	integer ret;
	code = webGetArg("code");
	docr.SerNr = "";
	WebOutStringFormatNL("[");
	ret = 0;
	While(LoopMain(docr,1,true)) begin
		if(docr.SMFCode==code) then begin
			if(ret > 0) then begin
				WebOutStringFormatNL(",");
			end;	
			ret=ret+1;
			 WebOutStringFormatNL("{");
										logtext(0,"3");
												WebOutStringFormatNL("\"serNr\":\"" & docr.SerNr & "\",");
                        WebOutStringFormatNL("\"regDate\":\"" & DateToString(docr.TransDate,"MM.DD.YYYY") & "\",");
                        WebOutStringFormatNL("\"docName\":\"" & docr.Name & "\",");
                        WebOutStringFormatNL("\"status\":\"" & docr.Status & "\"");
      														WebOutStringFormatNL("}" );                                              
		end;
	end;
	WebOutStringFormatNL("]");
return;
end;	


global webpublic
updating procedure WebSendForTeacherApproval()
begin
  record CUVc CUr,tCUr;
  record SMFVc SMFr,oldSMFr;
  record RLinkVc RLr;
  vector string 255 vVals;
  record JALClassBlock JALClassbl;
  record TeacherVc TCr;


  CUr.Code = CurrentCust;
  if ReadFirstMain(CUr,1,true) then begin
    if (ReadRecordLink(CUr,1,SMFr,RLr) or FindSMURecord(CUr.Code,SMFr)) then begin
      RecordCopy(oldSMFr,SMFr);
      SMFr.ReadyFlag = 1;
      RecordUpdate(oldSMFr,SMFr,true);
      CreateTeachApp(0,SMFr.SMFCode,CUr.TeacherCode);
      TCr.TeacherCode = CUr.TeacherCode;
      if (ReadFirstMain(TCr,1,true)) then begin
        tCUr.Code = TCr.CustCode;
        if (ReadFirstMain(tCUr,1,true)) then begin
          BlockLoad(JALClassbl);
          vVals["custcode"] = CUr.Code;
          vVals["smucode"] = SMFr.SMFCode;
          vVals["link"] = "http://jal.lv/pieteikumi";
          SendJALEmail(vVals,JALCLassbl.TeacherRequestText2,tCUr.eMail);        
        end;
      end;
    end;
  end;
    
  return;
end;


global webpublic
updating procedure WebDownloadSMUDoc()
begin
  record CUVc CUr,tCUr;
  record SMFVc SMFr,oldSMFr;
  record RLinkVc RLr;
  record JALClassBlock JALClassbl;
  record TeacherVc TCr;
  string 255 filename;
  Boolean foundf;

  CUr.Code = CurrentCust;
  if ReadFirstMain(CUr,1,true) then begin
    if (ReadRecordLink(CUr,1,SMFr,RLr) or FindSMURecord(CUr.Code,SMFr)) then begin
      filename = "SMU.pdf";
      SetDocumentFilename(filename);
      SetMedia(mtPdf);
      PrintDocument(SMFr,"SMFForm",false);
      SetDocumentFilename("");
      if (FileExists(filename)) then begin
        WebSetContentType("application/pdf");
        WebSetContentDisposition("attachment; filename=" & filename);//or inline?
        WebOutFile(filename);
        Delete_File(filename);
        foundf = true;
      end;
    end;
  end;
  if (!foundf) then begin
    WebOutString(USetStr(3000000));
  end;

  return;
end;