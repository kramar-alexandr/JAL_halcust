external function string 255 FormatSimpleLink(string,boolean);//external procedure WebOutStringFormatNL(string);external function string 255 ToolWebNGtranslateText(integer);external procedure ShowRedirectHtml(string,boolean);external procedure SelBoxForRegForTeacher();global procedure DrawEventForm(string code)begin  WebOutStringFormatNL("<form id=""reg"" method=""POST"" action=""/WebSaveUnRegForm.hal"" onSubmit=""return testeventfields(this,'" & ToolWebNGtranslateText(20055) & "','" & ToolWebNGtranslateText(20058) & "','" & toolwebngtranslatetext(20020) & "','" & toolwebngtranslatetext(20019) & "','" & toolwebngtranslatetext(20015) & "')"">");  WebOutStringFormatNL(ToolWebNGtranslateText(23110));  WebOutStringFormatNL("<input type=""hidden"" name=""regpath"" value=""" & WebGetArg("path") & """>");  WebOutStringFormatNL("<input type=""hidden"" name=""code"" value=""" & code & """>");  SelBoxForRegForTeacher;  WebOutStringFormatNL("<input class=""spinput"" type=""text"" name=""name"" value=""""><div>" & ToolWebNGtranslateText(20030) & "</div>");  WebOutStringFormatNL("<input id=""email"" class=""spinput"" type=""text"" name=""email""  onchange=""testemail(this.value);""><div>" & ToolWebNGtranslateText(20033) & "</div>"); // WebOutStringFormatNL(ToolWebNGtranslateText(21062) & "  <input class=""spinput""type=""text"" name=""email"" value=""" & GetSessionString("cemail") & """><br><br>"); // WebOutStringFormatNL(ToolWebNGtranslateText(21062) & "  <input class=""spinput""type=""text"" name=""email"" value=""" & GetSessionString("cemail") & """><br><br>");  WebOutStringFormatNL("<div id=""errormsg""><div id=""ereg""></div><div id=""edistrict""></div><div id=""eschool""></div><div id=""ename""></div><div id=""eemail""></div><div id=""esameemail"">");  WebOutStringFormatNL("<div id=""samemailmsg""></div></div><div id=""ecompare""></div></div>");  WebOutStringFormatNL("<input class=""spbutton"" type=""submit"" value=""" & ToolWebNGtranslateText(21070) &""">");  WebOutStringFormatNL("</form>");  WebOutStringFormatNL("<script>");  WebOutStringFormatNL("function getschoolforteacher() {");  WebOutStringFormatNL("  var reqid = document.getElementById('districtselect').options[document.getElementById('districtselect').selectedIndex].value;");  WebOutStringFormatNL("  var link = '" & FormatSimpleLink("/ajx",true) & "?action=getschoolforteacher&district=' + reqid;");  WebOutStringFormatNL("  xmlhttp=new XMLHttpRequest();");  WebOutStringFormatNL("  xmlhttp.open('GET',link,false);");  WebOutStringFormatNL("  xmlhttp.send(null);");  WebOutStringFormatNL("  document.getElementById('schooldiv').innerHTML = xmlhttp.responseText;");  WebOutStringFormatNL("}");  WebOutStringFormatNL("function getdistrict() {");  WebOutStringFormatNL("  var reqid = document.getElementById('regselect').options[document.getElementById('regselect').selectedIndex].value;");  WebOutStringFormatNL("  var link = '" & FormatSimpleLink("/ajx",true) & "?action=getdistrictforteacher&reg=' + reqid;");  WebOutStringFormatNL("  xmlhttp=new XMLHttpRequest();");  WebOutStringFormatNL("  xmlhttp.open('GET',link,false);");  WebOutStringFormatNL("  xmlhttp.send(null);");  WebOutStringFormatNL("  document.getElementById('districtdiv').innerHTML = xmlhttp.responseText;");  WebOutStringFormatNL("}");  WebOutStringFormatNL("function testemail(email) {");  WebOutStringFormatNL("  var reqid = email");  WebOutStringFormatNL("  var link = '" & FormatSimpleLink("/ajx",true) & "?action=getmail&email=' + reqid;");  WebOutStringFormatNL("  xmlhttp=new XMLHttpRequest();");  WebOutStringFormatNL("  xmlhttp.open('GET',link,false);");  WebOutStringFormatNL("  xmlhttp.send(null);");  WebOutStringFormatNL("  var text = xmlhttp.responseText;");  WebOutStringFormatNL("  TestEmail2(text);");  WebOutStringFormatNL("}</script>");  /*WebOutStringFormatNL("<script type=""text/javascript"">");  WebOutStringFormatNL("var box_height = document.getElementById(""mainbox"").clientHeight;");  WebOutStringFormatNL("box_height = box_height + 300;");  WebOutStringFormatNL("if (box_height < 571) {box_height = 571;}");  WebOutStringFormatNL("document.getElementById(""mainbox"").style.height = box_height +""px"";");  WebOutStringFormatNL("</script>");*/  return;end;globalupdating procedure GenCourseMail(string txt,string head,string conf)begin  record MailVc Mailr;  row MailVc Mailrw;  integer i;  string 100 tstr;  record MailSettingsBlock MSr;  BlockLoad(MSr);    RecordNew(Mailr);    Mailr.Header = head;    LineTextPut(Mailr,0,txt);	        ClearRow(Mailr,Mailrw,0);    Mailrw.RowTyp = 1;    Mailrw.AddrCode = MSr.FromSystem;    MatRowPut(Mailr,0,Mailrw);    ClearRow(Mailr,Mailrw,1);    Mailrw.RowTyp = kMailRowTypeTo;    Mailrw.AddrCode = conf;    MatRowPut(Mailr,1,Mailrw);    Mailr.SendFlag = 1;    if recordStore(Mailr,true) then begin end;return;end;updating procedure RegisterContactForEvent(string code,record CUVc CUr) begin  record CourseEventVc CEr,oldCEr;  row CourseEventVc CErw;  boolean savef;  integer i,rwcnt;  savef = true;   CEr.SerNr = code;        if readfirstmain(CEr,1,true) then begin            rwcnt = MatRowCnt(CEr);      for( i = 0; i < rwcnt; i = i + 1) begin        MatRowGet(CEr,i,CErw);        if CErw.CustCode == CUr.Code then begin          savef = false;        end;      end;      if savef then begin        RecordCopy(oldCEr,CEr);        ClearRow(CEr,CErw,1);        CErw.ContactCode = CUr.Code;        CErw.ContactName = CUr.Name;        CErw.Price = CEr.Price;        CErw.CustCode = CErw.ContactCode;        MatRowPut(CEr,rwcnt,CErw);        if recordUpdate(oldCEr,CEr,true)==0 then begin           GenCourseMail(USetStr(32384) & CEr.CourseName,USetStr(32383),CUr.eMail);        end;      end;    end; return; end;global webpublicupdating procedure WebSaveUnRegForm()begin  record CUVc CUr,tCUr;  record CourseEventVc CEr,oldCEr;  record SchoolVc SCr;  record JALClassBlock JCbl;  row CourseEventVc CErw;  string 255 code,path;  integer rwcnt,err;  string 100 email;  boolean TrHs,savef;  BlockLoad(JCbl);  code = WebGetArg("code");  path = WebGetArg("regpath");  savef = false;  err = 0;  if blank(WebGetArg("name")) then begin    err = err + 2;  end;  email = WebGetArg("email");  if blank(email) then begin    err = err + 2;  end else begin    TrHs = true;    tCUr.eMail = email;    if readfirstkey("eMail",tCUr,1,true) begin      if tCUr.Classification == JCbl.EventPart then begin        RegisterContactForEvent(code,tCUr);        savef = true;      end else begin        err = err + 2;      end;    end;  end;  SCr.SchoolCode = WebGetArg("school");  if readfirstmain(SCr,1,true) == false then begin    err = err + 2;  end;  if err == 0 then begin    if savef then  begin      ShowRedirectHtml(FormatSimpleLink("/afterapply",true) & "?cc=" & code & "&tpath=" & path,false);    end else begin      RecordNew(CUr);      CUr.Name = WebGetArg("name");      CUr.eMail = email;      CUr.CustType = 1;      CUr.CUType = 0;      CUr.Classification = JCbl.EventPart;      SCr.SchoolCode = WebGetArg("school");      if readfirstmain(SCr,1,true) then begin        CreateRecordLink(CUr,currentcompany,SCr,currentcompany);      end;            if recordStore(CUr,true) then begin         RegisterContactForEvent(code,CUr);        ShowRedirectHtml(FormatSimpleLink("/afterapply",true) & "?cc=" & code & "&tpath=" & path,false);      end else begin        ShowRedirectHtml(FormatSimpleLink("/events",true),false);      end;    end;  end else begin    ShowRedirectHtml(FormatSimpleLink("/badreg",true),false);    end;return;end;