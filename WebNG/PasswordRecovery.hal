external function boolean CheckEmailStr(string);external function string 255 FormatSimpleLink(string,boolean);external function string 255 ToolWebNGTranslateText(integer);external procedure ShowRedirectHtml(string,boolean);external procedure RedirectToLoginPage();global procedure DrawPasswordRecoveryPage()begin  longint err;  err = StringToLongInt(GetSessionString("err"));  PutSessionString("err","");  WebOutStringFormatNL("<form action=""/WebRecoverPassword.hal"" method=""POST"">");  WebOutStringFormatNL("<input type=""hidden"" name=""rec_path"" value=""" & WebGetArg("path") & """>");  if err >2 then begin    if (BitAnd(err,4) == 4) then begin      WebOutStringFormatNL("<div id=""errmsg"">" & ToolWebNGTranslateText(25203) & "</div>");//must be filled    end;    if (BitAnd(err,8) == 8) then begin      WebOutStringFormatNL("<div id=""errmsg"">" & ToolWebNGTranslateText(26011) & "</div>");//incorrect    end;    if (BitAnd(err,16) == 16) then begin      WebOutStringFormatNL("<div id=""errmsg"">" & ToolWebNGTranslateText(25204) & "</div>");//did not find    end;    WebOutStringFormatNL("<div class=""inputline""><div class=""inputlabel"">" & ToolWebNGTranslateText(25200) & "</div><input type=""text"" name=""email"" value=""" & GetSessionString("eemail") & """></div>")    PutSessionString("eemail","");  end else begin    WebOutStringFormatNL("<div class=""inputline""><input type=""text"" placeholder="& ToolWebNGTranslateText(25200) &" name=""email""></div>")  end;  WebOutStringFormatNL("<div class=""inputline""><input type=""submit"" value=""" & ToolWebNGTranslateText(25201) & """></div>");  if err == 2 then begin    WebOutStringFormatNL("<div id=""donemsg"">" & ToolWebNGTranslateText(25205) & "</div>");  end;  WebOutStringFormatNL("</form>");return;end;updating procedure SendRecoveryMail(record CUVc CUr,string passw)begin  record MailVc Mailr,oldMailr;  record LTxtVc LTr;  row MailVc Mailrw;  record JALClassBlock JCbl;  integer i,cnt,lcnt;  string 255 tstr;  record MailSettingsBlock MSr;  BlockLoad(MSr);  BlockLoad(JCbl);        cnt = 0;    RecordNew(Mailr);    Mailr.SerNr = NextSerNr("MailVc",CurrentDate,-1,false,"");    Mailr.Header = JCbl.RecoveryHead;    LTr.Code = JCbl.RecoveryStartTxt;        if readfirstMain(LTr,1,true) then begin      lcnt = LineTextCnt(LTr);      for (i = 0; i < lcnt ; i = i + 1) begin        tstr = LineTextGet(LTr,i);        LineTextPut(Mailr,cnt,tstr);        cnt = cnt + 1;      end;    end;    LineTextPut(Mailr,cnt,USetStr(10018) & " " & CUr.eMail);    cnt = cnt + 1;    LineTextPut(Mailr,cnt,USetStr(20503) & ":" & passw);    cnt = cnt + 1;    LTr.Code = JCbl.RecoveryEndTxt;    if readfirstMain(LTr,1,true) then begin      lcnt = LineTextCnt(LTr);      for (i = 0; i < lcnt ; i = i + 1) begin        tstr = LineTextGet(LTr,i);        LineTextPut(Mailr,cnt,tstr);        cnt = cnt + 1;      end;    end;	        ClearRow(Mailr,Mailrw,0);    Mailrw.RowTyp = 1;    Mailrw.AddrCode = MSr.FromSystem;    MatRowPut(Mailr,0,Mailrw);    ClearRow(Mailr,Mailrw,1);    Mailrw.RowTyp = kMailRowTypeTo;    Mailrw.AddrCode = CUr.eMail;    MatRowPut(Mailr,1,Mailrw);    if (recordStore(Mailr,true)) then begin      ReadFirstMain(Mailr,1,true);      RecordCopy(oldMailr,Mailr);      Mailr.SendFlag = 1;      RecordStore(Mailr,true);    end;return;end;global webpublicupdating procedure WebRecoverPassword()begin  string 100 email;  record CUVc CUr,oldCUr;  integer err;  longint newpasswd;  string 10 tstr;  email = WebGetArg("email");  err = 0;    if blank(email) then begin    err = err + 4;  end else begin    if CheckEmailStr(email)== false then begin      err = err + 8;    end else begin      CUr.eMail = email;      if readfirstkey("eMail",CUr,1,true) then begin      end else begin        err = err + 16;      end;    end;  end;    if err == 0 then begin    err = 2;    RecordCopy(oldCUr,Cur);    newpasswd = Random(11111,91111);    tstr = newpasswd;    CUr.Password = CalcPassword(tstr,CUr.Code,0);      if (RecordStore(CUr,true)) then begin    end;    SendRecoveryMail(CUr,tstr);    PutSessionString("eemail","");    PutSessionString("err",err);    ShowRedirectHtml(FormatSimpleLink(WebGetArg("rec_path"),true),false);  end else begin    ShowRedirectHtml(FormatSimpleLink(WebGetArg("rec_path"),true),false);    PutSessionString("eemail",email);    PutSessionString("err",err);  end;return;end;