external function string 255 removenextnode(var string);
external function string 255 FormatSimpleLink(string,boolean);
//webng
external procedure RedirectToURL(string);
//pages
external procedure ShowWebAppPageStart(record WebNGPageVc,string);
external procedure ShowWebAppPageEnd(record WebNGPageVc);
//std
external function string 255 GetNextValue(var string);
external function boolean IsNumeric(string);
external function string 10 CurrentWebLang();
external function integer GetJAlCustType(record CUVc,var record SMFVc,var record TeacherVc,var record MentorVc);
external function string 255 toolwebngtranslatetext(integer);
external procedure ShowRedirectHtml(string,boolean);
external procedure ExtractObj(string,var Integer,var string);
external function string 255 CreateJson(string);
external function string 255 ToolWebNGTranslateText2(Longint);
external function string 255 StrReplace(string,string,string);


procedure SetContentTypeForExtension(string ext)
begin
  switch (ext) begin
    case "css" : WebSetContentType("text/css");
    case "jpg" : WebSetContentType("image/jpeg");
    case "jpeg" : WebSetContentType("image/jpeg");
    case "png" : WebSetContentType("image/png");
    case "gif" : WebSetContentType("image/gif");
    case "htc" : WebSetContentType("text/x-component");
    case "exe" : WebSetContentType("application/binary");
    case "bin" : WebSetContentType("application/binary");
    case "obj" : WebSetContentType("application/binary");
    case "hpf" : WebSetContentType("application/binary");
    case "hob" : WebSetContentType("application/binary");
    case "dat" : WebSetContentType("application/binary");
    case "swf" : WebSetContentType("application/x-shockwave-flash");
    case "pdf" : WebSetContentType("application/pdf");
    case "zip" : WebSetContentType("application/zip");
    case "txt" : WebSetContentType("text/plain");
    case "xml" : WebSetContentType("text/xml");
    case "xsl" : WebSetContentType("text/xsl");
    case "htm" : WebSetContentType("text/html");
    case "html" : WebSetContentType("text/html");
    otherwise
      WebSetContentType("application/binary");
  end;
  return;
end;

function boolean ToolFindMatchingTranslation(string code,var record WebNGTranslateVc WTr,string lang)
begin
  boolean res,foundf;

  res = false;
  foundf = true;
  ResetLoop(WTr);
  WTr.LangCode = lang;
  while (LoopKey("EventLangCode:" & code,WTr,2,foundf)) begin
    if WTr.LangCode <> lang then begin
      foundf = false;
    end else begin
      foundf = false;
      res = true;
    end;
  end;

 ToolFindMatchingTranslation = res;
return;
end;

function boolean FindFilledEntry(var record CUVc CUr,var record JALEventEntryVc JEEr,var integer type,longint nr)
begin
  record SMFVc SMFr;
  record TeacherVc TCr;
  record MentorVc MTr;
  boolean res;

  res = false;
  if nonblank(CurrentCust) then begin
    CUr.Code = CurrentCust;
    if readfirstmain(Cur,1,true) then begin
      type = GetJAlCustType(CUr,SMFr,TCr,MTr);
      JEEr.CustType = type;
      JEEr.EventNr = nr;
      switch type begin
        case 0: JEEr.AddCode = SMFr.SMFCode;
        case 1: JEEr.AddCode = TCr.TeacherCode;
        case 2: JEEr.AddCode = MTr.MentorCode;
      end;
      if readfirstkey("CustType",JEEr,3,true) then begin
        res = true;
      end;
    end;
  end;

  FindFilledEntry = res;

return;
end;

function string 255 removelastnode(string path)
begin
  string 255 res;
  integer pos,i;

  res = "";
  pos = 0;
  for (i = len(path)-1; i>=0; i = i - 1) begin
    if (mid(path,i,1) == "/") then begin
      pos = i;
      i = 0;
    end;
  end;
  res = mid(path,0,pos);

  removelastnode = res;
return;
end;

global
function boolean FindMatchingTranslation(string code,var record WebNGTranslateVc WTr,string def)
begin
  boolean res;

  res = false;

  if ToolFindMatchingTranslation(code,WTr,CurrentWebLang) then begin
    res = true;
  end else begin
    if ToolFindMatchingTranslation(code,WTr,def) then begin
      res = true;
    end;
  end;

  FindMatchingTranslation = res;

return;
end;

function boolean EventHasNextStep(record JALEventVc JEr,var string step)
begin
  row JALEventVc JErw;
  integer i,rwcnt;
  boolean res;
  record JALEventFieldVc JFr;

  res = false;
  rwcnt = MatRowCnt(JEr);
  for (i = 0; i < rwcnt; i = i + 1) begin
    MatRowGet(JEr,i,JErw);
    if (JErw.Show == 0) or (JErw.Show == 1 and blank(CurrentCust)) or (JErw.Show == 2 and nonblank(CurrentCust)) then begin
      JFr.SerNr = JErw.Field;
      if readfirstmain(JFr,1,true) then begin
        step = "reg";
        res = true;
      end;
    end;
  end;

  EventHasNextStep = res;

return;
end;

procedure ShowEventContent(record JALEventVc JEr)
begin
  record WebNGTranslateVc WTr;
  boolean testf;
  string 10 step;
  

  if FindMatchingTranslation(JEr.SerNr,WTr,JEr.DefLangCode) and JEr.ActiveFlag == 1 then begin
    WebOutStringFormatNL("<div class='header'>" & WTr.Comment & "</div>");
    if nonblank(GetSessionString("msg")) then begin
      WebOutStringFormatNL("<div class='msg'>" & GetSessionString("msg") & "</div>");
      PutSessionString("msg","");
    end;
    WebOutStringFormatNL("<div class='main' >");
    WebOutText(WTr,WTr.HtmlTranslation==1,"");
    WebOutStringFormatNL("</div>"); 
    WebOutStringFormatNL("<div class='part_link'>");
    testf = false;
    if JEr.RegFlag == 1 then begin
      if blank(CurrentCust) then begin
        testf = false;
      end else begin
        testf = true;
      end;
    end else begin
      testf = true;
    end;
/*    
    if testf  then begin
      if EventHasNextStep(JEr,step) then begin
        WebOutStringFormatNL("<a href='/" & FormatSimpleLink(path,true) & "/" & step & "'>" & ToolWebNGTranslateText(26200) & "</a>");
      end else begin
        WebOutStringFormatNL("<a href='/" & FormatSimpleLink("WebJALEventReg.hal?event=" & JEr.SerNr  &"&path=" & path & "/reg",true) & "'>" & ToolWebNGTranslateText(26200) & "</a>");
      end;
    end else begin
      WebOutStringFormatNL("<a href='/login'>" & ToolWebNGTranslateText(26201) & "</a>");
    end;
*/
    WebOutStringFormatNL("</div>");   
  end else begin
    WebOutStringFormatNL(ToolWebNGTranslateText(26202));
  end;
  
return;
end;

function string 150 GetFieldLabel(record JALEventFieldVc JFr)
begin
  row JALEventFieldVc JFrw;
  integer i,rwcnt;
  string 20 lang;
  string 150 res;

  lang = CurrentWebLang;
  res = JFr.Text;
  rwcnt = MatRowCnt(JFr);
  for (i = 0; i < rwcnt;i = i + 1) begin
    MatRowGet(JFr,i,JFrw);
    if JFrw.LangCode == lang then begin
      res = JFrw.Comment;
      i = rwcnt;
    end;
  end;

  GetFieldLabel = res;
return;
end;

procedure ShowSelectBox(integer rw,record JALEventFieldVc JFr,row JALEventVc JErw,string value)
begin
  record JALEventSelectBoxVc JSr;
  row JALEventSelectBoxVc JSrw;
  integer i,rwcnt;
  Longint pos;
  string 255 field,res;
  string 20 lang;

  lang = CurrentWebLang;
  
  JSr.SerNr = JFr.SelectBox;
  if readfirstmain(JSr,1,true) then begin
    field = JSr.Text;
    rwcnt = MatRowCnt(JSr);
    for (i = 0; i < rwcnt;i = i + 1) begin
      MatRowGet(JSr,i,JSrw);
      if JSrw.LangCode == lang then begin
        field = JSrw.Comment;
        i = rwcnt;
      end;
    end;
  end;

  WebOutStringFormatNL("<div class='event_reg_line'>");
  WebOutStringFormatNL("<div class='event_reg_label'>");
  WebOutStringFormatNL(GetFieldLabel(JFr));
  if JErw.Req == 0 then begin
    WebOutStringFormatNL("*");
  end;
  WebOutStringFormatNL("</div>");
  WebOutStringFormatNL("<div class='event_reg_field'>");
  //WebOutStringFormatNL("<input type='text' class='event_reg' value='" & value & "' name='event_reg_field_" & rw & "' >");
  WebOutStringFormatNL("<select class='event_reg' name='event_reg_field_" & rw & "' >");
  WebOutStringFormatNL("<option value=''>" & ToolWebNGTranslateText(26203) & "</option>");
  pos = 0;
  while (GetNextSubstring(field,pos,",",res)) begin
    if value == res then begin
      WebOutStringFormatNL("<option selected value='" & res & "'>" & res & "</option>");
    end else begin
      WebOutStringFormatNL("<option value='" & res & "'>" & res & "</option>");
    end;
  end;  
  
  WebOutStringFormatNL("</select>");
  WebOutStringFormatNL("</div>");
  WebOutStringFormatNL("</div>");



return;
end;


procedure ShowSimpleField(integer rw,record JALEventFieldVc JFr,row JALEventVc JErw,string value)
begin


  WebOutStringFormatNL("<div class='event_reg_line'>");
  WebOutStringFormatNL("<div class='event_reg_label'>");
  WebOutString(GetFieldLabel(JFr));
  if JErw.Req == 0 then begin
    WebOutStringFormatNL("*");
  end;
  WebOutStringFormatNL("</div>");
  WebOutStringFormatNL("<div class='event_reg_field'>");
  WebOutStringFormatNL("<input type='text' class='event_reg' value='" & value & "' name='event_reg_field_" & rw & "' >");
  WebOutStringFormatNL("</div>");
  WebOutStringFormatNL("</div>");


return;
end;

procedure ShowCheckbox(integer rw,record JALEventFieldVc JFr,row JALEventVc JErw,string value)
begin
  string 255 chd,tstr;

  if (value=="on") then begin
    chd = "CHECKED";
  end;

  tstr = GetFieldLabel(JFr);
  WebOutStringFormatNL("<div class='event_reg_line'>");
  WebOutStringFormatNL("<div class='event_reg_field'>");
  WebOutStringFormatNL("<input type='checkbox' class='event_reg' " & chd & " name='event_reg_field_" & rw & "' >" & tstr);
  WebOutStringFormatNL("</div>");
/*
  WebOutStringFormatNL("<div class='event_reg_label'>");
  if JErw.Req == 0 then begin
    WebOutStringFormatNL("*");
  end;
  WebOutStringFormatNL("</div>");
*/
  WebOutStringFormatNL("</div>");


return;
end;

procedure GetSMFEmpList(string smfcode,var array string emplist)
begin
  Integer i;
  record SMFVc SMFr;
  record RLinkVc RLr;
  record CUVc CUr;

  SMFr.SMFCode = smfcode;
  if (ReadFirstMain(SMFr,1,true)) then begin
    i = 1;
    while (ReadRecordLink(SMFr,i,CUr,RLr)) begin
      emplist[emplist.length] = CUr.Name;
      i = i + 1;
    end;
  end;

  return;
end;

procedure ShowParticipants(integer rw,record JALEventFieldVc JFr,row JALEventVc JErw,string value)
begin
  Integer i;
  array string 255 emplist;
  record SMFVc SMFr;
  record TeacherVc TCr;
  record MentorVc MTr;
  Integer type;
  record CUVc CUr;
  
  CUr.Code = CurrentCust;
  type =  GetJAlCustType(CUr,SMFr,TCr,MTr);
  if (type==0) then begin
    WebOutStringFormatNL("<div class='event_reg_line'>");
    WebOutStringFormatNL("<div class='event_reg_label'>");
    WebOutString(GetFieldLabel(JFr));
    if JErw.Req == 0 then begin
      WebOutStringFormatNL("*");
    end;
    WebOutStringFormatNL("</div>");
    GetSMFEmplist(SMFr.SMFCode,emplist);
    for (i=0;i<emplist.length;i=i+1) begin
//      if (WebGetArg("emp_" & i)=="on") then begin
        WebOutStringFormatNL("<div class='event_reg_field'>");
        WebOutStringFormatNL("<input type='checkbox' class='event_reg' name='emp_" & i & "' >" & emplist[i]);
        WebOutStringFormatNL("</div>");
//      end;
    end;
    WebOutStringFormatNL("</div>");
  end;

return;
end;


procedure ShowRadioButton(integer rw,record JALEventFieldVc JFr,row JALEventVc JErw,string value)
begin
  string 255 field,opt;
  record JALEventSelectBoxVc JSr;
  row JALEventSelectBoxVc JSrw;
  Integer i,rwcnt;
  Longint pos;
  string 20 lang;

  lang = CurrentWebLang;

  JSr.SerNr = JFr.SelectBox;
  if readfirstmain(JSr,1,true) then begin
    field = JSr.Text;
    rwcnt = MatRowCnt(JSr);
    for (i = 0; i < rwcnt;i = i + 1) begin
      MatRowGet(JSr,i,JSrw);
      if JSrw.LangCode == lang then begin
        field = JSrw.Comment;
        i = rwcnt;
      end;
    end;
  end;


  WebOutStringFormatNL("<div class='event_reg_line'>");
  WebOutStringFormatNL("<div class='event_reg_label'>");
  WebOutString(GetFieldLabel(JFr));
  if JErw.Req == 0 then begin
    WebOutStringFormatNL("*");
  end;
  WebOutStringFormatNL("</div>");
  i = 0;
  while (GetNextSubstring(field,pos,",",opt)) begin
    if value == opt then begin
      WebOutStringFormatNL("<div class='event_reg_field'><input type='radio' selected value='" & opt & "' name='event_reg_field_" & rw & "'>" & opt & "</div>");
    end else begin
      WebOutStringFormatNL("<div class='event_reg_field'><input type='radio' value='" & opt & "' name='event_reg_field_" & rw & "'>" & opt & "</div>");
    end;
    i = i + 1;
  end;  
  WebOutStringFormatNL("</div>");


return;
end;


function string 255 getEntryValue(record JALEventEntryVc JEEr,longint field)
begin
  row JALEventEntryVc JEErw;
  integer i,rwcnt;
  string 255 res;

  res = "";

  rwcnt = MatRowCnt(JEEr);
  for (i = 0; i < rwcnt;i = i + 1) begin
    MatRowGet(JEEr,i,JEErw);
    if JEErw.Field == field then begin
      res = JEErw.Value;
      i = rwcnt;
    end;
  end;

  getEntryValue = res;
return;
end;

procedure ShowUploadForm(integer rw,record JALEventFieldVc JFr,row JALEventVc JErw)
begin

  WebOutStringFormatNL("<div class='event_reg_line'>");
  WebOutStringFormatNL("<div class='event_reg_label'>");
  WebOutString(GetFieldLabel(JFr));
  if JErw.Req == 0 then begin
    WebOutStringFormatNL("*");
  end;
  WebOutStringFormatNL("</div>");
  WebOutStringFormatNL("<div class='event_reg_field file_upload_wrap'>");
  WebOutString("<input type='file' name='event_reg_field_" & rw & "' id='upload_f" & rw & "' multiple>");
  //WebOutStringFormatNL("<iframe src='/WebJALShowUploadForm.hal?path=/WebJALShowUploadForm.hal'></iframe>");
  WebOutStringFormatNL("</div>");
  WebOutStringFormatNL("</div>");
  //WebOutString("<script>var upl = new FileUpload($('.file_upload_wrap'),$('#upload_f" & rw & "').get(0),'jal',id,func);</script>")

return;
end;

procedure ShowRegistrationFields(record JALEventVc JEr,var boolean uplf,boolean foundf,record JALEventEntryVc JEEr) 
begin
  boolean editf;
  row JALEventVc JErw;
  integer i,rwcnt;
  record JALEventFieldVc JFr;
  string 255 value;

    rwcnt = MatRowCnt(JEr);
    if GetSessionString("editf")== "true" then begin
      editf = true;
      PutSessionString("editf","");
    end else begin
      editf = false;
    end;

    for (i = 0; i < rwcnt;i = i + 1) begin
      MatRowGet(JEr,i,JErw);
      if (JErw.Show == 0) or (JErw.Show == 1 and blank(CurrentCust)) or (JErw.Show == 2 and nonblank(CurrentCust)) then begin
        JFr.SerNr = JErw.Field;
        if readfirstmain(JFr,1,true) then begin
          value = "";
          if foundf then begin
            value = getEntryValue(JEEr,JFr.SerNr);
          end;
          if editf then begin
            value = getSessionString("event_reg_field_" & i);
          end;

          switch JFr.Type begin
            case 0: ShowSimpleField(i,JFr,JErw,value);
            case 1: ShowSelectBox(i,JFr,JErw,value);
            case 2: ShowCheckbox(i,JFr,JErw,value);
            case 3: ShowRadioButton(i,JFr,JErw,value);
            case 4: ShowParticipants(i,JFr,JErw,value);
            case 5: ShowUploadForm(i,JFr,JErw);
          end;
        end;
      end;
    end;


return;
end;

procedure ShowEventSubPage(record JALEventVc JEr,string node,string path)
begin
  boolean uplf;
  record CUVc CUr;
  record SMFVc SMFr;
  record TeacherVc TCr;
  record MentorVc MTr;
  record JALEventEntryVc JEEr;
  integer type;
  boolean foundf;
  record WebNGTranslateVc WTr;

  uplf = false;
  
  if FindMatchingTranslation(JEr.SerNr,WTr,JEr.DefLangCode) and JEr.ActiveFlag == 1 and JEr.ClosedFlag == 0  then begin
  //  WebOutStringFormatNL("<div class='header'>" & WTr.Comment & "</div>");
    
    ShowEventContent(JEr);

    WebOutStringFormatNL("<form id='event_reg' method='POST' action='/WebJALEventReg.hal'>");
    WebOutStringFormatNL("<input type='hidden' name='path' value='" & WebGetArg("path") & "'>");
    WebOutStringFormatNL("<input type='hidden' name='event' value='" & JEr.SerNr & "'>");
    
    if GetSessionString("error") == "true" then begin
      WebOutStringFormatNL("<div class='event_err'>");
      PutSessionString("error","");
      if GetSessionString("err_email") == "true" then begin
        WebOutStringFormatNL(ToolWebNGTranslateText(26204));
        PutSessionString("err_email","");
      end else begin
        WebOutStringFormatNL(ToolWebNGTranslateText(26205));
      end;
      WebOutStringFormatNL("</div>");
    end;


    foundf = FindFilledEntry(CUr,JEEr,type,JEr.SerNr);
    
    
    ShowRegistrationFields(JEr,uplf,foundf,JEEr);
  
    //WebOutStringFormatNL("<div class='submit_line'><input type='button' onclick='location.href=""" & FormatSimpleLink(removelastnode("/" & path),true) & """' class='spbutton first' value='" & ToolWebNGTranslateText(26206) & "'><input type='submit' class='spbutton' value='" & ToolWebNGTranslateText(26207) & "'></div>");
    WebOutStringFormatNL("<div class='submit_line'><input type='submit' class='spbutton' value='" & ToolWebNGTranslateText(26207) & "'></div>");

    WebOutStringFormatNL("</form>");
  end;


return;
end;

procedure ShowEventList(string path)
begin
  record JALEventVc JEr;
  boolean TrHs;
  record WebNGTranslateVc WTr;

  TrHs = true;
  ResetLoop(JEr);
  JEr.ActiveFlag = 1;
  JEr.StartDate = addYear(CurrentDate,-3);
  WebOutStringFormatNL("<ul class='list' >");
  while loopkey("Active",JEr,2,Trhs) begin
    if JEr.ActiveFlag <> 1 then begin
      TrHs = false;
    end else begin
      if FindMatchingTranslation(JEr.SerNr,WTr,JEr.DefLangCode) and JEr.ClosedFlag == 0 then begin
        WebOutStringFormatNL("<li>");  
        WebOutStringFormatNL("<a href='" & FormatSimpleLink(path,true) & "/" & JEr.SerNr & "'><div class='event_list_head'>" & WTr.Comment & "</div><div class='event_list_date'>" & JEr.StartDate & "</div></a>");
        WebOutStringFormatNL("</li>");
      end;
    end;
  end;
  WebOutStringFormatNL("</ul>");
return;
end;

global
procedure EventAppHandler(record WebNGStructVc WSr,string path,string rpath)
begin
  record WebNGPageVc WPr;
  string 30 mpath,node;
  record JALEventVc JEr;
  
  WPr.Code = WSr.WebPage;
  if (nonblank(WPr.Code)) then begin
    if (ReadFirstMain(WPr,1,true)) then begin end;
  end;
  ShowWebAppPageStart(WPr,"");

  mpath = path;
  node = removenextnode(mpath);

  WebOutStringFormatNL("<div class='event_page'>");

  if (IsNumeric(node) and nonblank(node)) then begin
    JEr.SerNr = StringToLongInt(node);
    if readfirstmain(JEr,1,true) then begin
      node = removenextnode(mpath);
      if (JEr.RegFlag == 1 and nonblank(CurrentCust)) or (JEr.RegFlag == 0) then begin
        ShowEventSubPage(JEr,node,rpath);
      end;
    end;
  end else begin
    //Show error message
  end;

  WebOutStringFormatNL("</div>"); 

  ShowWebAppPageEnd(WPr);

return;
end;

procedure ClearEntryRows(var record JALEventEntryVc JEEr)
begin
  integer i,rwcnt;

  rwcnt = MatRowCnt(JEEr);
  for (i = rwcnt-1;i >= 0; i = i - 1) begin
    MatRowDelete(JEEr,i);
  end;

return;
end;

procedure AddEntryRow(var record JALEventEntryVc JEEr,string field,string comment,string value)
begin
  row JALEventEntryVc JEErw;
  
  ClearRow(JEEr,JEErw,1);
  JEErw.Field = field;
  JEErw.Comment = comment;
  JEErw.Value = value;
  MatRowPut(JEEr,MatRowCnt(JEEr),JEErw);

  return;
end;

updating procedure FillEntryRows(var record JALEventEntryVc JEEr,record JALEventVc JEr,var Integer err,var boolean uplf,var boolean reqf,var string errfield,var string errfieldlabel,var vector string vVals)
begin
  row JALEventEntryVc JEErw;
  row JALEventVc JErw;
  integer i,rwcnt,j;
  record JALEventFieldVc JFr;
  record CUVc CUr;
  string 255 fname,field,tstr;
  array string 255 emplist;
  record SMFVc SMFr;
  record TeacherVc TCr;
  record MentorVc MTr;
  Integer type,addemps;
  Boolean blankf,partf;
  record NotePadVc Noter;
  
  err = 0;
  rwcnt = MatRowCnt(JEr);
  for (i = 0; i < rwcnt;i = i + 1) begin
    MatRowGet(JEr,i,JErw);
    blankf = false;
    if (JErw.Show == 0) or (JErw.Show == 1 and JEEr.CustType == 3) or (JErw.Show == 2 and JEEr.CustType <> 3) then begin  
      JFr.SerNr = JErw.Field;
      if (ReadFirstMain(JFr,1,true)) then begin
        switch (JFr.Type) begin
          case 0:
            if (nonblank(WebGetArg("event_reg_field_" & i))) then begin
              SetTextField(Noter,"");
              tstr = "";
              j = 0;
              WebGetText("event_reg_field_" & i,Noter);
              while (j<SizeTextCnt(Noter)) begin
                tstr = tstr & StringFromText(Noter,j,255);
                j=j+255;
              end;
              AddEntryRow(JEEr,JErw.Field,JErw.Comment,tstr);
              vVals[i] = tstr;
            end else begin
              blankf = true;
              field = "event_reg_field_" & i;
            end;
          case 1: goto LAddSimpleRow;
          case 3:
LAddSimpleRow:;
            if (nonblank(WebGetArg("event_reg_field_" & i))) then begin
              AddEntryRow(JEEr,JErw.Field,JErw.Comment,WebGetArg("event_reg_field_" & i));
            end else begin
              blankf = true;
              field = "event_reg_field_" & i;
            end;
          case 2://checkbox
            if (WebGetArg("event_reg_field_" & i)=="on") then begin
              AddEntryRow(JEEr,JErw.Field,JErw.Comment,USetStr(20175));
            end else begin
              AddEntryRow(JEEr,JErw.Field,JErw.Comment,USetStr(20176));
            end;

          case 4://participants
            addemps = 0;
            CUr.Code = CurrentCust;
            type = GetJAlCustType(CUr,SMFr,TCr,MTr);
            if (type==0) then begin
              partf = false;
              GetSMFEmplist(SMFr.SMFCode,emplist);
              for (j=0;j<emplist.length;j=j+1) begin
                if (WebGetArg("emp_" & j)=="on") then begin
                  addemps = addemps + 1;
                  AddEntryRow(JEEr,JErw.Field,JErw.Comment,emplist[j]);
                  partf = true;
                end;
              end;
              if (!partf) then begin
                blankf = true;
                field = "emp_0";
              end else begin
                if (addemps<StringToInt(JFr.SelectBox)) then begin
                  err = 3;
                  errfield = "emp_0";
                  errfieldlabel = JFr.SelectBox;
                  i = rwcnt;
                end;
              end;
            end;
          case 5://upload
            if (blank(WebGetArg("event_reg_field_" & i))) then begin
              blankf = true;
              field = "event_reg_field_" & i;
            end;
        end;
        if (JErw.Req==0) then begin
          if (blankf) then begin
            err = 2;
            errfield = field;
            errfieldlabel = GetFieldLabel(JFr);
            i = rwcnt;
          end;
        end;
      end;
    end;
  end;

return;
end;

global webpublic
updating procedure WebJALEventValidate()
begin
  record JALEventVc JEr;
  record JALEventEntryVc JEEr;
  string 255 errfield,errfieldlabel;
  Boolean uplf,reqf;
  Integer err;
  vector string 255 vVals;

  JEr.SerNr = StringToLongInt(WebGetArg("event"));
  err = 1;
  if readfirstmain(JEr,1,true) then begin
    err = 0;
    FillEntryRows(JEEr,JEr,err,uplf,reqf,errfield,errfieldlabel,vVals);
  end;

  WebOutString("<res err='" & err & "' err_msg='" & StrReplace(ToolWebNGTranslateText2(88000+err),"{lauks}",errfieldlabel) & "' errfield='" & errfield & "'></res>");

  return;
end;

global webpublic
updating procedure WebJALEventReg()
begin
  record CUVc CUr;
  record SMFVc SMFr;
  record TeacherVc TCr;
  record MentorVc MTr;
  integer type,err;
  boolean testf,foundf,nextf;
  record JALEventEntryVc oldJEER,JEEr;
  record JALEventVc JEr;
  string 255 path,fname,errfield,id,errfieldlabel;
  boolean uplf,reqf;
  vector string 255 vVals;
  array string 255 tagarr;
  record NotePadVc Noter;
  Integer i;

  err = 0;
  nextf = false;
  
  JEr.SerNr = StringToLongInt(WebGetArg("event"));
  if readfirstmain(JEr,1,true) then begin
    testf = true;
    if JEr.RegFlag == 1 and blank(CurrentCust) then begin
      testf = false;
    end;
    if JEr.ActiveFlag == 0 then begin
      testf = false;
    end;

    if testf then begin
      foundf = FindFilledEntry(CUr,JEEr,type,JEr.SerNr);

      if foundf then begin
        recordCopy(oldJEEr,JEEr);
        ClearEntryRows(JEEr);
      end else begin
        RecordNew(JEEr);
        JEEr.SerNr = NextSerNr("JALEventEntryVc",CurrentDate,-1,false,"");
        JEEr.TransDate = CurrentDate;
        if nonblank(CurrentCust) then begin
          JEEr.CustType = type;
          JEEr.CustCode = CUr.Code;
          type =  GetJAlCustType(CUr,SMFr,TCr,MTr);
          switch type begin
            case 0:JEEr.AddCode = SMFr.SMFCode;
                   JEEr.SMFName = SMFr.SMFName;
            case 1:JEEr.AddCode = TCr.TeacherCode;
            case 2:JEEr.AddCode = MTr.MentorCode;
          end;
        end else begin
          JEEr.CustType = 3;
        end;
      end;

      //fill registration fields
      uplf = false;
      reqf = true;
      FillEntryRows(JEEr,JEr,err,uplf,reqf,errfield,errfieldlabel,vVals);

      if err == 0 then begin
        PutSessionString("msg",ToolWebNGTranslateText(26208));
        if foundf then begin
          if recordUpdate(oldJEEr,JEEr,true)==0 then begin
            nextf = true;
          end;
        end else begin
          JEEr.EventNr = JEr.SerNr;
          if recordStore(JEEr,true) then begin
            nextf = true;
            id = JEEr.SerNr;
            GetVectorTags(vVals,tagarr);
            for (i=0;i<tagarr.length;i=i+1) begin
              RecordNew(Noter);
              RecordClear(Noter);
              SetTextField(Noter,vVals[tagarr[i]]);
              Noter.SerNr = NextSerNr("NotepadVc",CurrentDate,-1,false,"");
              Noter.Classification = tagarr[i];
              if (RecordStore(Noter,false)) then begin
                CreateRecordLink(JEEr,CurrentCompany,Noter,CurrentCompany);  
              end;
            end;
          end;
        end;
      end else begin
        PutSessionString("error","true");
      end;
    end;
  end;

  WebOutString("<res id='" & id & "' err='" & err & "' err='" & StrReplace(ToolWebNGTranslateText2(88000),"{lauks}",errfieldlabel) & "' errfield='" & errfield & "'></res>");


return;
end;

global webpublic
procedure FutureEvents()
begin
	record WebNGTranslateVc NGr;
	record JALEventVc JEr;


	if(WebLoginStatus==3)then begin
			JEr.SerNr = "";
			while(LoopMain(JEr,1,true)) begin
				if(JEr.StartDate > AddDay(CurrentDate,-365)) then begin
					WebOutStringFormatNL("\"let eventInfo\" = " & "{");
					WebOutStringFormatNL("\"dataStart\":\"" & JEr.StartDate & "\",");
					WebOutStringFormatNL("\"dataEnd\":\"" & JEr.EndDate & "\",");
					WebOutStringFormatNL("\"nameEvent\":\"" & JEr.Comment & "\",");
					NGr.Code = JEr.SerNr;
					NGr.LangCode = "LV";
					NGr.FileName = 5;
					ReadFirstMain(NGr,3,true);
					WebOutStringFormatNL("\"nameEvent\":\"");
					WebOutText(NGr,true,""); WebOutStringFormatNL("\"}");
					WebOutStringFormatNL("};");
				end;
			end;	
	end else begin

		weboutstring("{\"result\":\"Error Login\"}");
	end;
return;
end;

global webpublic
procedure WebGetNolicune()
begin
	record  MailVc Mailr;
	record ConfVc Confr;
	string 255 userkey,docNr,name,link;
	integer cnt;
	record RLinkVc RLr;
	integer notenr;
	record Attach2Vc JFr;

	if(WebLoginStatus==3)then begin
		userkey="UserTime:" & 1074;
		WebOutStringFormatNL("[{");
//		WebOutStringFormatNL("{");
		WebOutStringFormatNL("\"nameConf\":"&"\"Citi\",");
		WebOutStringFormatNL("\"docs\":[");
		cnt = 0;
		While(LoopKey(userkey,Mailr,1,true)) begin
			if(cnt>0) then begin WebOutStringFormatNL(","); end;
			cnt = cnt + 1;
			name = CreateJson(Mailr.Header);
			if(ReadRecordLink(Mailr,0,JFr,RLr)) then begin	if(JFr.SerNr==-1) then begin docNr = ""; end else begin docNr=JFr.SerNr; end; 
					WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"serNr\":\"" & docNr & "\"}");
				end else begin
					if(LineTextCnt(Mailr)==0) then begin
						WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"link\":\"\"}");
					end else begin	
					link = LineTextGet(Mailr,0);
						WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"link\":\"" & link &"\"}");
					end;
				end;
		end;	
		docNr = "";
		ResetLoop(Mailr);
		WebOutStringFormatNL("]},");
		WebOutStringFormatNL("{");
		WebOutStringFormatNL("\"nameConf\":"&"\"finansu pratiba\",");
		WebOutStringFormatNL("\"docs\":[");
		userkey="UserTime:" & 1073;
		cnt = 0;
		While(LoopKey(userkey,Mailr,1,true)) begin
			if(cnt>0) then begin WebOutStringFormatNL(","); end;
			cnt = cnt + 1;
			name = CreateJson(Mailr.Header);
			if(ReadRecordLink(Mailr,0,JFr,RLr)) then begin	if(JFr.SerNr==-1) then begin docNr = ""; end else begin docNr= JFr.SerNr; end; 
					WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"serNr\":\"" & docNr & "\"}");
				end else begin
					if(LineTextCnt(Mailr)==0) then begin
						WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"link\":\"\"}");
					end else begin	
					link = LineTextGet(Mailr,0);
						WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"link\":\"" & link &"\"}");
					end;
				end;
		end;	
		ResetLoop(Mailr);
		docNr = "";
		WebOutStringFormatNL("]},");
		WebOutStringFormatNL("{");
		WebOutStringFormatNL("\"nameConf\":"&"\"Karjera\",");
		WebOutStringFormatNL("\"docs\":[");
		userkey="UserTime:" & 1072;
		cnt = 0;
		While(LoopKey(userkey,Mailr,1,true)) begin
			if(cnt>0) then begin WebOutStringFormatNL(","); end;
			cnt = cnt + 1;
			name = CreateJson(Mailr.Header);
			if(ReadRecordLink(Mailr,0,JFr,RLr)) then begin	if(JFr.SerNr==-1) then begin docNr = ""; end else begin docNr=JFr.SerNr; end; 
					WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"serNr\":\"" & docNr & "\"}");
				end else begin
					if(LineTextCnt(Mailr)==0) then begin
						WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"link\":\"\"}");
					end else begin	
					link = LineTextGet(Mailr,0);
						WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"link\":\"" & link &"\"}");
					end;
				end;
		end;	
		ResetLoop(Mailr);
		docNr="";
		WebOutStringFormatNL("]},");
		WebOutStringFormatNL("{");
		WebOutStringFormatNL("\"nameConf\":"&"\"Iznemejbardiba\",");
		WebOutStringFormatNL("\"docs\":[");
		userkey="UserTime:" & 1071;
		cnt = 0;
		While(LoopKey(userkey,Mailr,1,true)) begin
			if(cnt>0) then begin WebOutStringFormatNL(","); end;
			cnt = cnt + 1;
			name = CreateJson(Mailr.Header);
			if(ReadRecordLink(Mailr,0,JFr,RLr)) then begin	if(JFr.SerNr==-1) then begin docNr = ""; end else begin docNr= JFr.SerNr; end; 
					WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"serNr\":\"" & docNr & "\"}");
				end else begin
					if(LineTextCnt(Mailr)==0) then begin
						WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"link\":\"\"}");
					end else begin	
					link = LineTextGet(Mailr,0);
						WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"link\":\"" & link &"\"}");
					end;
				end;
		end;	
		ResetLoop(Mailr);
		WebOutStringFormatNL("]");
		WebOutStringFormatNL("}]");
	end;
return;
end;

function string 255 GetUserTag()
begin
  string 255 res;
  record SMFVc SMFr;
  record TeacherVc TCr;
  record MentorVc MTr;
  Integer type;
  record CUVc CUr;

  CUr.Code = CurrentCust;
  type = GetJAlCustType(CUr,SMFr,TCr,MTr);
  switch (type) begin
    case 0: res = "SKOLENI";
    case 1: res = "SKOLOTAJI";
  end;

  GetUserTag = res;
  return;
end;

global procedure GetConfs(longint SerNr, var vector boolean used)
begin
record  MailVc Mailr;
	record RLinkVc RLr;
	integer notenr;
	record Attach2Vc JFr;
	record ConfVc Confr,Conf2r;
	string 255 userkey,docNr,name,tstr,tag;
	integer cnt,cnt1,cnt2;
	boolean testf;
	
  Conf2r.MotherConf = SerNr;
  if(ReadFirstKey("MotherConf",Conf2r,1,true)) then begin
    used[Conf2r.SerNr] = true;
    cnt2 = 0;
    testf = true;
    tag = GetUserTag;
    While(LoopKey("MotherConf",Conf2r,1,testf)) begin
      if(Conf2r.MotherConf != SerNr) then begin 
        testf = false; 
      end else begin
        if(cnt2>0) then begin WebOutStringFormatNL(","); end;
        tstr = Conf2r.Comment;
        if (blank(tstr)) then begin
          tstr = Conf2r.AddrName;
        end;
        
        cnt2 = cnt2 + 1;
        WebOutStringFormatNL("{");
        WebOutStringFormatNL("\"nameConf\":" & "\"" & tstr & "\",");
        userkey="UserTime:" & Conf2r.SerNr;
        WebOutStringFormatNL("\"docs\":[");
        Confr.MotherConf = Conf2r.SerNr;
        if(ReadFirstKey("MotherConf",Confr,1,true)) then begin
          GetConfs(Conf2r.SerNr,used);
          goto Endofob;
        end;
        cnt = 0;
        While(LoopKey(userkey & "|" & tag,Mailr,1,true)) begin
          if(cnt>0) then begin WebOutStringFormatNL(","); end;
          cnt = cnt + 1;
          name = CreateJson(Mailr.Header);
          if(ReadRecordLink(Mailr,0,JFr,RLr)) then begin	if(JFr.SerNr==-1) then begin docNr = ""; end else begin docNr= JFr.SerNr;  end;
            WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"serNr\":\"" & docNr & "\"}");
          end else begin
            if(LineTextCnt(Mailr)==0) then begin
              WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"link\":\"");WebOutStringFormatNL("\"}");
            end else begin	
              WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"link\":\"");WebOutText( Mailr,true,"");WebOutStringFormatNL("\"}");
            end;	
          end;	
        end;
        WebOutStringFormatNL("]");
        WebOutStringFormatNL("}");
        ResetLoop(Mailr);
        Endofob:;
      end;
    end;
    WebOutStringFormatNL("]");
  end else begin	
    userkey="UserTime:" & Conf2r.SerNr;
    cnt = 0;
    While(LoopKey(userkey,Mailr,1,true)) begin
      if(cnt>0) then begin WebOutStringFormatNL(","); end;
      cnt = cnt + 1;

      name = CreateJson(Mailr.Header);
      if(ReadRecordLink(Mailr,0,JFr,RLr)) then begin	if(JFr.SerNr==-1) then begin docNr = ""; end else begin docNr= JFr.SerNr; end;
        WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"serNr\":\"" & docNr & "\"}");
      end else begin
        if(LineTextCnt(Mailr)==0) then begin
          WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"link\":\"");WebOutStringFormatNL("\"}");
        end else begin	
          WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"link\":\"");WebOutText( Mailr,true,"");WebOutStringFormatNL("\"}");
        end;	
      end;	
    end;	
    WebOutStringFormatNL("]");
    ResetLoop(Mailr);
  end;	
  WebOutStringFormatNL("}");	

  return;
end;	
global webpublic
procedure WebGetAllConf()
begin
	record  MailVc Mailr;
	record RLinkVc RLr;
	integer notenr;
	record Attach2Vc JFr;
	record ConfVc Confr,Conf2r;
	string 255 userkey,docNr,name,tstr;
	integer cnt,cnt1,cnt2;
	vector boolean used;
  record SMFVc SMFr;
  record TeacherVc TCr;
  record MentorVc MTr;
  Integer type;
  record CUVc CUr;

	
	Confr.SerNr = 6;
  CUr.Code = CurrentCust;
  type = GetJAlCustType(CUr,SMFr,TCr,MTr);
  WebOutStringFormatNL("[");
	if (ReadFirstMain(Confr,1,true)) then begin
    used[Confr.SerNr] = true;
    WebOutStringFormatNL("{");
    WebOutString("\"custtype\":" & type & ",");
    tstr = Confr.Comment;
    if (blank(tstr)) then begin
      tstr = Confr.AddrName;
    end;
    WebOutStringFormatNL("\"nameConf\":" & "\"" & tstr & "\",");
    WebOutStringFormatNL("\"docs\":[");
    GetConfs(Confr.SerNr,used);
  end;
  
	WebOutStringFormatNL("]");
  return;
end;	


global webpublic
procedure WebGetMaterials()
begin
	record  MailVc Mailr;
	record ConfVc Confr;
	string 255 userkey,docNr,name;
	integer cnt;
	record RLinkVc RLr;
	integer notenr;
	record Attach2Vc JFr;

	if(WebLoginStatus==3)then begin
		userkey="UserTime:" & 1075;
		WebOutStringFormatNL("[{");
//		WebOutStringFormatNL("{");
		WebOutStringFormatNL("\"nameConf\":" & "\"1-9 Klassu materiali\",");
		WebOutStringFormatNL("\"docs\":[");
		cnt = 0;
		While(LoopKey(userkey,Mailr,1,true)) begin
			if(cnt>0) then begin WebOutStringFormatNL(","); end;
			cnt = cnt + 1;
			if(ReadRecordLink(Mailr,1,JFr,RLr)) then begin	if(JFr.SerNr==-1) then begin docNr = ""; end else begin docNr=JFr.SerNr; end; 		end;
				name = CreateJson(Mailr.Header);
				if(Mailr.HasFileAtt!=0) then begin
					WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"serNr:\"" & docNr & "\"}");
				end else begin
				if(LineTextCnt(Mailr)==0) then begin
						WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"link\":\"");WebOutStringFormatNL("\"}");
					end else begin	
					WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"link\":\"");WebOutText( Mailr,true,"");WebOutStringFormatNL("\"}");
				end;	
				end;

		end;	
		ResetLoop(Mailr);
		WebOutStringFormatNL("]},");
		WebOutStringFormatNL("{");
		WebOutStringFormatNL("\"nameConf\":" & "\"vebinari un citi materiali\",");
		WebOutStringFormatNL("\"docs\":[");
		userkey="UserTime:" & 1076;
		cnt = 0;
		While(LoopKey(userkey,Mailr,1,true)) begin
		if(cnt>0) then begin WebOutStringFormatNL(","); end;
			cnt = cnt + 1;
			if(ReadRecordLink(Mailr,1,JFr,RLr)) then begin	if(JFr.SerNr==-1) then begin docNr = ""; end else begin docNr=JFr.SerNr; end;  		end;
				name = CreateJson(Mailr.Header);
				if(Mailr.HasFileAtt!=0) then begin
					WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"serNr:\"" & docNr & "\"}");
				end else begin
					if(LineTextCnt(Mailr)==0) then begin
						WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"link\":\"");WebOutStringFormatNL("\"}");
					end else begin	
					WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"link\":\"");WebOutText( Mailr,true,"");WebOutStringFormatNL("\"}");
					end;
				end;

		end;	
		ResetLoop(Mailr);
		WebOutStringFormatNL("]},");
		WebOutStringFormatNL("{");
		WebOutStringFormatNL("\"nameConf\":" & "\"darbibai nepieciesamie dokumenti\",");
		WebOutStringFormatNL("\"docs\":[");
		userkey="UserTime:" & 1077;
		cnt = 0;
		While(LoopKey(userkey,Mailr,1,true)) begin
		if(cnt>0) then begin WebOutStringFormatNL(","); end;
			cnt = cnt + 1;
			if(ReadRecordLink(Mailr,1,JFr,RLr)) then begin	if(JFr.SerNr==-1) then begin docNr = ""; end else begin docNr=JFr.SerNr; end;  		end;
				name = CreateJson(Mailr.Header);
				if(Mailr.HasFileAtt!=0) then begin
					WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"serNr:\"" & docNr & "\"}");
				end else begin
					if(LineTextCnt(Mailr)==0) then begin
						WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"link\":\"");WebOutStringFormatNL("\"}");
					end else begin	
					WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"link\":\"");WebOutText( Mailr,true,"");WebOutStringFormatNL("\"}");
					end;
				end;

		end;	
		ResetLoop(Mailr);
		WebOutStringFormatNL("]");
		WebOutStringFormatNL("}]");
	end;
return;
end;

global webpublic
procedure WebGetConf()
begin
record ConfVc Cr;

while(LoopMain(Cr,1,true)) begin
WebOutStringFormatNL("ser-" & Cr.SerNr & "name-" & Cr.AddrName);
end;
return;
end;


global webpublic
procedure WebGetMaterialsHigh()
begin
	record  MailVc Mailr;
	record ConfVc Confr;
	string 255 userkey,docNr,name;
	integer cnt;
	record RLinkVc RLr;
	integer notenr;
	record Attach2Vc JFr;

	if(WebLoginStatus==3)then begin
		userkey="UserTime:" & 1077;
		WebOutStringFormatNL("[{");
//		WebOutStringFormatNL("{");
		WebOutStringFormatNL("\"nameConf\":" & "\"SMU darb. nepiec. dok.\",");
		WebOutStringFormatNL("\"docs\":[");
		cnt = 0;
		While(LoopKey(userkey,Mailr,1,true)) begin
			if(cnt>0) then begin WebOutStringFormatNL(","); end;
			cnt = cnt + 1;
			if(ReadRecordLink(Mailr,1,JFr,RLr)) then begin	if(JFr.SerNr==-1) then begin docNr = ""; end else begin docNr=JFr.SerNr; end; 		end;
				name = CreateJson(Mailr.Header);
				if(Mailr.HasFileAtt!=0) then begin
					WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"serNr\":\"" & docNr & "\"}");
				end else begin
					if(LineTextCnt(Mailr)==0) then begin
						WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"link\":\"");WebOutStringFormatNL("\"}");
					end else begin	
					WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"link\":\"");WebOutText( Mailr,true,"");WebOutStringFormatNL("\"}");
					end;
				end;
		end;	
		ResetLoop(Mailr);
		WebOutStringFormatNL("]},");
		WebOutStringFormatNL("{");
		WebOutStringFormatNL("\"nameConf\":" & "\"Komerczinibu materials-vidusski\",");
		WebOutStringFormatNL("\"docs\":[");
		userkey="UserTime:" & 1078;
		cnt = 0;
		While(LoopKey(userkey,Mailr,1,true)) begin
		if(cnt>0) then begin WebOutStringFormatNL(","); end;
			cnt = cnt + 1;
			if(ReadRecordLink(Mailr,1,JFr,RLr)) then begin	if(JFr.SerNr==-1) then begin docNr = ""; end else begin docNr=JFr.SerNr; end;  		end;
				name = CreateJson(Mailr.Header);
				if(Mailr.HasFileAtt!=0) then begin
					WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"serNr\":\"" & docNr & "\"}");
				end else begin
					if(LineTextCnt(Mailr)==0) then begin
						WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"link\":\"");WebOutStringFormatNL("\"}");
					end else begin	
					WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"link\":\"");WebOutText( Mailr,true,"");WebOutStringFormatNL("\"}");
					end;
				end;

		end;	
		ResetLoop(Mailr);
		WebOutStringFormatNL("]},");
		WebOutStringFormatNL("{");
		WebOutStringFormatNL("\"nameConf\":" & "\"Prof. skolu komercz. mod\",");
		WebOutStringFormatNL("\"docs\":[");
		userkey="UserTime:" & 1079;
		cnt = 0;
		While(LoopKey(userkey,Mailr,1,true)) begin
		if(cnt>0) then begin WebOutStringFormatNL(","); end;
			cnt = cnt + 1;
			if(ReadRecordLink(Mailr,1,JFr,RLr)) then begin	if(JFr.SerNr==-1) then begin docNr = ""; end else begin docNr=JFr.SerNr; end;  		end;
				name = CreateJson(Mailr.Header);
				if(Mailr.HasFileAtt!=0) then begin
					WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"serNr\":\"" & docNr & "\"}");
				end else begin
					if(LineTextCnt(Mailr)==0) then begin
						WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"link\":\"");WebOutStringFormatNL("\"}");
					end else begin	
					WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"link\":");WebOutText( Mailr,true,"");
					end;
				end;

		end;	
		ResetLoop(Mailr);
			WebOutStringFormatNL("]},");
		WebOutStringFormatNL("{");
		WebOutStringFormatNL("\"nameConf\":" & "\"GREENT mat. un stundu plan\",");
		WebOutStringFormatNL("\"docs\":[");
		userkey="UserTime:" & 1080;
		cnt = 0;
		While(LoopKey(userkey,Mailr,1,true)) begin
		if(cnt>0) then begin WebOutStringFormatNL(","); end;
			cnt = cnt + 1;
			if(ReadRecordLink(Mailr,1,JFr,RLr)) then begin	if(JFr.SerNr==-1) then begin docNr = ""; end else begin docNr=JFr.SerNr; end;  		end;
				name = CreateJson(Mailr.Header);
				if(Mailr.HasFileAtt!=0) then begin
					WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"serNr\":\"" & docNr & "\"}");
				end else begin
					if(LineTextCnt(Mailr)==0) then begin
						WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"link\":\"");WebOutStringFormatNL("\"}");
					end else begin	
					WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"link\":"); WebOutText( Mailr,true,"");
					end;
				end;

		end;	
		ResetLoop(Mailr);
		WebOutStringFormatNL("]},");
		WebOutStringFormatNL("{");
		WebOutStringFormatNL("\"nameConf\":" & "\"Biznesa plana veidosana\",");
		WebOutStringFormatNL("\"docs\":[");
		userkey="UserTime:" & 1081;
		cnt = 0;
		While(LoopKey(userkey,Mailr,1,true)) begin
		if(cnt>0) then begin WebOutStringFormatNL(","); end;
			cnt = cnt + 1;
			if(ReadRecordLink(Mailr,1,JFr,RLr)) then begin	if(JFr.SerNr==-1) then begin docNr = ""; end else begin docNr=JFr.SerNr; end;  		end;
				name = CreateJson(Mailr.Header);
				if(Mailr.HasFileAtt!=0) then begin
					WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"serNr\":\"" & docNr & "\"}");
				end else begin
					if(LineTextCnt(Mailr)==0) then begin
						WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"link\":\"");WebOutStringFormatNL("\"}");
					end else begin	
					WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"link\":\"");WebOutText( Mailr,true,"");WebOutStringFormatNL("\"}");
					end;
				end;

		end;	
		ResetLoop(Mailr);
			WebOutStringFormatNL("]},");
		WebOutStringFormatNL("{");
		WebOutStringFormatNL("\"nameConf\":" & "\"JA TITAN materiali\",");
		WebOutStringFormatNL("\"docs\":[");
		userkey="UserTime:" & 1082;
		cnt = 0;
		While(LoopKey(userkey,Mailr,1,true)) begin
		if(cnt>0) then begin WebOutStringFormatNL(","); end;
			cnt = cnt + 1;
			if(ReadRecordLink(Mailr,1,JFr,RLr)) then begin	if(JFr.SerNr==-1) then begin docNr = ""; end else begin docNr=JFr.SerNr; end;  		end;
				name = CreateJson(Mailr.Header);
				if(Mailr.HasFileAtt!=0) then begin
					WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"serNr\":\"" & docNr & "\"}");
				end else begin
					if(LineTextCnt(Mailr)==0) then begin
						WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"link\":\"");WebOutStringFormatNL("\"}");
					end else begin	
					WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"link\":\"");WebOutText( Mailr,true,"");WebOutStringFormatNL("\"}");
					end;
				end;

		end;	
		ResetLoop(Mailr);
		WebOutStringFormatNL("]},");
		WebOutStringFormatNL("{");
		WebOutStringFormatNL("\"nameConf\":" & "\"Vebinari un citi materiali\",");
		WebOutStringFormatNL("\"docs\":[");
		userkey="UserTime:" & 1076;
		cnt = 0;
		While(LoopKey(userkey,Mailr,1,true)) begin
		if(cnt>0) then begin WebOutStringFormatNL(","); end;
			cnt = cnt + 1;
			if(ReadRecordLink(Mailr,1,JFr,RLr)) then begin	if(JFr.SerNr==-1) then begin docNr = ""; end else begin docNr=JFr.SerNr; end;  		end;
				name = CreateJson(Mailr.Header);
				if(Mailr.HasFileAtt!=0) then begin
					WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"serNr\":\"" & docNr & "\"}");
				end else begin
					if(LineTextCnt(Mailr)==0) then begin
						WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"link\":\"");WebOutStringFormatNL("\"}");
					end else begin	
					WebOutStringFormatNL("{\"nameDoc\":\"" & name &"\",\"link\":\"");WebOutText( Mailr,true,"");WebOutStringFormatNL("\"}");
					end;
				end;

		end;	
		WebOutStringFormatNL("]");
		WebOutStringFormatNL("}]");
	end;
return;
end;

global procedure JsonCreator1(array string objects, array string value, integer count )
begin
integer i,cnt,j;
WebOutStringFormatNL("[");
cnt = 0;
for (i=0;i<count;i=i+1) begin
 if(cnt>0) then begin WebOutStringFormatNL(","); end;
			cnt = cnt + 1;
			WebOutStringFormatNL("{");
			for(j=0;j<objects.length;j=j+1) begin		
				WebOutStringFormatNL("\"" & objects[j] & "\":\"" & value[i*count + j] & "\""); 
				if(j!=objects.length - 1) then begin  WebOutStringFormatNL(","); end;
			end;
			WebOutStringFormatNL("}");
	end;		
WebOutStringFormatNL("]");	
return;
end;

global webpublic procedure WebDownloadDocs()
begin 
record Attach2Vc Attachr;
string 20 serNr;
string 20 ext;
serNr = webGetArg("code");

 Attachr.SerNr = StringToLongint(WebGetArg("code"));
  if ReadFirstMain(Attachr,1,true) then begin
    if (Attachr.SerNr>0) then begin
      ext = right(Attachr.FileName,4);
      SetContentTypeForExtension(ext);
      WebSetContentDisposition("inline; filename=" & Attachr.FileName);
      WebOutAttachment(Attachr.SerNr);
    end;
  end;

return;
end;
global webpublic procedure Webjsontest()
begin
array string 20 object,value;

object[0] = "test";
object[1] = "test1";
value[0] = "te";
value[1] = "tes";
value[2] = "te1";
value[3] = "tes2";
JsonCreator1(object,value,2);

return;
end;

global
updating procedure FinishJALEventUpload(string sess,string filename,string id,string tag)
begin
  record JALEventEntryVc JEEr;

  JEEr.SerNr = StringToLongInt(id);
  if (ReadFirstMain(JEEr,1,true)) then begin
    if (FileExists("tmp/" & tag & "/" & sess)) then begin
      RenameFile("tmp/" & tag & "/" & sess,"tmp/" & tag & "/" & filename);
      RecordLinkFile("tmp/" & tag & "/" & filename,0,JEEr,CurrentCompany);
      Delete_File("tmp/" & tag & "/" & filename);
  end;
  end;

  return;
end;
