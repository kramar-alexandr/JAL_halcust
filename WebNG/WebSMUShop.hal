/*
The basket was made with session because they didn't intend to have a basket at first, just favourites. To keep things simple I copied the favourites functionality because it already did almost everything that is needed for basket.
*/

external function string 255 removenextnode(var string);
external function string 255 FormatSimpleLink(string,boolean);
external procedure ShowWebAppPageStart(record WebNGPageVc,string);
external procedure ShowWebAppPageEnd(record WebNGPageVc);
external procedure SetContentTypeForExtension(string);
external function string 255 ToolWebNGTranslateText2(Longint);
external function integer GetJAlCustType(record CUVc,var record SMFVc,var record TeacherVc,var record MentorVc);
external function string 255 UnFormatJSONString(string);
external function string 255 UnFormatJSONText(string);
external function string 255 FormatJSONString(string);
external function Boolean FindSMURecord(string,var record SMFVc);
external function string 255 StrReplace(string,string,string);
external updating procedure RemoveSMFSession(record SMFSessionVc);
external procedure OutPutJALWebTexts(Integer);
external function string 255 RemoveEndingLineBreaks(string);
external function string 60 RemoveObjectFromObjectList(string,string);
external function string 60 AddObjectToObjectList(string,string);
external procedure ShowWebElement(string);
external procedure FindCustEntry(Longint,Integer,string,var record JALEventEntryVc);
external function LongInt DateDiff(Date,Date);
external procedure ORVc_PastePayDeal(var record ORVc);
external function Boolean ORVc_PasteArtCode(var record ORVc,Integer,var string,var string,Boolean);
external procedure ORDchsum(var record ORVc,Integer);
external procedure ORSumup(var record ORVc);
external procedure ORVc_PastePrice(var record ORVc,Integer,var Boolean);

function Boolean FindItemImage(record SMFItemVc SIr,var string link,var string name,Boolean thumbf)
begin
  Boolean res;
  record Attach2Vc Attachr;
  record RLinkVc RLr;
  Integer i;

  link = "";
  name = "";
  i = 1;
  while (ReadRecordLink(SIr,i,Attachr,RLr) and res==false) begin
    if (thumbf) then begin
      if (left(Attachr.FileName,6)=="thumb_") then begin
        link = "/WebShowSMUShopItemImage.hal?smf=" & SIr.SMFCode & "&id=" & SIr.UUID & "&name=" & Attachr.FileName;
        name = Attachr.FileName;
        res = true;
      end;
    end else begin
      if (left(Attachr.FileName,6)!="thumb_") then begin
        link = "/WebShowSMUShopItemImage.hal?smf=" & SIr.SMFCode & "&id=" & SIr.UUID & "&name=" & Attachr.FileName;
        name = Attachr.FileName;
        res = true;
      end;
    end;
    i = i + 1;
  end;

  FindItemImage = res;
  return;
end;

function string 255 DefaultItemImage()
begin
  string 255 res;

  res = "/images/shop_def_item.png";

  DefaultItemImage = res;
  return;
end;

global
function string 255 GetSMFItemImageLink(uuid itemuuid,Boolean thumbf)
begin
  record SMFItemVc SIr;
  string 255 res,tstr;

  SIr.UUID = itemuuid;
  if (ReadFirstMain(SIr,1,true)) then begin
    if (FindItemImage(SIr,res,tstr,thumbf)==false) then begin
      res = DefaultItemImage;
    end;
  end;

  GetSMFItemImageLink = res;
  return;
end;

function string 255 GetSMFShopUrl(record SMFVc SMFr)
begin
  Integer i,n;
  string 255 res,c,tstr;
  
  tstr = SMFr.WebShopUrl;
  if (blank(tstr)) then begin
    tstr = SMFr.SMFName;
  end;
  for (i=0;i<len(tstr);i=i+1) begin
    c = lowercase(mid(tstr,i,1));
    switch (c) begin
      case "ā": c = "a";
      case "ī": c = "i";
      case "ē": c = "e";
      case "ū": c = "u";
      case "č": c = "c";
      case "ķ": c = "k";
      case "ļ": c = "l";
      case "ņ": c = "n";
      case "š": c = "s";
      case "ģ": c = "g";
      case "ž": c = "z";
      case "č": c = "c";
      case " ": c = "-";
      case "-":
      otherwise
        n = asc(c);
        if ((n>=48 and n<=57) or (n>=97 and n<=122)) then begin
        end else begin
          c = "";
        end;
    end;
    res = res & c;
  end;

  GetSMFShopUrl = res;
  return;
end; 

global webpublic
procedure WebShowSMUShopItemImage()
begin
  record SMFItemVc SIr;
  record Attach2Vc Attachr,tAttachr;
  record RLinkVc RLr;
  string 255 ext,name;
  Boolean foundf,testf;
  Integer i;
  
  name = WebGetArg("name");
  SIr.UUID = StringToUUID(WebGetArg("id"));
  if (ReadFirstMain(SIr,1,true)) then begin
    if (SIr.SMFCode==WebGetArg("smf")) then begin
LWebShowSMUShopItemImage_repeat:;  
      i = 1;
      while (ReadRecordLink(SIr,i,Attachr,RLr) and foundf==false) begin
        if (name==Attachr.FileName) then begin
          ext = right(Attachr.FileName,4);
          SetContentTypeForExtension(ext);
          WebSetContentDisposition("inline; filename=" & Attachr.FileName);
          WebOutAttachment(Attachr.SerNr);
          foundf = true;
        end;
        i = i + 1;
      end;
      if (foundf==false and testf==false) then begin
        testf = true;
        if (left(name,6)=="thumb_") then begin
          name = right(name,len(name)-6);
        end else begin
          name = "thumb_" & name;
        end;
        goto LWebShowSMUShopItemImage_repeat;
      end;
    end;
  end;

  return;
end;

global webpublic
procedure WebShowSMUEmployeeImage()
begin
  record CUVc CUr;
  record SMFVc SMFr;
  record Attach2Vc Attachr,tAttachr;
  record RLinkVc RLr;
  string 255 ext;
  Boolean thumbf,foundf;
  Integer i;
  
  CUr.UUID = StringToUUID(WebGetArg("id"));
  if (ReadFirstKey("UUID",CUr,1,true)) then begin
    if (ReadRecordLink(CUr,1,SMFr,RLr)) begin
      if (SMFr.SMFCode==WebGetArg("smf")) then begin
        if (ReadRecordLink(CUr,1,Attachr,RLr)) begin
          ext = right(Attachr.FileName,4);
          SetContentTypeForExtension(ext);
          WebSetContentDisposition("inline; filename=" & Attachr.FileName);
          WebOutAttachment(Attachr.SerNr);
        end;
      end;
    end;
  end;

  return;
end;

function Boolean ItemIsPopular(Longint prc,record SMFItemVc SIr)
begin
  Boolean res;

  res = false;

  ItemIsPopular = res;
  return;
end;

procedure GetItemTag(record JALClassBlock JCbl,record SMFItemVc SIr,var string tag,var string color)
begin
  
  tag = "";
  color = "";
  if (SIr.NotInStock==1) then begin
    tag = ToolWebNGTranslateText2(89242);
    color = "red";
    goto LGetItemTag;
  end;

  if (ItemIsPopular(JCBl.PopularTagPrc,SIr)) then begin
    //89243
    goto LGetItemTag;
  end;

  if (nonblank(SIr.TransDate) and JCbl.NewTagDays>0) then begin
    if (DateDiff(CurrentDate,SIr.TransDate)<=JCbl.NewTagDays) then begin
      tag = ToolWebNGTranslateText2(89244);
      color = "green";
      goto LGetItemTag;
    end;
  end;
  
LGetItemTag:;
  return;
end;

function Boolean DiscountExpired(record JALClassBlock JCb,record SMFItemVc SIr)
begin
  Boolean res;
  
  if (SIr.NewPrice>0 and DateDiff(CurrentDate,SIr.NewPriceDate)>JCb.NewPriceDays) then begin
    res = true;
  end;

  DiscountExpired = res;
  return;
end;

function val GetSMUItemPrice(record JALClassBlock JCb,record SMFItemVc SIr)
begin
  val res;
  
  res = SIr.Price;
  if (SIr.NewPrice>0 and DiscountExpired(JCb,SIr)==false) then begin
    res = SIr.NewPrice;
  end;

  GetSMUItemPrice = res;
  return;
end;

procedure ShowSingleSMUShopItem(record JALClassBlock JCbl,record SMFItemVc SIr,Boolean likedf,Boolean basketf,string baseurl)
begin
  string 255 link,link2,likedcls,basketcls;
  string 255 itemtag,itemcolor,imgname,itemname;
  val price;
  
  
  GetItemTag(JCbl,SIr,itemtag,itemcolor);
  WebOutString("<div class='smu_shop_single_item'><a href='" & baseurl & "/" & LowerCase(SIr.UUID) & "'>");
  if (nonblank(itemtag)) then begin
    WebOutString("<div class='item_tag " & itemcolor & "'>" & itemtag & "</div>");
  end;
  WebOutString("<div class='smu_shop_item_image'>");
  if (FindItemImage(SIr,link,imgname,true)==false) then begin
    link = DefaultItemImage;
  end;
  if (FindItemImage(SIr,link2,imgname,false)==false) then begin
    link2 = DefaultItemImage;        
  end;
  if (likedf) then begin
    likedcls = " active";
  end;
  if (basketf) then begin
    basketcls = " added_to_basket";
  end;
  WebOutString("<img src='" & link & "' link2='" & link2 & "'>");
  WebOutString("</div>");//smu_shop_item_image
  itemname = left(SIr.Name,47);
  if (itemname!=SIr.Name) then begin
    itemname = itemname & "...";
  end;

  WebOutstring("<div class='smu_shop_item_details'>");
  WebOutString("<div class='smu_shop_single_item_title' >" & itemname & "<div class='item_name_hover'>" & SIr.Name & "</div></div>");
  price = GetSMUItemPrice(JCbl,SIr);
  if (price!=SIr.Price) then begin
    WebOutString("<div class='smu_shop_item_price old'>" & SIr.Price & " EUR</div>");
    WebOutString("<div class='smu_shop_item_price new'>" & price & " EUR</div>");
  end else begin
    WebOutString("<div class='smu_shop_item_price'>" & SIr.Price & " EUR</div>");
  end;
  WebOutString("<div class='smu_shop_item_liked" & likedcls & "' uuid='" & SIr.UUID & "'></div>");
  WebOutString("<div class='smu_shop_item_basket" & basketcls & "' uuid='" & SIr.UUID & "'></div>");
  WebOutString("</div>");//smu_shop_item_details

  WebOutString("</a></div>");//smu_shop_single_item//

  return;
end;

function Integer IsItemLiked(string likeditems,string tuuid)
begin
  Integer res;

  if (SetInSet(tuuid,likeditems)) then begin
    res = 1;
  end;

  IsItemLiked = res;
  return;
end;

function Integer IsItemInBasket(string likeditems,string tuuid)
begin
  Integer res;
  string 255 tmp,item;
  Longint pos,pos2;

  while (GetNextSubString(likeditems,pos,",",tmp)) begin
    pos2 = -1;
    GetNextSubString(tmp,pos2,":",item);
    if (item==tuuid) then begin
      res = 1;
      pos = 10000;
    end;  
  end;

  IsItemInBasket = res;
  return;
end;

function string 255 UpdateItemList(string tstr)
begin
  string 255 res;
  string 255 tmp,item;
  Longint pos,pos2;
  record SMFItemVc SIr;

  while (GetNextSubString(tstr,pos,",",tmp)) begin
    pos2 = -1;
    GetNextSubString(tmp,pos2,":",item);
    SIr.UUID = StringToUUID(item);
    if (ReadFirstMain(SIr,1,true)) begin
      if (nonblank(res)) then begin
        res = res & ",";
      end;
      res = res & tmp;
    end;
  end;

  UpdateItemList = res;
  return;
end;

function string 255 GetLikedItems()
begin
  string 255 res;
  
  res = GetSessionString("liked_items");
  if (blank(res)) then begin
    res = GetCookie("liked_items");
  end;
  res = UpdateItemList(res);

  GetLikedItems = res;
  return;
end;

function string 255 GetBasketItems()
begin
  string 255 res;
  
  res = GetSessionString("basket_items");
  if (blank(res)) then begin
    res = GetCookie("basket_items");
  end;
  res = UpdateItemList(res);

  GetBasketItems = res;
  return;
end;

procedure ShowSMUShopItems(record SMFVc SMFr)
begin
  Boolean TrHs;
  string 255 likeditems,basketitems;
  record SMFItemVc SIr;
  record JALClassBlock JCbl;

  BlockLoad(JCbl);
  WebOutString("<div class='smu_shop_item_frame'>");
  WebOutString("<div class='smu_shop_item_title'>" & ToolWebNGTranslateText2(89235) & "</div>");

  WebOutString("<div class='smu_shop_item_list'>");
  likeditems = GetLikedItems;
  basketitems = GetBasketItems;
  TrHs = true;
  SIr.SMFCode = SMFr.SMFCode;
  while (LoopKey("SMFCode",SIr,1,TrHs)) begin
    if (SIr.SMFCode!=SMFr.SMFCode) then begin
      TrHs = false;
    end else begin
      ShowSingleSMUShopItem(JCbl,SIr,IsItemLiked(likeditems,SIr.UUID),IsItemInBasket(basketitems,SIr.UUID),WebGetArg("path"));
    end;
  end;

  WebOutString("</div>");//smu_shop_item_list
  WebOutString("</div>");//smu_shop_item_frame

  return;
end;


procedure AddMedia(record SMFVc SMFr,string fn,string cls)
begin
  string 255 tstr;
  
  tstr = GetFieldValueByName(SMFr,fn,-1);
  if (nonblank(tstr)) then begin
    if (left(tstr,4)!="http") then begin
      tstr = "https://" & tstr;
    end;
    WebOutString("<div class='smu_shop_media " & cls & "'><a href='" & tstr & "' target='_blank'></a></div>");
  end;

  return;
end;

procedure AddMedia2(record SMFVc SMFr,string fn,string cls)
begin
  string 255 tstr,link;
  
  tstr = GetFieldValueByName(SMFr,fn,-1);
  if (nonblank(tstr)) then begin
    if (fn=="ContactEmail") then begin
      link = "mailto:" & tstr;
    end else begin
      if (left(tstr,4)!="http") then begin
        tstr = "https://" & tstr;
      end;
      link = tstr;
    end;
    WebOutString("<div class='smu_shop_media_full " & cls & "'><a href='" & link & "' target='_blank' class='media_text'>" & tstr & "</a></div>");
  end;

  return;
end;



function Boolean FindJALFile(string smfcode,Integer type,var record JALFileVc rJFr)
begin
  record JALFileVc JFr;
  Boolean res;

  JFr.SMFCode = smfcode;
  JFr.Type = type;
  if (ReadFirstKey("SMFType",JFr,2,true)) then begin
    res = true;
    RecordCopy(rJFr,JFr);
  end;

  FindJALFile = res;
  return;
end;

function string 255 GetJALFileLink(record JALFileVc JFr)
begin
  string 255 res;
  record Attach2Vc Attachr;
  record RLinkVc RLr;
  Integer i;

  if (ReadRecordLink(JFr,1,Attachr,RLr)) begin
    res = "/WebShowJALFile.hal?smf=" & JFr.SMFCode & "&id=" & JFr.UUID;
  end;
 

  GetJALFileLink = res;
  return;
end;

global webpublic
procedure WebShowJALFile()
begin
  record JALFileVc JFr;
  record Attach2Vc Attachr,tAttachr;
  record RLinkVc RLr;
  string 255 ext;
  Integer i;
  Boolean foundf;
  
  JFr.UUID = StringToUUID(WebGetArg("id"));
  if (ReadFirstMain(JFr,1,true)) then begin
    if (JFr.SMFCode==WebGetArg("smf")) then begin
      i = 1;
      while (ReadRecordLink(JFr,i,Attachr,RLr)) begin
        if (left(Attachr.FileName,6)=="thumb_" or foundf==false) then begin
          RecordCopy(tAttachr,Attachr);
          foundf = true;
        end;
        i = i + 1;
      end;
      if (foundf) then begin
        ext = right(tAttachr.FileName,4);
        SetContentTypeForExtension(ext);
        WebSetContentDisposition("inline; filename=" & tAttachr.FileName);
        WebOutAttachment(tAttachr.SerNr);
      end;
    end;
  end;

  return;
end;

function Boolean GetCompanyLogo(record SMFVc SMFr,var string link)
begin
  Boolean res;
  record JALFileVc JFr;
  
  link = "";
  if (FindJALFile(SMFr.SMFCode,0,JFr)) then begin
    link = GetJALFileLink(JFr);
    res = true;
  end;

  GetCompanyLogo = res;
  return;
end;

function Boolean GetCompanyBackground(record SMFVc SMFr,var string link)
begin
  Boolean res;
  record JALFileVc JFr;
  
  if (FindJALFile(SMFr.SMFCode,1,JFr)) then begin
    link = GetJALFileLink(JFr);
    res = true;
  end;

  GetCompanyBackground = res;
  return;
end;

function string 255 DefaultLogo()
begin
  string 255 res;

  res = "/images/shop_default_logo.png";

  DefaultLogo = res;
  return;
end;

function string 255 DefaultBackground()
begin
  string 255 res;

  res = "/images/shop_default_background.png";

  DefaultBackground = res;
  return;
end;

function Boolean FindEmployeeImage(record SMFVc SMFr,record CUVc CUr,var string link)
begin
  Boolean res;
  record Attach2Vc Attachr;
  record RLinkVc RLr;
  Integer i;
  
  link = "";
  if (ReadRecordLink(CUr,1,Attachr,RLr)) begin
    link = "/WebShowSMUEmployeeImage.hal?smf=" & SMFr.SMFCode & "&id=" & CUr.UUID;
  end;
  if (nonblank(link)) then begin
    res = true;
  end;

  FindEmployeeImage = res;
  return;
end;

function string 255 DefaultEmployeeImage()
begin
  DefaultEmployeeImage = "/images/shop_default_employee.png";
  return;
end;

procedure ShowSingleEmployee(record SMFVc SMFr,record CUVc CUr)
begin
  string 255 link,imgname;
  
  WebOutString("<div class='smu_shop_single_employee'>");
  WebOutString("<div class='smu_shop_emp_image'>");
  if (FindEmployeeImage(SMFr,CUr,link)==false) then begin
    link = DefaultEmployeeImage;
  end;
  WebOutString("<img src='" & link & "'>");
  WebOutString("</div>");
  WebOutstring("<div class='smu_shop_item_details'>");
  WebOutString("<div class='smu_shop_single_emp_name'>" & CUr.Name & "</div>");
  WebOutString("<div class='smu_shop_emp_title'>" & CUr.JobDesc & "</div>");
  WebOutString("</div>");//smu_shop_item_details

  WebOutString("</div>");//smu_shop_single_employee

  return;
end;

procedure ShowSMUShopEmployees(record SMFVc SMFr)
begin
  record CUVc CUr;
  record RLinkVc RLr;
  Integer i;

  WebOutString("<div class='smu_shop_item_frame'>");
  WebOutString("<div class='smu_shop_item_title'>" & ToolWebNGTranslateText2(89255) & "</div>");

  WebOutString("<div class='smu_shop_item_list emp_list'>");
  
  i = i + 1;
  while (ReadRecordLink(SMFr,i,CUr,RLr)) begin
    ShowSingleEmployee(SMFr,CUr);
    i = i + 1;
  end;

  WebOutString("</div>");//smu_shop_item_list
  WebOutString("</div>");//smu_shop_item_frame

  return;
end;

procedure ShowSMUShopContactDetails(record SMFVc SMFr)
begin
  
  WebOutString("<div class='smu_shop_contacts_frame'>");
  WebOutString("<div class='smu_shop_contacts_title'>" & ToolWebNGTranslateText2(89202) & "</div>");

  WebOutString("<div class='smu_shop_contacts_large_media'>");
  AddMedia2(SMFr,"ContactEmail","contactemail");
  AddMedia2(SMFr,"ExtWebPage","externalpage");
  WebOutString("</div>");
  WebOutString("<div class='smu_shop_contacts_small_media'>");
  AddMedia(SMFr,"Facebook","fbpage");
  AddMedia(SMFr,"Instagram","instagrampage");
  AddMedia(SMFr,"Twitter","twitterpage");
  WebOutString("</div>");

  WebOutString("</div>");//smu_shop_item_list
  WebOutString("</div>");//smu_shop_item_frame

  return;
end;

function Boolean FindNoteWithTag(record SMFVc SMFr,string tag,var record NotepadVc Noter)
begin
  Integer i;
  Boolean res;
  record RLinkVc RLr;
  record NotepadVc tNoter;

  i = 1;
  while (ReadRecordLink(SMFr,i,tNoter,RLr)) begin
    if (tNoter.Classification==tag) then begin
      RecordCopy(Noter,tNoter);
      res = true;
      goto LFindNoteWithTag;
    end;
    i = i + 1;
  end;

LFindNoteWithTag:;
  FindNoteWithTag = res;
  return;
end;


procedure ShowSMUEditField(string label,string name,string descr,string add)
begin

  WebOutString("<div class=""field_row " & add & """>");
  WebOutString("<div class=""field_col""><div class=""field_label"">" & label & "</div><div class=""field_wrap""><input class=""" & name & """ type=""text"" name=""" & name & """ " & add & "></div></div>");
  
  WebOutString("<div class=""field_descr"">" & descr & "</div>");
  WebOutString("<div class=""clear""></div>");
  WebOutString("</div>");

  return;
end;

procedure ShowSMUEditField2(string label,string name,string descr,string add,string extratext)
begin

  WebOutString("<div class=""field_row " & add & """>");
  WebOutString("<div class='extra_text'>" & extratext & "</div>")
  WebOutString("<div class=""field_col""><div class=""field_label"">" & label & "</div><div class=""field_wrap""><input class=""" & name & """ type=""text"" name=""" & name & """ " & add & "></div></div>");
  
  WebOutString("<div class=""field_descr"">" & descr & "</div>");
  WebOutString("<div class=""clear""></div>");
  WebOutString("</div>");

  return;
end;

procedure ShowSMUTextArea(string label,string name,string descr,string extra)
begin

  WebOutString("<div class=""field_row"">");
  WebOutString("<div class=""field_col""><div class=""field_label"">" & label & "</div><div class=""field_wrap""><textarea class=""" & name & """ name=""" & name & """ " & extra & "></textarea></div></div>");
  
  WebOutString("<div class=""field_descr"">" & descr & "</div>");
  WebOutString("<div class=""clear""></div>");
  WebOutString("</div>");
  
  return;
end;

function string 255 ExtractYoutubeId(string youtube)
begin
  string 255 res,tstr;
  Longint pos;

  GetNextSubString(youtube,pos,"=",tstr);
  GetNextSubString(youtube,pos,"=",tstr);

  pos = -1;
  GetNextSubString(tstr,pos,"&",res);

  ExtractYoutubeId = res;
  return;
end;

function string 255 GetBaseUrl()
begin
  string 255 tstr,res;
  Longint pos;

  tstr = WebGetArg("path");
  GetNextSubString(tstr,pos,"/",res);
  GetNextSubString(tstr,pos,"/",res);
  res = "/" & res;

  GetBaseUrl = res;
  return;
end;

function string 255 GetSMUSchoolList(record SMFVc SMFr)
begin
  record TeacherVc TCr;
  Integer i,rwcnt;
  row SMFVc SMFrw;
  row TeacherVc TCrw;
  string 255 res;
  
  rwcnt = MatRowCnt(SMFr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(SMFr,i,SMFrw);
    if (SMFrw.Type==0) then begin
      TCr.TeacherCode = SMFrw.Code;
      if (ReadFirstMain(TCr,1,true)) then begin
        MatRowGet(TCr,0,TCrw);
        if (nonblank(res)) then begin
          res = res & ", ";
        end;
        res = res & TCrw.SchoolName;
      end;
    end;
  end;
  if (blank(res)) then begin
    res = SMFr.SchoolName;
  end;

  GetSMUSchoolList = res;
  return;
end;

procedure ShowSingleSMUWebShop(record SMFVc SMFr)
begin
  string 255 logolink,bglink,addclass,youtubeid,baseurl;
  record NotepadVc Noter;
  Boolean shippingf;

  if (GetCompanyLogo(SMFr,logolink)==false) then begin
    logolink = DefaultLogo;
  end;
  if (GetCompanyBackground(SMFr,bglink)==false) then begin
    //bglink = DefaultBackground;
  end;
  baseurl = GetBaseUrl;
  WebOutString("<div class='smu_shop_frame'>");
  WebOutString("<div class='smu_shop_main_back' id='main-button-on-top'><a href='" & baseurl & "'>" & ToolWebNGTranslateText2(89256) & "</a></div>");
  WebOutString("<div class='smu_shop_title_section'>");
  WebOutString("<div class='smu_shop_logo'><img src='" & logolink & "'></div>");
  WebOutString("<div class='smu_shop_compname_section'>");

  if (nonblank(bglink)) then begin
    WebOutString("<style>#banner{background-image:url(" & bglink & ") !important; height:500px;}</style>");
  end;
  
  WebOutString("<div class='smu_shop_school'>" & GetSMUSchoolList(SMFr) & "</div>");
  WebOutString("<div class='smu_shop_title'>" & SMFr.SMFName & "</div>");
  WebOutString("<div class='smu_shop_prodspec'>" & SMFr.ProdSpec & "</div>");
  
  WebOutString("<div class='smu_shop_media_frame'>")

  WebOutString("<div class='smu_shop_media_top'>");
  AddMedia(SMFr,"Facebook","fbpage");
  AddMedia(SMFr,"Instagram","instagrampage");
  AddMedia(SMFr,"Twitter","twitterpage");
  WebOutString("</div>");//smu_shop_media_bottom
  
  WebOutString("</div>");//smu_shop_media_frame
  WebOutString("<div class='smu_shop_media_inline'>");
  AddMedia2(SMFr,"ContactEmail","contactemail");
  AddMedia2(SMFr,"ExtWebPage","externalpage");
  WebOutString("</div>");//smu_shop_media_top

  WebOutString("</div>");//smu_shop_compname_section

  WebOutString("</div>");//smu_shop_title_section
  
/* shipping is in single product page
  if (FindNoteWithTag(SMFr,"Shipping",Noter)) then begin
    shippingf = true;
    addclass = " shipping";
  end;
*/
  WebOutString("<div class='smu_shop_aboutus_mainwrap" & addclass & "'>");
  /*
  if (nonblank(SMFr.Youtube)) then begin
    WebOutString("<div class='smu_shop_aboutus_frame shopping'><div class='smu_shop_aboutus'>");
    WebOutString("<div class='iframe_fancy' href='" & SMFr.Youtube & "'><img src='http://img.youtube.com/vi/[video-id]/[thumbnail-number].jpg'></a>")
    WebOutString("</div></div>");//smu_shop_aboutus_frame
  end;
  */
  if (nonblank(SMFr.Youtube)) then begin
  //http://img.youtube.com/vi/[video-id]/[thumbnail-number].jpg
    youtubeid = ExtractYoutubeId(SMFr.Youtube);
    WebOutString("<div class='youtube_section'>");
    WebOutString("<a data-fancybox href='" & SMFr.Youtube & "'><img src='http://img.youtube.com/vi/" & youtubeid & "/hq720.jpg'></a>");
    WebOutString("<a data-fancybox  class='play_button' href='" & SMFr.Youtube & "'><img src='/images/play-button-white.svg'></a>");
    WebOutString("</div>");
  end;

  WebOutString("<div class='smu_shop_aboutus'>");
  WebOutString("<div class='smu_shop_aboutus_title'>" & ToolWebNGTranslateText2(89200) & "</div><div class='smu_shop_aboutus_text'>");
  WebOutText(SMFr,true,"");
  WebOutString("</div>");
  WebOutString("</div>");//smu_shop_aboutus_frame
  /*
  if (shippingf) then begin
    WebOutString("<div class='smu_shop_aboutus_frame shopping'><div class='smu_shop_aboutus'>");
    WebOutString("<div class='smu_shop_aboutus_title'>" & ToolWebNGTranslateText2(80137) & "</div><div class='smu_shop_aboutus_text'>");
    WebOutText(Noter,false,"");
    WebOutString("</div>");
    WebOutString("</div></div>");//smu_shop_aboutus_frame
  end;
  */
  WebOutString("</div>");//smu_shop_aboutus_mainwrap


  ShowSMUShopItems(SMFr);
  ShowSMUShopEmployees(SMFr);

  //ShowSMUShopContactDetails(SMFr);

  WebOutString("</div>");//smu_shop_frame

  return;
end;

procedure DisplayItemGallery(record SMFItemVc SIr)
begin
  Integer i;
  record Attach2Vc Attachr;
  record RLinkVc RLr;
  string 255 link,link2,name;
  
  WebOutString("<div class='item_gallery'>");
  WebOutString("<div class='small_preview'></div>");
  WebOutString("<div class='item_image_list'>");

  i = 1;
  while (ReadRecordLink(SIr,i,Attachr,RLr)) begin
    if (left(Attachr.FileName,6)=="thumb_") then begin
      name = right(Attachr.FileName,len(Attachr.FileName)-6);
      link = "/WebShowSMUShopItemImage.hal?smf=" & SIr.SMFCode & "&id=" & SIr.UUID & "&name=" & Attachr.FileName;
      link2 = "/WebShowSMUShopItemImage.hal?smf=" & SIr.SMFCode & "&id=" & SIr.UUID & "&name=" & name;
      WebOutString("<div class='single_item_image' src='" & link2 & "'><img src='" & link & "'></div>");
      WebOutString("<a  data-fancybox='gallery' class='hidden_item_image' href='" & link2 & "' class='item_gallery_image'></a>");
    end;
    i = i + 1;
  end;
  WebOutString("</div>");
  WebOutString("</div>");

  return;
end;

procedure ItemDivider()
begin
  WebOutString("<div class='item_details_divider'></div>");
  return;
end;

procedure DisplayItemDetails(record SMFVc SMFr,record SMFItemVc SIr)
begin
  Integer rwcnt,i;
  row SMFItemVc SIrw;
  Longint pos;
  string 255 tstr;
  record NotePadVc Noter;
  Boolean dividerf;
  val price;
  record JALClassBlock JCb;

  BlockLoad(JCb);
  WebOutString("<div class='item_details'>");
  WebOutString("<div class='item_title'>" & SIr.Name & "</div>");
  if (nonblank(SIr.ShortDesc)) then begin
    WebOutString("<div class='item_short_desc'>" & SIr.ShortDesc & "</div>");
  end;
  price = GetSMUItemPrice(JCb,SIr);
  if (price!=SIr.Price) then begin
    WebOutString("<div class='item_price old'>" & SIr.Price & " Eur</div>");
    WebOutString("<div class='item_price new'>" & price & " Eur</div>");
  end else begin
    WebOutString("<div class='item_price'>" & SIr.Price & " Eur</div>");
  end;
  rwcnt = MatRowCnt(SIr);
  dividerf = false;
  if (rwcnt>0 or nonblank(SIr.SizeList)) then begin
    ItemDivider;
    if (rwcnt>0) then begin
      WebOutString("<div class='item_dimension color'><div class='item_dim_label'>" & ToolWebNGTranslateText2(89245) & "</div><div class='item_dim_values'>");
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(SIr,i,SIrw);
        WebOutString("<div class='dim' color='" & SIrw.ColorCode & "'><div class='dim_val' style='background-color:" & SIrw.ColorCode & "' title='" & SIrw.ColorName & "'></div></div>");
      end;
      WebOutString("</div></div>");
      dividerf = true;
    end;
    if (nonblank(SIr.SizeList)) then begin
      WebOutString("<div class='item_dimension size'><div class='item_dim_label'>" & ToolWebNGTranslateText2(89246) & "</div><div class='item_dim_values'><select>");
      while (GetNextSubString(SIr.SizeList,pos,",",tstr)) begin
        WebOutString("<option value='" & tstr & "'>" & tstr & "</option>");
      end;
      WebOutString("</select></div></div>");
      dividerf = true;
    end;
  end;
  if (FindNoteWithTag(SMFr,"Shipping",Noter)) then begin
    if (dividerf) then begin
      ItemDivider;
    end;
    WebOutString("<div class='item_shipping'>");
    WebOutString("<div class='item_shipping_title'>" & ToolWebNGTranslateText2(89254) & "</div>")
    WebOutText(Noter,true,"");
    WebOutString("</div>");
  end;
  WebOutString("<div class='item_add_basket' uuid='" & SIr.UUID & "'>" & ToolWebNGTranslateText2(89247) & "</div>");

  WebOutString("</div>");

  return;
end;

procedure DisplayItemDescription(record SMFItemVc SIr)
begin
  
  if (SizeTextCnt(SIr)>0) then begin
    WebOutString("<div class='item_full_desc'><div class='item_full_desc_label'>" & ToolWebNGTranslateText2(89248) & "</div><div class='item_full_desc_val'>");
    WebOutText(SIr,true,"");
    WebOutString("</div>");
    WebOutString("</div>");
  end;

  return;
end;

procedure ShowSameSMUProducts(record SMFVc SMFr,string baseurl)
begin
  record JALClassBlock JCbl;
  record SMFVc tSMFr;
  Boolean TrHs,TrHs2;
  record SMFItemVc SIr;
  array record SMFItemVc arrSIr;
  Integer cnt,ipos,i;
  string 255 likeditems,basketitems,tstr;
  
  BlockLoad(JCbl);
  TrHs = true;
  SIr.SMFCode = SMFr.SMFCode;
  while (LoopKey("SMFCode",SIr,1,TrHs)) begin
    if (SIr.SMFCode!=SMFr.SMFCode) then begin
      TrHs = false;
    end else begin
      arrSIr[arrSIr.length] = SIr;
    end;
  end;

  likeditems = GetLikedItems;
  basketitems = GetBasketItems;  
  cnt = 0;
  if (arrSIr.length>0) then begin
    WebOutString("<div class='similar_products_frame'>");
    WebOutString("<div class='similar_products_title'>" & ToolWebNGTranslateText2(89257) & "</div>");
    WebOutString("<div class='similar_products_list'>");
    for (i=0;i<arrSIr.length and i<10;i=i+1) begin
      SIr = arrSIr[i];
      tstr = baseurl & "/" & SMFr.WebShopUrl;
      ShowSingleSMUShopItem(JCbl,SIr,IsItemLiked(likeditems,SIr.UUID),IsItemInBasket(basketitems,SIr.UUID),tstr);
    end;
    WebOutString("</div>");
    WebOutString("</div>");
    ItemDivider;
  end;

  return;
end;

procedure ShowSimilarProducts(record SMFVc SMFr,string baseurl)
begin
  record JALClassBlock JCbl;
  record SMFVc tSMFr;
  Boolean TrHs,TrHs2;
  record SMFItemVc SIr;
  array record SMFItemVc arrSIr;
  Integer cnt,ipos;
  string 255 likeditems,basketitems,tstr;
  
  BlockLoad(JCbl);
  WebOutString("<div class='similar_products_frame'>");
  WebOutString("<div class='similar_products_title'>" & ToolWebNGTranslateText2(89253) & "</div>");
  WebOutString("<div class='similar_products_list'>");
  TrHs = true;
  tSMFr.ProdSpec = SMFr.ProdSpec;
  tSMFr.WebStatus = 2;
  while (LoopKey("ProdSpecWebStat",tSMFr,2,TrHs)) begin
    if (tSMFr.ProdSpec!=SMFr.ProdSpec or tSMFr.WebStatus!=2) then begin
      TrHs = false;
    end else begin
      if (arrSIr.length<100) then begin
        ResetLoop(SIr);
        RecordClear(SIr);
        TrHs2 = true;
        SIr.SMFCode = tSMFr.SMFCode;
        while (LoopKey("SMFCode",SIr,1,TrHs2)) begin
          if (SIr.SMFCode!=tSMFr.SMFCode) then begin
            TrHs2 = false;
          end else begin
            arrSIr[arrSIr.length] = SIr;
          end;
        end;
      end else begin
        TrHs = false;
      end;
    end;
  end;

  likeditems = GetLikedItems;
  basketitems = GetBasketItems;  
  cnt = 0;
  while (cnt<10) begin
    Randomize;
    ipos = Random(0,arrSIr.length-1);
    SIr = arrSIr[ipos];
    tSMFr.SMFCode = SIr.SMFCode;
    if (ReadFIrstMain(tSMFr,1,true)) then begin
      tstr = baseurl & "/" & tSMFr.WebShopUrl;
      ShowSingleSMUShopItem(JCbl,SIr,IsItemLiked(likeditems,SIr.UUID),IsItemInBasket(basketitems,SIr.UUID),tstr);
      cnt = cnt + 1;
    end;
  end;
  WebOutString("</div>");

  return;
end;

procedure ShowSingleSMUItemPage(record SMFVc SMFr,string itemuuid)
begin
  record SMFItemVc SIr;
  string 255 baseurl,tstr;
  Longint pos;
  
  baseurl = GetBaseUrl;
  WebOutString("<div class='smu_shop_single_item_frame'>");
  WebOutString("<style>#banner{display:none !important;}</style>");
  SIr.UUID = StringToUUID(itemuuid);
  if (ReadFirstMain(SIr,1,true)) then begin
    WebOutString("<div class='item_back'><a href='" & baseurl & "/" & SMFr.WebShopUrl & "'>" & ToolWebNGTranslateText2(89249) & "</a></div>");
    WebOutString("<div class='item_info'>");
    DisplayItemGallery(SIr);
    DisplayItemDetails(SMFr,SIr);
    WebOutString("</div>");
    DisplayItemDescription(SIr);
    ItemDivider;
    ShowSameSMUProducts(SMFr,baseurl);
    ShowSimilarProducts(SMFr,baseurl);
  end;

  WebOutString("</div>");//smu_shop_frame

  return;
end;

function string 255 GetColorName(record SMFItemVc SIr,string color)
begin
  row SMFItemVc SIrw;
  Integer i,rwcnt;
  string 255 res;
  
  rwcnt = MatRowCnt(SIr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(SIr,i,SIrw);
    if (SIrw.ColorCode==color) then begin
      res = SIrw.ColorName;
      i = rwcnt;
    end;
  end;

  GetColorName = res;
  return;
end;

procedure ShowSingleSMUShopItem2(record JALClassBlock JCb,record SMFItemVc SIr,Boolean likedf,Boolean basketf,Integer step,Integer qty,string size,string color)
begin
  string 255 link,likedcls,basketcls,imgname,tstr,itemtag,itemcolor;
  record SMFVc SMFr;
  val price;

  SMFr.SMFCode = SIr.SMFCode;
  ReadFirstMain(SMFr,1,true);
  GetItemTag(JCb,SIr,itemtag,itemcolor);

  WebOutString("<div class='smu_shop_single_item' uuid='" & SIr.UUID & "' url='" & "/katalogs/" & GetSMFShopUrl(SMFr) & "'>");
  if (nonblank(itemtag)) then begin
    WebOutString("<div class='item_tag " & itemcolor & "'>" & itemtag & "</div>");
  end;

  WebOutString("<div class='smu_shop_item_image'>");
  if (FindItemImage(SIr,link,imgname,true)==false) then begin
    link = DefaultItemImage;
  end;
  if (likedf) then begin
    likedcls = " active";
  end;
  if (basketf) then begin
    basketcls = " added_to_basket";
  end;
  WebOutString("<img src='" & link & "'>");
  WebOutString("</div>");//smu_shop_item_image
  WebOutstring("<div class='smu_shop_item_details'>");
  price = GetSMUItemPrice(JCb,SIr);
  if (step>0) then begin
    WebOutString("<div class='smu_shop_fav_main_det'><div class='smu_shop_item_smfname'>" & SMFr.SMFName & "</div>");
    WebOutString("<div class='smu_shop_single_item_title' title='" & SIr.Name & "'>" & SIr.Name & "</div>");
    if (nonblank(color)) then begin
      WebOutString("<div class='basket_dim'>" & ToolWebNGTranslateText2(89245) & " " & GetColorName(SIr,color) & "</div>");
    end;
    if (nonblank(size)) then begin
      WebOutString("<div class='basket_dim'>" & ToolWebNGTranslateText2(89246) & " " & size & "</div>");
    end;
    WebOutString("</div>");
    WebOutString("<div class='price_det'>");
    if (step==1) then begin
      WebOutString("<div class='smu_shop_single_item_qty qty_entry'><div class='remove'>-</div><input type='text' readonly value='" & qty & "'><div class='add'>+</div></div>");
    end else begin
      WebOutString("<div class='smu_shop_single_item_qty'>" & qty & " " & ToolWebNGTranslateText2(89233) & "</div>");
    end;
    if (price!=SIr.Price) then begin
      WebOutString("<div class='smu_shop_item_price old'>" & SIr.Price & " EUR</div>");
      WebOutString("<div class='smu_shop_item_price new'>" & price & " EUR</div>");
    end else begin
      WebOutString("<div class='smu_shop_item_price'>" & SIr.Price & " EUR</div>");
    end;
    WebOutString("</div>");
  end else begin
    WebOutString("<div class='smu_shop_fav_main_det'><div class='smu_shop_item_district'>" & SMFr.District & "</div>");
    WebOutString("<div class='smu_shop_single_item_title'>" & SIr.Name & "</div></div>");
    WebOutString("<div class='smu_shop_item_smfdetails'><div class='smu_shop_item_smfname'>" & SMFr.SMFName & "</div>");
    WebOutString("<a class='smu_shop_item_contactemail' href='mailto:" & SMFr.ContactEmail & "'>" & SMFr.ContactEmail & "</a></div>");
    if (price!=SIr.Price) then begin
      WebOutString("<div class='smu_shop_item_price old'>" & SIr.Price & " EUR</div>");
      WebOutString("<div class='smu_shop_item_price new'>" & price & " EUR</div>");
    end else begin
      WebOutString("<div class='smu_shop_item_price'>" & SIr.Price & " EUR</div>");
    end;
    WebOutString("<div class='smu_shop_item_liked" & likedcls & "' uuid='" & SIr.UUID & "'></div>");
    WebOutString("<div class='smu_shop_item_basket" & basketcls & "' uuid='" & SIr.UUID & "'></div>");
  end;
  WebOutString("</div>");//smu_shop_item_details

  WebOutString("</div>");//smu_shop_single_item

  return;
end;

procedure ShowBasketItemList(Integer step)
begin
  string 255 logolink,bglink,addclass;
  record NotepadVc Noter;
  Boolean shippingf;
  record SMFItemVc SIr;
  Boolean TrHs;
  string 255 likeditems,tmp,actview,basketitems,item,qty,size,color;
  Longint pos,pos2;
  record JALClassBlock JCb;

  basketitems = GetBasketItems;

  BlockLoad(JCb);
  WebOutString("<div class='smu_shop_item_title_wrap'>");
  if (blank(basketitems)) then begin
    WebOutString("<div class='smu_shop_item_title empty_basket'>" & ToolWebNGTranslateText2(89236) & "</div>");
    goto LShowBasketItemList;
  end;
  if (step==1) then begin
    WebOutString("<div class='smu_shop_item_title'>" & ToolWebNGTranslateText2(89234) & "</div>");
  end;
  WebOutString("</div>");//smu_shop_item_title_wrap


  WebOutString("<div class='smu_shop_item_list listview'>");
  TrHs = true;
  while (GetNextSubString(basketitems,pos,",",tmp)) begin
    pos2 = -1;
    GetNextSubString(tmp,pos2,":",item);
    GetNextSubString(tmp,pos2,":",qty);
    GetNextSubString(tmp,pos2,":",size);
    GetNextSubString(tmp,pos2,":",color);

    SIr.UUID = StringToUUID(item);
    if (ReadFirstMain(SIr,1,true)) then begin
      ShowSingleSMUShopItem2(JCb,SIr,IsItemLiked(likeditems,SIr.UUID),false,step,StringToInt(qty),size,color);
    end;
  end;

LShowBasketItemList:;
  WebOutString("</div>");//smu_shop_item_list


  return;
end;

procedure ShowHiddenBanner()
begin
  
  WebOutString("<div class='hidden_banner'><div class='banner_image'><img src='/images/hidden_banner.png'></div></div>")

  return;
end;

procedure ShowBasketPage(var string path)
begin
  string 255 node;
  Boolean orderf;
  record JALClassBlock JCb;
  Integer step;

  BlockLoad(JCb);
  if (JCb.HideCatalog==1) then begin
    ShowHiddenBanner;
  end;

  WebOutString("<style>");
  WebOutString("body #banner{");
  WebOutString("  background-image:url(/images/grozs_banner.png) !important;");
  WebOutString("  filter:brightness(40%);");
  WebOutString("  height: 500px;");
  WebOutString("}");

  WebOutString("</style>");

  WebOutString("<div class='smu_shoplist_frame'><div class='smu_shop_item_frame basket'>");

  node = removenextnode(path);
  switch (node) begin
    case "pasutit":
      step = 2;
      //WebOutString("<div class='basket_back'>" & ToolWebNGTranslateText2(89220) & "</div>");
      WebOutString("<div class='smu_shop_basket_frame'>");
      
      //show reg form
      WebOutString("<div class='smu_shop_basket_order_form'>");
      WebOutString("<div class='smu_shop_item_title'>" & ToolWebNGTranslateText2(89221) & "</div>");
      ShowSMUEditField(ToolWebNGTranslateText2(89222),"name","","");
      ShowSMUEditField(ToolWebNGTranslateText2(89223),"email","","");
      ShowSMUEditField(ToolWebNGTranslateText2(89224),"phone","","");
      ShowSMUEditField(ToolWebNGTranslateText2(89225),"shipaddr","","");
      ShowSMUTextArea(ToolWebNGTranslateText2(89226),"comment","","");

      WebOutString("<div class='smu_shop_basket_order_info'>" & ToolWebNGTranslateText2(89227) & "</div>");
      WebOutString("</div>");//smu_shop_basket_order_form

      //show items
      WebOutString("<div class='smu_shop_basket_order_items'>");
      ShowBasketItemList(step);
      WebOutString("</div>");//smu_shop_basket_order_items
      WebOutString("</div>");//smu_shop_basket_frame

    case "pabeigts":
      WebOutString("<div class='basket_finish'><div class='basket_finish_title'>" & ToolWebNGTranslateText2(89237) & "</div><div class='basket_finish_text'>" & ToolWebNGTranslateText2(89238) & "</div><div class='basket_finish_button spbutton'>" & ToolWebNGTranslateText2(89239) & "</div></div>");//89237
    otherwise
      step = 1;
      ShowBasketItemList(step);
  end;
  
  WebOutString("</div>");//smu_shop_item_frame
  WebOutString("</div>");//smu_shop_frame
  
  if (nonblank(GetBasketItems)) then begin
    switch (step) begin
      case 1:
        WebOutString("<div class='smu_shop_basket_order_finish_wrap step1'><div class='smu_shop_basket_order_finish_inner'><div class='smu_shop_basket_order_finish_col1'><div class=''>" & ToolWebNGTranslateText2(89228) & "</div></div><div class='smu_shop_basket_order_col2'><div class='smu_shop_basket_order_button spbutton'>" & ToolWebNGTranslateText2(89229) & "</div></div></div></div>")
      case 2:
        WebOutString("<div class='smu_shop_basket_order_finish_wrap step2'><div class='smu_shop_basket_order_finish_inner'><div class='smu_shop_basket_order_finish_col1'><div class='order_finish_title'>" & ToolWebNGTranslateText2(89230) & "</div><div class=''>" & ToolWebNGTranslateText2(89231) & "</div></div><div  class='smu_shop_basket_order_col2'><div class='smu_shop_basket_order_button spbutton'>" & ToolWebNGTranslateText2(89232) & "</div></div></div></div>")
    end;
  end;

  return;
end;


procedure ShowFavouritesPage()
begin
  string 255 logolink,bglink,addclass;
  record NotepadVc Noter;
  Boolean shippingf;
  record SMFItemVc SIr;
  Boolean TrHs;
  string 255 likeditems,tmp,actview,basketitems;
  Longint pos;
  record JALClassBlock JCb;

  BlockLoad(JCb);
  if (JCb.HideCatalog==1) then begin
    ShowHiddenBanner;
  end;

  WebOutString("<style>");
  WebOutString("body #banner{");
  WebOutString("  background-image:url(/images/fav_banner.png) !important;");
  WebOutString("  filter:brightness(40%);");
  WebOutString("  height: 500px;");
  WebOutString("}");

  WebOutString("</style>");

  WebOutString("<div class='smu_shoplist_frame'><div class='smu_shop_item_frame favourites'>");

  WebOutString("<div class='smu_shop_item_title_wrap'>");
  WebOutString("<div class='smu_shop_item_title'>" & ToolWebNGTranslateText2(89240) & "</div>");
  actview = GetSessionString("basket_view");
  WebOutString("<div class='smu_shop_item_displayelement " & actview & "'><div class='display_gallery' list=''></div><div class='display_list' list='listview'></div></div>");
  WebOutString("</div>");//smu_shop_item_title_wrap

  WebOutString("<div class='smu_shop_mainsearch'><input type='text' placeholder='" & ToolWebNGTranslateText2(89216) & "'></div>");

  WebOutString("<div class='smu_shop_item_list " & actview & "'>");
  likeditems = GetLikedItems;
  basketitems = GetBasketItems;
  TrHs = true;
  while (GetNextSubString(likeditems,pos,",",tmp)) begin
    SIr.UUID = StringToUUID(tmp);
    if (ReadFirstMain(SIr,1,true)) then begin
      ShowSingleSMUShopItem2(JCb,SIr,IsItemLiked(likeditems,SIr.UUID),IsItemInBasket(basketitems,SIr.UUID),0,0,"","");
    end;
  end;

  WebOutString("</div>");//smu_shop_item_list
  
  WebOutString("</div>");//smu_shop_item_frame
  WebOutString("</div>");//smu_shop_frame
  
  return;
end;

procedure ShowSingleSMUInList(record SMFVc SMFr)
begin
  string 255 logolink,distr;
  record SchoolVc SCr;

  if (GetCompanyLogo(SMFr,logolink)==false) then begin
    logolink = DefaultLogo;
  end;

  WebOutString("<div class='smu_shoplist_smu' region='" & SMFr.Region & "' industry='" & SMFr.ProdSpec & "'><a href='" & WebGetArg("path")  & "/" & SMFr.WebShopUrl & "' target='_blank'>");
  WebOutString("<div class='smu_shoplist_logo'><img src='" & logolink & "'></div>");
  WebOutString("<div class='smu_shoplist_details'>");
  WebOutString("<div class='smu_shoplist_name'>" & SMFr.SMFName & "</div>");
  WebOutString("<div class='smu_shoplist_school'>" & SMFr.SchoolName & "</div>");
  SCr.SchoolCode = SMFr.SchoolCode;
  if (ReadFirstMain(SCr,1,true)) then begin
    distr = Left(SCr.District,1) & Lowercase(right(SCr.District,len(SCr.District)-1));
    WebOutString("<div class='smu_shoplist_district'>" & distr & "</div>");
  end;
  WebOutString("<div class='smu_shoplist_smu_separator'></div>");
  WebOutString("<div class='smu_shoplist_smu_prodspec'>" & SMFr.ProdSpec & "</div>");

  WebOutString("</div>");//smu_shoplist_details
  WebOutString("</a></div>");//smu_shoplist_smu
  return;
end;

function string 255 ShowRegionSelect()
begin
  string 255 res;
  record JALRegionBlock JRb;
  row JALRegionBlock JRbrw;
  Integer i,rwcnt;

  BlockLoad(JRb);
  res = "<select id='region_select'>";
  res = res & "<option value=''>" & ToolWebNGTranslateText2(80141) & "</option>";
  rwcnt = MatRowCnt(JRb);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(JRb,i,JRbrw);
    res = res & "<option value='" & JRbrw.Region & "'>" & JRbrw.Region & "</option>";
  end;
  res = res & "</select>";

  ShowRegionSelect = res;
  return;
end;

function string 255 ShowTypeSelect()
begin
  string 255 res;
  record JALIndustryBlock JIb;
  row JALIndustryBlock JIbrw;
  Integer i,rwcnt;

  BlockLoad(JIb);
  res = "<select id='industry_select'>";
  res = res & "<option value=''>" & ToolWebNGTranslateText2(80142) & "</option>";
  rwcnt = MatRowCnt(JIb);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(JIb,i,JIbrw);
    res = res & "<option value='" & JIbrw.Industry & "'>" & JIbrw.Industry & "</option>";
  end;
  res = res & "</select>";

  ShowTypeSelect = res;
  return;
end;

procedure DisplaySearch()
begin
  record SMFVc tSMFr;
  record TeacherVc TCr;
  record MentorVc MTr;
  Integer type;
  record CUVc CUr;

  WebOutString("<div class='smu_shop_searchbox'><input type='text' placeholder='" & ToolWebNGTranslateText2(89203) & "'></div>");
  WebOutString("<div class='smu_shop_nav'><div class='my_shop_button'>" & ShowRegionSelect & "</div><div class='my_shop_button'>" & ShowTypeSelect & "</div>");
  CUr.Code = CurrentCust;
  if (ReadFirstMain(CUr,1,true)) then begin
    type = GetJAlCustType(CUr,tSMFr,TCr,MTr);
    if (type==0) then begin
      WebOutString("<div class='my_shop_button'><a href='/shop_edit' class='spbutton'>" & ToolWebNGTranslateText2(89204) & "</a></div>");
    end;
  end;
  
  WebOutString("</div>");

  return;
end;

procedure DisplayFilters()
begin
  

  return;
end;

procedure ShowSMUShopList()
begin
  record SMFVc SMFr;
  Boolean TrHs;

  WebOutString("<div class='smu_shoplist_frame'>");
  WebOutString("<div class='smu_shoplist_content'>");
  DisplaySearch;
  DisplayFilters;
  
  TrHs = true;
  SMFr.WebApprovedDate = CurrentDate;
  SMFr.WebStatus = 2;
  WebOutString("<div class='smu_shoplist_hidden' style='display:none'>");
  while (LoopBackKey("WebStatus",SMFr,2,TrHs)) begin
    if (SMFr.WebStatus!=2) then begin
      TrHs = false;
    end else begin
      ShowSingleSMUInList(SMFr);
    end;
  end;
  WebOutString("</div>");//smu_shoplist_hidden
  WebOutString("<div class='smu_shoplist'>");
  WebOutString("</div>");//smu_shoplist
  WebOutString("<div id='pagenave'></div>");
  WebOutString("</div>");//smu_shoplist_content
  WebOutString("</div>");//smu_shoplist_frame

  return;
end;


procedure DisplayFiltersExternal()
begin
  record JALDistrictBlock JDbl;
  row JALDistrictBlock JDblrw;
  record JALIndustryBlock JIbl;
  row JALIndustryBlock JIblrw;
  Integer i,rwcnt;

  WebOutString("<div class='smu_shop_filter_ext'>");
  WebOutString("<div class='smu_shop_filter_title'>" & ToolWebNGTranslateText2(89210) & "</div>");
  WebOutString("<div class='smu_shop_filter_title_sub'>" & ToolWebNGTranslateText2(89211) & "</div>");
  WebOutString("<div class='smu_shop_filter_search_ext'><input type='text' placeholder='" & ToolWebNGTranslateText2(89212) & "'></div>");

  WebOutString("<div class='smu_shop_filter_districtlist'>");
  BlockLoad(JDbl);
  rwcnt = MatRowCnt(JDbl);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(JDbl,i,JDblrw);
    WebOutString("<div class='district_line'><div class='input_checkbox'><input type='checkbox' val='" & JDblrw.District & "'><span class='checkmark'></span></div><div class='district_name'>" & JDblrw.District & "</div></div>");
  end;
  WebOutString("<div class='smu_shop_districtlist_expand' t1='" & ToolWebNGTranslateText2(89217) & "' t2='" & ToolWebNGTranslateText2(89218) & "'></div>");
  
  WebOutString("</div>");

  WebOutString("<div class='smu_shop_filter_title_sub'>" & ToolWebNGTranslateText2(89213) & "</div>");

  WebOutString("<div class='smu_shop_filter_industrylist'>");
  BlockLoad(JIbl);
  rwcnt = MatRowCnt(JIbl);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(JIbl,i,JIblrw);
    WebOutString("<div class='industry_line'><div class='input_checkbox'><input type='checkbox' val='" & JIblrw.Industry & "'><span class='checkmark'></span></div><div class='industry_name'>" & JIblrw.Industry & "</div></div>");
  end;
  WebOutString("</div>");

  WebOutString("</div>");
  WebOutString("<div class='filter_toggle'></div>");

  return;
end;

procedure DisplaySearchExternal(Boolean extf)
begin
  
  WebOutString("<div class='smu_shop_nav'>");
  WebOutString("<div class='smu_shop_type_filter'>");
  if (extf) then begin
    WebOutString("<div class='smu_type_filter_button' tag='products'>" & ToolWebNGTranslateText2(89214) & "</div><div class='smu_type_filter_button' tag='smus'>" & ToolWebNGTranslateText2(89215) & "</div>");
    WebOutString("</div>");
    WebOutString("<div class='smu_shop_mainsearch'><input type='text' p1='" & ToolWebNGTranslateText2(89216) & "' p2='" & ToolWebNGTranslateText2(89241) & "' placeholder='" & ToolWebNGTranslateText2(89216) & "'></div>");
  end else begin
    WebOutString("<div class='orders_back' onclick='history.back()'>" & ToolWebNGTranslateText2(89220) & "</div>");
    WebOutString("<div class='smu_shop_filter_title'>" & ToolWebNGTranslateText2(89258) & "</div>");
    WebOutString("</div>");
    WebOutString("<div class='smu_shop_mainsearch'><input type='text' placeholder='" & ToolWebNGTranslateText2(89241) & "'></div>");
  end;
  WebOutString("</div>");

  return;
end;

procedure ShowSMUShopListExternal(Boolean allf,string node,Boolean extf)
begin
  record SMFVc SMFr;
  Boolean TrHs;
  record JALClassBlock JCb;
  string 255 filter,cls;
  record JALEventVc JEr;

  BlockLoad(JCb);
  if (JCb.HideCatalog==1 and extf) then begin
    ShowHiddenBanner;
  end;

  if (allf==false) then begin
    JEr.ShopNode = node;
    if (ReadFirstKey("ShopNode",JEr,1,true)) then begin
      filter = JEr.SerNr;
    end;
  end;
  
  if (extf==false) then begin
    cls = " smu_shop";
  end;

  WebOutString("<div class='smu_external_frame" & cls & "'>")
  DisplayFiltersExternal;
  WebOutString("<div class='smu_shoplist_frame'>");
  DisplaySearchExternal(extf);
  WebOutString("<div class='filter_data' text='" & ToolWebNGTranslateText2(89219) & "' filter='" & filter & "'></div>");
  
  WebOutString("<div class='smu_shoplist'>");
  WebOutString("</div>");//smu_shoplist
  WebOutString("<div id='pagenave'></div>");
  WebOutString("</div>");//smu_shoplist_frame
  WebOutString("</div>");//smu_external_frame

  return;
end;

function Boolean SMUAllowedToShow(record SMFVc SMFr)
begin
  Boolean res;
  record SMFVc tSMFr;
  record TeacherVc TCr;
  record MentorVc MTr;
  Integer type;
  record CUVc CUr;
  string 255 s;
  record SMFSessionVc SSr;
  
  s = WebGetArg("s");
  SSr.UUID = StringToUUID(s);
  if (ReadFirstMain(SSr,1,true)) then begin
    queued.RemoveSMFSession(SSr);
    if (SMFr.SMFCode==SSr.SMFCode) then begin
      res = true;
      goto LSMUAllowedToShow;
    end;    
  end;

  if (SMFr.WebStatus==2) then begin//approved
    res = true;
    goto LSMUAllowedToShow;
  end;
  if (res==false) then begin
    CUr.Code = CurrentCust;
    if (ReadFirstMain(CUr,1,true)) then begin
      type = GetJAlCustType(CUr,tSMFr,TCr,MTr);
      if (type==0 and SMFr.SMFCode==tSMFr.SMFCode) then begin
        res = true;
      end;
    end;
  end;

LSMUAllowedToShow:;
  SMUAllowedToShow = res;
  return;
end;

global
procedure ShowSMUShopApp(record WebNGStructVc WSr,string mpath,string pathnode)
begin
  string 255 path,node;
  record SMFVc SMFr;
  Boolean showf,skipf;
  record WebNGPageVc WPr;
  record JALClassBlock JCb;

  path = mpath;
  node = removenextnode(path);
  
  BlockLoad(JCb);
  if (JCb.HideCatalog==1) then begin
    if (nonblank(JCb.OverridePage)) then begin
      WPr.Code = JCb.OverridePage;
      skipf = true;
    end;
  end;
  if (blank(WPr.Code)) then begin
    if (node=="") then begin
      WPr.Code = WSr.HALFunc;
    end else begin
      WPr.Code = WSr.WebPage;
    end;
  end;

  if (nonblank(WPr.Code)) then begin
    if (ReadFirstMain(WPr,1,true)) then begin end;
  end;
  ShowWebAppPageStart(WPr,"");

  if (!skipf) then begin
    switch (node) begin
      case "grozs":
        ShowBasketPage(path);
        showf = true;
      case "favoriti":
        ShowFavouritesPage;
        showf = true;
      otherwise
        if (nonblank(node)) then begin
          SMFr.WebShopUrl = node;
          if (ReadFirstKey("WebShopUrl",SMFr,1,true)) then begin
            if (SMUAllowedToShow(SMFr)) then begin
              node = removenextnode(path);
              if (nonblank(node)) then begin
                ShowSingleSMUItemPage(SMFr,node); 
                showf = true;
              end else begin
                ShowSingleSMUWebShop(SMFr);
                showf = true;
              end;
            end;
          end;
          if (showf==false) then begin
            WebOutString("SMU nav atrasts");
          end;
        end;
    end;

    if (showf==false and blank(node)) then begin
      //if () then begin
        ShowSMUShopListExternal(pathnode==WSr.Name,pathnode,WSr.Name=="katalogs");
      //end else begin
      //  ShowSMUShopList;
      //end;
    end;
  end;

  ShowWebAppPageEnd(WPr);


  return;
end;

procedure ShowShopEditBasicInfo()
begin
  
  WebOutString("<div class=""profile smu_basic_info smu-border"">");
  WebOutString("<div class=""smu_top""><div class=""back_button_wrap""><a class=""spbutton profile_back"" href=""/katalogs2"">" & ToolWebNGTranslateText2(80022) & "</a></div><div class=""profile_header"">" & ToolWebNGTranslateText2(80110) & "</div></div>");
  ShowSMUEditField(ToolWebNGTranslateText2(80010),"smu_name","","disabled");
  ShowSMUEditField(ToolWebNGTranslateText2(80111),"smu_school","","disabled");
  ShowSMUEditField(ToolWebNGTranslateText2(80112),"smu_spec","","disabled");
  ShowSMUEditField2(ToolWebNGTranslateText2(80139),"smu_url",ToolWebNGTranslateText2(80138),"",ToolWebNGTranslateText2(80140));
  ShowSMUTextArea(ToolWebNGTranslateText2(80113),"smu_descr",ToolWebNGTranslateText2(80114),"");
  ShowSMUTextArea(ToolWebNGTranslateText2(80137),"smu_shipping",ToolWebNGTranslateText2(80136),"");
  WebOutString("</div>");

  return;
end;

procedure ShowSimpleField(string label,string name)
begin
  
  WebOutString("<div class='item_input " & name & "'><input type='text' placeholder='" & label & "'></div>");

  return;
end;

procedure ShowSimpleCheckbox(string label,string name)
begin
  
  WebOutString("<div class='item_input " & name & "'><input type='checkbox'>" & label & "</div>");

  return;
end;

procedure ShowSimpleTextArea(string label,string name)
begin
  
  WebOutString("<div class='item_input " & name & "'><textarea placeholder='" & label & "'></textarea></div>");

  return;
end;

procedure ShowShopEditItem()
begin
  
  WebOutString("<div class=""profile smu_items smu-border"">");
  WebOutString("<div class=""smu_top""><div class=""profile_header"">" & ToolWebNGTranslateText2(80115) & "</div></div>");
  //80116,80117,80118
  WebOutString("<div class='item_template'><div class='shop_item'><div class='logo_frame'></div>");
  ShowSimpleField(ToolWebNGTranslateText2(80144),"name");
  ShowSimpleField(ToolWebNGTranslateText2(80145),"short");
  ShowSimpleField(ToolWebNGTranslateText2(80146),"price");
  ShowSimpleField(ToolWebNGTranslateText2(80154),"newprice");
  ShowSimpleField(ToolWebNGTranslateText2(80147),"sizelist");
  ShowSimpleCheckbox(ToolWebNGTranslateText2(80153),"notinstock");
  
  ShowSimpleTextArea(ToolWebNGTranslateText2(80148),"text");
  
  WebOutString("<div class='colorlist'><div class='placeholder'>" & ToolWebNGTranslateText2(80152) & "'</div></div>");
  WebOutString("<div class='remove_item'>" & ToolWebNGTranslateText2(80149) & "</div></div></div>");
  WebOutString("<div class='item_list'></div>");
  WebOutString("</div>");

  return;
end;

procedure ShowShopEditEmployee()
begin
  
  WebOutString("<div class=""profile smu_items smu-border"">");
  WebOutString("<div class=""smu_top""><div class=""profile_header"">" & ToolWebNGTranslateText2(80143) & "</div></div>");
  //80116,80117,80118
  WebOutString("<div class='employee_template'><div class='shop_employee'><div class='logo_frame'></div><div class='name_frame'></div><div class='title_frame'></div><div class='remove'></div></div></div>");
  WebOutString("<div class='employee_list'></div>");
  WebOutString("</div>");

  return;
end;

procedure ShowShopEditPhotos()
begin
  
  WebOutString("<div class=""profile smu_images smu-border"">");
  WebOutString("<div class=""smu_top""><div class=""profile_header"">" & ToolWebNGTranslateText2(80119) & "</div></div>");

  WebOutString("<div class=""field_row smuitems"">");
  WebOutString("<div class=""field_col"">");
  WebOutString("<div class='logo_template'><div class='shop_logo'></div></div>");
  WebOutString("<div class='background_template'><div class='shop_background'></div></div>");
//80120,80126,80127
  WebOutString("</div>");
  
  WebOutString("<div class=""field_descr"">" & ToolWebNGTranslateText2(80121) & "</div>");
  WebOutString("<div class=""clear""></div>");
  WebOutString("</div>");
  WebOutString("</div>");

  return;
end;

procedure ShowMediaEdit(string type,string ph,string descr)
begin
  
  WebOutString("<div class=""field_row media_field " & type & """>");
  WebOutString("<div class=""field_col""><div class=""field_wrap""><input type=""text"" placeholder='" & ph & "'></div></div>");
  
  WebOutString("<div class=""field_descr"">" & descr & "</div>");
  WebOutString("<div class=""clear""></div>");
  WebOutString("</div>");

  return;
end;

procedure ShowShopEditMedia()
begin
  
  WebOutString("<div class=""profile smu_media smu-border"">");
  WebOutString("<div class=""smu_top""><div class=""profile_header"">" & ToolWebNGTranslateText2(80122) & "</div></div>");

  ShowMediaEdit("fbpage",ToolWebNGTranslateText2(80130),"");
  ShowMediaEdit("instagrampage",ToolWebNGTranslateText2(80131),"");
  ShowMediaEdit("twitterpage",ToolWebNGTranslateText2(80132),"");
  ShowMediaEdit("youtubepage",ToolWebNGTranslateText2(80135),"");
  ShowMediaEdit("externalpage",ToolWebNGTranslateText2(80133),ToolWebNGTranslateText2(80123));

  WebOutString("</div>");

  WebOutString("<div class=""profile smu_email smu-border"">");
  WebOutString("<div class=""smu_top""><div class=""profile_header"">" & ToolWebNGTranslateText2(80124) & "</div></div>");

  ShowMediaEdit("contactemail",ToolWebNGTranslateText2(80134),ToolWebNGTranslateText2(80125));
  ShowMediaEdit("contactphone",ToolWebNGTranslateText2(80155),ToolWebNGTranslateText2(80156));

  WebOutString("</div>");
 

  return;
end;

global
procedure ShowShopEditPage()
begin
  
  OutPutJALWebTexts(0);
  ShowShopEditBasicInfo;
  ShowShopEditItem;
  ShowShopEditEmployee;
  ShowShopEditPhotos;
  ShowShopEditMedia;
  
  WebOutString("<div class='smu_submit_wrap'>");
  WebOutString("<div class='smu_submit'><a class='spbutton save_only' href='#'>" & ToolWebNGTranslateText2(80042) & "</a></div>");
  WebOutString("<div class='smu_submit'><a class='spbutton save_submit' href='#'>" & ToolWebNGTranslateText2(80043) & "</a></div>");
  WebOutString("</div>")

  return;
end;

global
updating procedure ResetSMFItemDiscountPrice(var record SMFItemVc SIr)
begin
  record SMFItemVc oldSIr;
  
  if (ReadFirstMain(SIr,1,true)) then begin
    RecordCopy(oldSIr,SIr);
    SIr.NewPrice = blankval;
    SIr.NewPriceDate = "";
    RecordUpdate(oldSIr,SIr,true);
  end;

  return;
end;

procedure GetItemList(string smfcode)
begin
  string 255 background,imgname,tstr;
  Integer cnt,cnt2,i,rwcnt;
  Boolean TrHs;
  record SMFItemVc SIr;
  row SMFItemVc SIrw;
  record Attach2Vc Attachr;
  record RLinkVc RLr;
  record JALClassBlock JCb;
  val price;

  BlockLoad(JCb);
  WebOutString("""items"":[");
  TrHs = true;
  SIr.SMFCode = smfcode;
  while (LoopKey("SMFCode",SIr,1,TrHs)) begin
    if (SIr.SMFCode!=smfcode) then begin
      TrHs = false;
    end else begin
      if (cnt>0) then begin
        WebOutString(",");
      end;
      if (DiscountExpired(JCb,SIr)) then begin
        qupdating.ResetSMFItemDiscountPrice(SIr);
      end;
      price = GetSMUItemPrice(JCb,SIr);
      FindItemImage(SIr,background,imgname,true);	
      WebOutString("{""Name"":""" & FormatJSONString(SIr.Name) & """,""Price"":""" & FormatJSONString(SIr.Price) & """,""UUID"":""" & FormatJSONString(SIr.UUID) & """,");
      WebOutString("\"Short\": \"" & FormatJSONString(SIr.ShortDesc) & "\",");
      WebOutString("\"SizeList\": \"" & SIr.SizeList & "\",");
      WebOutString("\"NotInStock\": \"" & SIr.NotInStock & "\",");
      WebOutString("\"NewPrice\": \"" & price & "\",");
      WebOutString("\"Colors\": [");
      rwcnt = MatRowCnt(SIr);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(SIr,i,SIrw);
        if (i>0) then begin
          WebOutString(",");
        end;
        WebOutString("{\"Code\": \"" & SIrw.ColorCode & "\",\"Name\": \"" & FormatJSONString(SIrw.ColorName) & "\"}");
      end;
      WebOutString("],");
      WebOutString("\"images\": [");
      i = 1;
      cnt2 = 0;
      while (ReadRecordLink(SIr,i,Attachr,RLr)) begin
        if (left(Attachr.FileName,6)!="thumb_") then begin
          if (cnt2>0) then begin
            WebOutString(",");
          end;
          WebOutString("{\"url\": \"/WebShowSMUShopItemImage.hal?smf=" & SIr.SMFCode & "&id=" & SIr.UUID & "&name=" & Attachr.FileName & "\",\"name\": \"" & Attachr.FileName & "\"}");
          cnt2 = cnt2 + 1;
        end;
        i = i + 1;
      end;
      WebOutString("],");
      WebOutString("""Text"":""");
      for (i=0;i<SizeTextCnt(SIr);i=i+200) begin
        tstr = FormatJSONString(StringFromText(SIr,i,200));
        WebOutString(StrReplace(tstr,chr(13),"\\n"));
      end;
      WebOutString("""");
      WebOutString("}");
      cnt = cnt + 1;
    end;
  end;
  WebOutString("]");

  return;
end;

procedure GetCompanyEmployees(record SMFVc SMFr)
begin
  Integer i;
  record RLinkVc RLr;
  record CUVc CUr;
  string 255 link;

  WebOutString("""employees"":[");
  i = 1;
  while (ReadRecordLink(SMFr,i,CUr,RLr)) begin
    if (i>1) then begin
      WebOutString(",");
    end;				
    FindEmployeeImage(SMFr,CUr,link);	
    WebOutString("{""Name"":""" & FormatJSONString(CUr.Name) & """,""Title"":""" & FormatJSONString(CUr.JobDesc) & """,""Image"":""" & link & """,""UUID"":""" & FormatJSONString(CUr.UUID) & """}");
    i = i + 1;
  end;
  WebOutString("],");

  return;
end;

global webpublic
procedure WebGetSMUDataForShopEditing()
begin
  record CUVc CUr;
  record SMFVc SMFr;
  record RLinkVc RLr;
  Longint pos,i,j;
  string 255 tstr,background,logo;
  record SMFSessionVc SSr;
  Boolean foundf;
  record NotepadVc Noter;

  WebOutString("{");
  CUr.Code = CurrentCust;
  if (ReadFirstMain(CUr,1,true)) then begin
    if (ReadRecordLink(CUr,1,SMFr,RLr) or FindSMURecord(CUr.Code,SMFr)) then begin
      foundf = true;
    end;
  end;

  if (!foundf) then begin
    SSr.UUID = StringToUUID(WebGetArg("s"));
    if (ReadFirstMain(SSr,1,true)) then begin
      SMFr.SMFCode = SSr.SMFCode;
      if (ReadFirstMain(SMFr,1,true)) then begin
        foundf = true;
      end;    
      queued.RemoveSMFSession(SSr);
    end;
  end;
  if (foundf) then begin
    WebOutString("""SMFCode"":""" & SMFr.SMFCode & """,");
    WebOutString("""SMFName"":""" & FormatJSONString(SMFr.SMFName) & """,");
    WebOutString("""ProdSpec"":""" & FormatJSONString(SMFr.ProdSpec) & """,");
    WebOutString("""Status"":" & SMFr.WebStatus & ",");
    WebOutString("""School"":""" & FormatJSONString(SMFr.SchoolName) & """,");
    WebOutString("""TwitterPage"":""" & FormatJSONString(SMFr.Twitter) & """,");
    WebOutString("""FacebookPage"":""" & FormatJSONString(SMFr.Facebook) & """,");
    WebOutString("""InstagramPage"":""" & FormatJSONString(SMFr.Instagram) & """,");
    WebOutString("""Youtube"":""" & FormatJSONString(SMFr.Youtube) & """,");
    WebOutString("""ShopUrl"":""" & FormatJSONString(GetSMFShopUrl(SMFr)) & """,");
    WebOutString("""ExtWebPage"":""" & FormatJSONString(SMFr.ExtWebPage) & """,");
    GetCompanyBackground(SMFr,background);
    GetCompanyLogo(SMFr,logo)
    WebOutString("""Background"":""" & FormatJSONString(background) & """,");
    WebOutString("""Logo"":""" & FormatJSONString(logo) & """,");
    WebOutString("""ContactEmail"":""" & FormatJSONString(SMFr.ContactEmail) & """,");
    WebOutString("""PhoneNo"":""" & FormatJSONString(SMFr.PhoneNo) & """,");
    WebOutString("""Text"":""");
    for (i=0;i<SizeTextCnt(SMFr);i=i+200) begin
      tstr = FormatJSONString(StringFromText(SMFr,i,200));
      WebOutString(StrReplace(tstr,chr(13),"\\n"));
    end;
    WebOutString(""",");
    WebOutString("""Shipping"":""");
    if (FindNoteWithTag(SMFr,"Shipping",Noter)) then begin
      for (i=0;i<SizeTextCnt(Noter);i=i+200) begin
        tstr = FormatJSONString(StringFromText(Noter,i,200));
        WebOutString(StrReplace(tstr,chr(13),"\\n"));
      end;
    end;
    WebOutString(""",");
    GetCompanyEmployees(SMFr);
    GetItemList(SMFr.SMFCode);

  end;
  WebOutString("}");
  

  return;
end;

function string 255 GetUUIDList(array string arrUUID)
begin
  Integer i;
  string 255 res;
  
  for (i=0;i<arrUUID.length;i=i+1) begin
    if (nonblank(res)) then begin
      res = res & ",";
    end;
    res = res & arrUUID[i];
  end;

  res = "\"" & res & "\"";

  GetUUIDList = res;
  return;
end;

updating procedure RemoveJALFile(string smfcode,Integer type)
begin
  record JALFileVc JFr;

  if (FindJALFile(smfcode,type,JFr)) then begin
    RecordRemove(JFr);
  end;

  return;
end;

updating procedure RemoveSMFItems(string smfcode,string uuidlist)
begin
  Longint pos;
  string 255 tstr;
  record SMFItemVc SIr;
  
  while (GetNextSubString(uuidlist,pos,",",tstr)) begin
    SIr.UUID = StringToUUID(tstr);
    if (ReadFirstMain(SIr,1,true)) then begin
      if (SIr.SMFCode==smfcode) then begin
        RecordRemove(SIr);
      end;
    end;
  end;

  return;
end;

updating procedure RemoveSMFItemImages(string smfcode,string uuidlist)
begin
  Longint pos,pos2;
  string 255 tstr,tuuid,fn,fn2;
  record SMFItemVc SIr;
  record Attach2Vc Attachr;
  record RLinkVc RLr;
  Integer i;
  
  while (GetNextSubString(uuidlist,pos,",",tstr)) begin
    pos2 = -1;
    GetNextSubstring(tstr,pos2,"|",tuuid);
    GetNextSubstring(tstr,pos2,"|",fn);
    fn2 = "thumb_" & fn;
    SIr.UUID = StringToUUID(tuuid);
    if (ReadFirstMain(SIr,1,true)) then begin
      if (SIr.SMFCode==smfcode) then begin
        i = 1;
        while (ReadRecordLink(SIr,i,Attachr,RLr)) begin
          if (Attachr.FileName==fn or Attachr.FileName==fn2) then begin
            RecordRemove(Attachr);
          end else begin
            i = i + 1;
          end;
        end;
      end;
    end;
  end;

  return;
end;

updating procedure RemoveSMFEmpImages(string smfcode,string uuidlist)
begin
  Longint pos,pos2;
  string 255 tstr;
  record Attach2Vc Attachr;
  record RLinkVc RLr;
  Integer i;
  record SMFVc SMFr;
  record CUVc CUr;
  
  while (GetNextSubString(uuidlist,pos,",",tstr)) begin
    pos2 = -1;
    CUr.UUID = StringToUUID(tstr);
    if (ReadFirstKey("UUID",CUr,1,true)) then begin
      if (ReadRecordLink(CUr,1,SMFr,RLr)) begin
        if (SMFr.SMFCode==smfcode) then begin
          while (ReadRecordLink(CUr,1,Attachr,RLr)) begin
            RecordRemove(Attachr);
          end;
        end;
      end;
    end;
  end;

  return;
end;

function Boolean ValidateURL(string url)
begin
  Boolean res;
  string 255 tstr;
  
  tstr = UrlEncode(url);
  if (tstr!=url) then begin 
    res = false;
  end else begin
    res = true;
  end;

  ValidateURL = res;
  return;
end;

function Boolean ValidateShopUrl(record SMFVc SMFr,string url)
begin
  Boolean res;
  record SMFVc tSMFr;
  Boolean TrHs;
 
  if (SMFr.WebStatus!=0 and SMFr.WebStatus!=2) then begin
    res = false;
  end;

  if (ValidateURL(url)) then begin
    res = true;
    TrHs = true;
    tSMFr.WebShopUrl = url;
    while (LoopKey("WebShopUrl",tSMFr,1,TrHs)) begin
      if (tSMFr.WebShopUrl!=url) then begin
        TrHs = false;
      end else begin
        if (SMFr.SMFCode!=tSMFr.SMFCode) then begin
          res = false;
          TrHs = false;
        end;
      end;
    end;
  end;

  ValidateShopUrl = res;
  return;
end;

updating procedure SendSMUWebShopForApproval(record SMFVc SMFr)
begin
  record ReportMailBlock RMbl;
  record MailVc Mailr;
  row MailVc Mailrw;
  record MailSettingsBlock MSr;
  record LTxtVc LTxtr;
  Integer lcnt,i;

  BlockLoad(MSr);
  BlockLoad(RMbl);

  RecordNew(Mailr);
  LTxtr.Code = RMbl.WebShopText;
  if (ReadFirstMain(LTxtr,1,true)) then begin
    Mailr.Header = Ltxtr.Comment & " - " & SMFr.SMFName;
    lcnt = LineTextCnt(Ltxtr);
    for (i = 0; i < lcnt;i = i + 1) begin
      LineTextPut(Mailr,i,LineTextGet(Ltxtr,i));
    end;
    
    ClearRow(Mailr,Mailrw,0);
    Mailrw.RowTyp = 1;
    Mailrw.AddrCode = MSr.FromSystem;
    MatRowPut(Mailr,0,Mailrw);
    
    ClearRow(Mailr,Mailrw,1);
    Mailrw.RowTyp = kMailRowTypeTo;
    Mailrw.AddrCode = RMbl.WebShopMail;
    MatRowPut(Mailr,1,Mailrw);
    
    Mailr.SendFlag = 1;

    if (RecordStore(Mailr,true)) then begin 
      CreateRecordLink(Mailr,CurrentCompany,SMFr,CurrentCompany);
    end;
  end;

  return;
end;

procedure ReadColors(var record SMFItemVc SIr,JSON js,string root)
begin
  Integer i,rwcnt;
  row SMFItemVc SIrw;
  
  rwcnt = MatRowCnt(SIr);
  for (i=rwcnt-1;i>=0;i=i-1) begin
    MatRowDelete(SIr,i);
  end;

  i = 0;
  while (JSONNodeExists(js,root & "Colors/[" & i & "]")) begin
    ClearRow(SIr,SIrw,1);
    SIrw.ColorCode = JSONGet(js,root & "Colors/[" & i & "]/Code");
    SIrw.ColorName = JSONGet(js,root & "Colors/[" & i & "]/Name");
    MatRowPut(SIr,i,SIrw);
    i = i + 1;
  end;

  return;
end;

global webpublic
updating procedure WebStoreSMUDataForShop()
begin
  record CUVc CUr;
  record SMFVc SMFr,oldSMFr;
  record RLinkVc RLr;
  record SMFItemVc SIr,oldSIr;
  string 255 root,uuidstr,uuidlist,tstr;
  JSON js;
  Integer i;
  Boolean updatef;
  array string 255 arrUUID;
  Integer errtype;
  area a;
  record NotepadVc Noter,oldNoter;

  CUr.Code = CurrentCust;
  if (ReadFirstMain(CUr,1,true)) then begin
    if (ReadRecordLink(CUr,1,SMFr,RLr) or FindSMURecord(CUr.Code,SMFr)) begin
      RecordCopy(oldSMFr,SMFr);
      WebGetRawPostData(a);
      js = ParseJSONArea(a);
      SMFr.Twitter = UnFormatJSONString(JSONGet(js,"Twitter"));
      SMFr.Facebook = UnFormatJSONString(JSONGet(js,"Facebook"));
      SMFr.Instagram = UnFormatJSONString(JSONGet(js,"Instagram"));
      SMFr.ExtWebPage = UnFormatJSONString(JSONGet(js,"ExtWebPage"));
      SMFr.Youtube = UnFormatJSONString(JSONGet(js,"Youtube"));
      SMFr.ContactEmail = UnFormatJSONString(JSONGet(js,"ContactEmail"));
      SMFr.PhoneNo = UnFormatJSONString(JSONGet(js,"PhoneNo"));
      SMFr.WebShopUrl = UnFormatJSONString(JSONGet(js,"ShopUrl"));
      if (JSONGet(js,"SendForApproval")=="1") then begin
        SMFr.WebStatus = 1;
      end;
      if (ValidateShopUrl(SMFr,SMFr.WebShopUrl)) then begin
        tstr = UnFormatJSONText(RemoveEndingLineBreaks(JSONGet(js,"Text")));
        SetTextField(SMFr,tstr);
        if (RecordUpdate(oldSMFr,SMFr,true)==0) then begin
          tstr = UnFormatJSONString(RemoveEndingLineBreaks(JSONGet(js,"Shipping")));
          if (FindNoteWithTag(SMFr,"Shipping",Noter)) then begin//Noter.Classification
            RecordCopy(oldNoter,Noter);
            SetTextField(Noter,tstr);
            RecordUpdate(oldNoter,Noter,true);
          end else begin
            RecordNew(Noter);
            Noter.SerNr = NextSerNr("NotepadVc",CurrentDate,-1,false,"");
            SetTextField(Noter,tstr);
            Noter.Classification = "Shipping";
            if (RecordInsert(Noter,true)) then begin
              CreateRecordLink(SMFr,CurrentCompany,Noter,CUrrentCompany);
            end;
          end;

          i = 0;
          root = "items/";
          while (JSONNodeExists(js,root & "[" & i  & "]")) begin
            updatef = false;
            uuidstr = JSONGet(js,root & "[" & i & "]/uuid");
            if (nonblank(uuidstr)) then begin
              SIr.UUID = StringToUUID(uuidstr);
              if (ReadFirstMain(SIr,1,true)) then begin
                if (SMFr.SMFCode==SIr.SMFCode) then begin
                  RecordCopy(oldSIr,SIr);
                  updatef = true;
                end;
              end;
            end;
            if (!updatef) then begin
              RecordNew(SIr);
              SIr.UUID = MakeUUID;
              SIr.SMFCode = SMFr.SMFCode;
              SIr.ActiveFlag = 1;
              SIr.TransDate = CurrentDate;
            end;
            SIr.Name = JSONGet(js,root & "[" & i & "]/Name");
            SIr.ShortDesc = JSONGet(js,root & "[" & i & "]/Short");
            tstr = UnFormatJSONText(RemoveEndingLineBreaks(JSONGet(js,root & "[" & i & "]/Text")));
            SetTextField(SIr,tstr);
            SIr.Price = StringToVal(JSONGet(js,root & "[" & i & "]/Price"),M4Val);
            SIr.SizeList = JSONGet(js,root & "[" & i & "]/SizeList");
            SIr.NotInStock = StringToInt(JSONGet(js,root & "[" & i & "]/NotInStock"));
            if (nonblank(JSONGet(js,root & "[" & i & "]/NewPrice"))) then begin
              SIr.NewPrice = StringToVal(JSONGet(js,root & "[" & i & "]/NewPrice"),M4Val);
            end;
            ReadColors(SIr,js,root & "[" & i & "]/");
            if (updatef) then begin
              RecordUpdate(oldSIr,SIr,true);
            end else begin
              RecordStore(SIr,true);
            end;   
            arrUUID[arrUUID.length] = SIr.UUID;
            i = i + 1;
          end;
        end;
        if (nonblank(JSONGet(js,"RemoveItems"))) then begin
          RemoveSMFItems(SMFr.SMFCode,JSONGet(js,"RemoveItems"));
        end;
        if (nonblank(JSONGet(js,"ClearImages"))) then begin
          RemoveSMFItemImages(SMFr.SMFCode,JSONGet(js,"ClearImages"));
        end;
        if (nonblank(JSONGet(js,"ClearEmpImages"))) then begin
          RemoveSMFEmpImages(SMFr.SMFCode,JSONGet(js,"ClearEmpImages"));
        end;
        if (JSONGet(js,"RemoveLogo")=="1") then begin
          RemoveJALFile(SMFr.SMFCode,0);
        end;
        if (JSONGet(js,"RemoveBackground")=="1") then begin
          RemoveJALFile(SMFr.SMFCode,1);
        end;
        if (JSONGet(js,"SendForApproval")=="1") then begin
          SendSMUWebShopForApproval(SMFr);
        end;
      end else begin
        errtype = 2;
      end;
    end;
  end;

lend:;
  if (errtype>0) then begin
    WebOutString("{\"errtype\":\"" & errtype & "\"}");  
  end else begin
    uuidlist = GetUUIDList(arrUUID);
    WebOutString("{\"ok\":\"\",\"imglist\":" & uuidlist & "}");
  end;
  
  return;
end;

global
updating procedure FinishSMUFileUpload(string sess,string filename,string id,string tag,Integer type)
begin
  string 255 fn,nfn;
  area filearea;
  Integer i;
  record JALFileVc JFr;

  fn = "tmp/" & tag & "/" & sess;
  if (FileExists(fn)) then begin
    nfn = "tmp/" & tag & "/" & Trim(filename);
    RenameFile(fn,nfn);
    RecordNew(JFr);
    JFr.SMFCode = id;
    JFr.Type = type;
    JFr.UUID = MakeUUID;
    if (RecordStore(JFr,true)) then begin
      RecordLinkFile(nfn,0,JFr,CurrentCompany);    
    end;
    Delete_File(nfn);
  end;

  return;
end;


global
updating procedure FinishSMUFileUpload2(string sess,string filename,string id,string tag,Integer type)
begin
  string 255 fn,nfn;
  area filearea;
  Integer i;
  record JALFileVc JFr;

  fn = "tmp/" & tag & "/" & sess;
  if (FileExists(fn)) then begin
    nfn = "tmp/" & tag & "/" & Trim(filename);
    RenameFile(fn,nfn);
    JFr.UUID = StringToUUID(id);
    if (ReadFirstmain(JFr,1,true)) then begin
      RecordLinkFile(nfn,0,JFr,CurrentCompany);    
    end;
    Delete_File(nfn);
  end;

  return;
end;

global webpublic
updating procedure WebRemoveSMUProduct()
begin
  record SMFItemVc SIr;
  record CUVc CUr;
  record SMFVc SMFr;
  record RLinkVc RLr;
  
  SIr.UUID = StringToUUID(WebGetArg("uuid"));
  if (ReadFirstMain(SIr,1,true)) then begin
    CUr.Code = CurrentCust;
    if (ReadFirstMain(CUr,1,true)) then begin
      if (ReadRecordLink(CUr,1,SMFr,RLr) or FindSMURecord(CUr.Code,SMFr)) then begin
        if (SMFr.SMFCode==SIr.SMFCode) then begin
          RecordRemove(SIr);
        end;
      end;
    end;
  end;

  return;
end;

procedure ReadFilterData(var Integer spos,var Integer epos,var string district,var string industry,var string filter,var Longint eventnr)
begin
  Integer page,perpage;
  
  page = StringToInt(WebGetArg("page"))+1;
  perpage = StringToInt(WebGetArg("perpage"));
  eventnr = StringToLongInt(WebGetArg("eventnr"));

  spos = page*perpage-perpage;
  epos = spos + perpage;

  district = WebGetArg("district");
  industry = WebGetArg("industry");
  filter = WebGetArg("mainsearch");

  return;
end;

function Boolean FilterSMURecord(record SMFVc SMFr,string district,string industry,string filter,Longint eventnr)
begin
  Boolean res;
  string 255 tmp;
  Longint pos;
  record JALEventEntryVc JEEr;
  
  res = true;
  if (eventnr>0) then begin
    FindCustEntry(eventnr,0,SMFr.SMFCode,JEEr)
    if (JEEr.StatusFlag!=1) then begin
      res = false;
      goto LOut;      
    end;
  end;
  if (nonblank(industry)) then begin    
    res = false;
    while (GetNextSubString(industry,pos,"|",tmp)) begin
      if (SMFr.ProdSpec==tmp) then begin
        res = true;
        goto lnext;
      end;
    end;
    if (res==false) then begin
      goto LOut;
    end;
  end;
lnext:;
  if (nonblank(district)) then begin
    res = false;
    pos = -1;
    while (GetNextSubString(district,pos,"|",tmp)) begin
      if (SMFr.District==tmp) then begin
        res = true;
        goto LOut;
      end;
    end;
    if (res==false) then begin
      goto LOut;
    end;
  end;
  if (nonblank(filter)) then begin
    if (InString(SMFr.SMFName,filter)<=0) then begin
      res = false;
      goto LOut;
    end;
  end;

LOut:;
  FilterSMURecord = res;
end;

global webpublic
procedure WebLoadSMUList()
begin
  record SMFVc SMFr;
  Boolean TrHs;
  Integer i,cnt,spos,epos;
  string 255 district,industry,filter,logo;
  Longint eventnr;

  ReadFilterData(spos,epos,district,industry,filter,eventnr);

  WebOutString("{\"list\":[");
  TrHs = true;
  SMFr.WebApprovedDate = CurrentDate;
  SMFr.WebStatus = 2;
  while (LoopBackKey("WebStatus",SMFr,2,TrHs)) begin
    if (SMFr.WebStatus!=2) then begin
      TrHs = false;
    end else begin
      if (FilterSMURecord(SMFr,district,industry,filter,eventnr)) then begin
        if (i>=spos and i<=epos) then begin
          if (cnt>0) then begin
            WebOutString(",");
          end;
          GetCompanyLogo(SMFr,logo);
          WebOutString("{""smfname"":""" & FormatJSONString(SMFr.SMFName) & """,");
          WebOutString("""prodspec"":""" & FormatJSONString(SMFr.ProdSpec) & """,");
          WebOutString("""school"":""" & FormatJSONString(SMFr.SchoolName) & """,");
          WebOutString("""district"":""" & FormatJSONString(SMFr.District) & """,");
          WebOutString("""shopurl"":""" & FormatJSONString("/katalogs/" & GetSMFShopUrl(SMFr)) & """,");
          WebOutString("""logo"":""" & FormatJSONString(logo) & """}");
          cnt = cnt + 1;
        end;
        i = i + 1;
      end;
    end;
  end;
  WebOutString("],\"totalitems\":" & i & "}");
  return;
end;


global webpublic
procedure WebLoadSMUProductList()
begin
  record SMFVc SMFr;
  Boolean TrHs,TrHs2;
  Integer i,cnt,spos,epos,num;
  record SMFItemVc SIr;
  string 255 background;
  string 255 district,industry,filter,likeditems,basketitems,imgname,itemtag,itemtagcolor;
  array record SMFItemVc arrSIr;
  Longint eventnr;
  record JALClassBlock JCbl;
  val price;

  BlockLoad(JCbl);
  ReadFilterData(spos,epos,district,industry,filter,eventnr);

  WebOutString("{\"list\":[");
  TrHs = true;
  SMFr.WebApprovedDate = CurrentDate;
  SMFr.WebStatus = 2;
  likeditems = GetLikedItems;
  basketitems = GetBasketItems;
  while (LoopBackKey("WebStatus",SMFr,2,TrHs)) begin
    if (SMFr.WebStatus!=2) then begin
      TrHs = false;
    end else begin
      if (FilterSMURecord(SMFr,district,industry,"",eventnr)) then begin
        RecordClear(SIr);
        ResetLoop(SIr);
        SIr.SMFCode = SMFr.SMFCode;
        TrHs2 = true;
        while (LoopKey("SMFCode",SIr,1,TrHs2)) begin
          if (SIr.SMFCode!=SMFr.SMFCode) then begin
            TrHs2 = false;
          end else begin
            if (blank(filter) or InString(SIr.Name,filter)>0) then begin

              FindItemImage(SIr,background,imgname,true);
              SIr.DummyStr = background;
              SIr.ShopUrl = "/katalogs/" & GetSMFShopUrl(SMFr) & "/" & LowerCase(SIr.UUID);
              SIr.District = SMFr.District;
              SIr.SMFName = SMFr.SMFName;
              if (blank(SIr.TransDate)) then begin
                SIr.SortString = "19700101";
              end else begin
                SIr.SortString = DateToString(SIr.TransDate,"YYYYMMDD");
              end;
              arrSIr[arrSIr.length] = SIr;
            end;
          end;
        end;

      end;
    end;
  end;

  SortRecordArray(arrSIr,"SortString");
  if (epos>arrSIr.length) then begin
    epos = arrSIr.length;
  end;
  for (i=spos;i<epos;i=i+1) begin
    num = (arrSIr.length-1)-i;//
    if (cnt>0) then begin
      WebOutString(",");
    end;
    SIr = arrSIr[num];
    price = GetSMUItemPrice(JCbl,SIr);
    GetItemTag(JCbl,SIr,itemtag,itemtagcolor);
    WebOutString("{""smfname"":""" & FormatJSONString(SIr.SMFName) & """,");
    WebOutString("""itemname"":""" & FormatJSONString(SIr.Name) & """,");
    WebOutString("""uuid"":""" & FormatJSONString(SIr.UUID) & """,");
    WebOutString("""price"":""" & FormatJSONString(SIr.Price) & """,");
    WebOutString("""newprice"":""" & FormatJSONString(price) & """,");
    WebOutString("""district"":""" & FormatJSONString(SIr.District) & """,");
    WebOutString("""shopurl"":""" & FormatJSONString(SIr.ShopUrl) & """,");
    WebOutString("""liked"":""" & IsItemLiked(likeditems,SIr.UUID) & """,");
    WebOutString("""addedtobasket"":""" & IsItemInBasket(basketitems,SIr.UUID) & """,");
    WebOutString("""tag"":""" & itemtag & """,");
    WebOutString("""tagcolor"":""" & itemtagcolor & """,");
    WebOutString("""logo"":""" & FormatJSONString(SIr.DummyStr) & """}");
    cnt = cnt + 1;
    
  end;


  WebOutString("],\"totalitems\":" & arrSIr.length & "}");

  return;
end;

global webpublic
procedure WebUpdateSMUProductLike()
begin
  string 255 tuuid,items,nitems,tmp,sessstr,item,color,size;
  Longint pos,pos2;
  Boolean basketf,foundf;

  tuuid = WebGetArg("uuid");
  basketf = WebGetArg("type")=="basket";
  color = WebGetArg("color");
  if (nonblank(color)) then begin
    color = "#" & color;
  end;
  size = WebGetArg("size");
  if (basketf) then begin
    items = GetBasketItems;
    sessstr = "basket_items";
  end else begin
    items = GetLikedItems;
    sessstr = "liked_items";
  end;
  while (GetNextSubString(items,pos,",",tmp)) begin
    pos2 = -1;
    GetNextSubString(tmp,pos2,":",item);
    if (item==tuuid) then begin
      foundf = true;
      goto lcontinue;
    end;
  end;
  
lcontinue:;
  if (foundf) then begin
    pos = -1;
    while (GetNextSubString(items,pos,",",tmp)) begin
      pos2 = -1;
      GetNextSubString(tmp,pos2,":",item);
      if (item!=tuuid) then begin
        if (nonblank(nitems)) then begin
          nitems = nitems & ",";
        end;
        nitems = nitems & tmp;
      end;
    end;
  end else begin
    nitems = items;
    if (nonblank(nitems)) then begin
      nitems = nitems & ",";
    end;
    nitems = nitems & tuuid;
    if (basketf) then begin
      nitems = nitems & ":1:" & size & ":" & color;
    end;
  end;

  if (nitems!=items) then begin
    PutSessionString(sessstr,nitems);
    SetDetailedCookie(sessstr,nitems,"items","","/",15552000); //180days
  end;

  return;
end;

global webpublic
procedure WebSetBasketView()
begin
  string 255 view;

  view = WebGetArg("view");
  PutSessionString("basket_view",view);

  return;
end;

global webpublic
procedure WebGetBasketQty()
begin
  string 255 tuuid,items,nitems,tmp,qty,item;
  Longint pos,pos2;
  Integer res,fav;

  items = GetLikedItems;
  while (GetNextSubString(items,pos,",",tmp)) begin
    fav = fav + 1;
  end;
  pos = -1;
  items = GetBasketItems;
  while (GetNextSubString(items,pos,",",tmp)) begin
    pos2 = -1;
    GetNextSubString(tmp,pos2,":",item);
    GetNextSubString(tmp,pos2,":",qty);
    res = res + StringToInt(qty);
  end;

  WebOutString("{\"basket\":" & res & ",\"fav\":" & fav & "}");
  return;
end;

global webpublic
procedure WebUpdateSMUBasketQty()
begin
  string 255 tuuid,items,nitems,tmp,qty,item,size,color;
  Longint pos,pos2;
  Integer nqty,tdiff;

  tuuid = WebGetArg("uuid");
  tdiff = StringToInt(WebGetArg("diff"));

  pos = -1;
  items = GetBasketItems;
  while (GetNextSubString(items,pos,",",tmp)) begin
    pos2 = -1;
    GetNextSubString(tmp,pos2,":",item);
    GetNextSubString(tmp,pos2,":",qty);
    GetNextSubString(tmp,pos2,":",size);
    GetNextSubString(tmp,pos2,":",color);
    nqty = StringToInt(qty);
    if (item==tuuid) then begin
      nqty = nqty + tdiff;
    end;
    if (nqty>0) then begin
      if (nonblank(nitems)) then begin
        nitems = nitems & ",";
      end;
      nitems = nitems & item & ":" & nqty & ":" & size & ":" & color;
    end;
  end;

  PutSessionString("basket_items",nitems);
  SetDetailedCookie("basket_items",nitems,"items","","/",15552000); //180days

  return;
end;

global
updating procedure FinishSMUItemFileUpload(string sess,string filename,string id,string tag)
begin
  string 255 fn,nfn;
  area filearea;
  Integer i;
  record SMFItemVc SIr;
  record CUVc CUr;
  record SMFVc SMFr;
  record RLinkVc RLr;

  fn = "tmp/" & tag & "/" & sess;
  if (FileExists(fn)) then begin
    nfn = "tmp/" & tag & "/" & Trim(filename);
    RenameFile(fn,nfn);
    SIr.UUID = StringToUUID(id);
    if (ReadFirstMain(SIr,1,true)) then begin
      CUr.Code = CurrentCust;
      if (ReadFirstMain(CUr,1,true)) then begin
        if (ReadRecordLink(CUr,1,SMFr,RLr) or FindSMURecord(CUr.Code,SMFr)) then begin 
          if (SMFr.SMFCode==SIr.SMFCode) then begin
            RecordLinkFile(nfn,0,SIr,CurrentCompany);    
          end;
        end;
      end;
    end;
    Delete_File(nfn);
  end;

  return;
end;

global
updating procedure FinishSMUEmployeeFileUpload(string sess,string filename,string id,string tag)
begin
  string 255 fn,nfn;
  area filearea;
  Integer i;
  record CUVc CUr,tCUr;
  record SMFVc SMFr,tSMFr;
  record RLinkVc RLr;

  fn = "tmp/" & tag & "/" & sess;
  if (FileExists(fn)) then begin
    nfn = "tmp/" & tag & "/" & Trim(filename);
    RenameFile(fn,nfn);
    tCUr.UUID = StringToUUID(id);
    if (ReadFirstKey("UUID",tCUr,1,true)) then begin
      CUr.Code = CurrentCust;
      if (ReadFirstMain(CUr,1,true)) then begin
        if (ReadRecordLink(CUr,1,SMFr,RLr) or FindSMURecord(CUr.Code,SMFr)) then begin 
          if (ReadRecordLink(tCUr,1,tSMFr,RLr)) then begin
            if (SMFr.SMFCode==tSMFr.SMFCode) then begin
              RecordLinkFile(nfn,0,tCUr,CurrentCompany);
            end;
          end;
        end;
      end;
    end;
    Delete_File(nfn);
  end;

  return;
end;

updating procedure StoreAndUpdateMail(record MailVc Mailr,record LTxtVc LTxtr,record RcVc RepSpec,string table)
begin
  string 255 id;
  record Attach2Vc Attachr;
  record RLinkVc RLr;
  area htmlarea,html1,html2,reshtml;
  record LTxtVc LTxt2r;
  Longint pos;
  record MailVc oldMailr;

  Mailr.SerNr = NextSerNr("MailVc",CurrentDate,-1,false,"");
  if (RecordInsert(Mailr,true)) then begin
    if (ReadFirstMain(Mailr,1,true)) then begin
      if (ReadRecordLink(Mailr,1,Attachr,RLr)) begin
        //RecordRemove(RLr);
      end;    
      //CopyRecordLinks(LTxtr,Mailr);
      if (Mailr.HtmlFlag==1) then begin
        if (ReadRecordLink(LTxtr,1,Attachr,RLr)) begin
          AddAttachFileToArea(Attachr,htmlarea,false);
          id = "<!--tablerows-->";
          pos = FindStringInArea(id,htmlarea);
          if (pos>0) then begin
            GetAreaFromArea(htmlarea,0,pos,html1);
            GetAreaFromArea(htmlarea,pos+len(id),GetAreaLength(htmlarea)-pos-len(id),html2);
            AddAreaToArea(html1,reshtml);
            AddTextToArea(table,reshtml);
            AddAreaToArea(html2,reshtml);
            AddAreaToTextField(reshtml,LTxt2r);
            AddToHtmlRecord(Ltxt2r,true,Mailr,true,true);
            ParseHtmlField(Mailr,RepSpec,"BasketMailVcReplaceToken");
            RecordCopy(oldMailr,Mailr);
            Mailr.SendFlag = 1;
            RecordUpdate(oldMailr,Mailr,true);

          end;
        end;
      end;
    end;
  end;

  return;
end;

updating procedure SendSingleSMUBasketMail(record ORVc ORr,record SMFVc SMFr,record RcVc RepSpec)
begin
  record MailSettingsBlock MSr;
  record MailVc Mailr;
  record JALOrderSetBlock JOb;
  row ORVc ORrw;
  Integer i,rwcnt;
  record LTxtVc LTxtr;
  row MailVc Mailrw;
  string 255 table,style;

//CustomerBasketText
  BlockLoad(JOb);
  LTxtr.Code = JOb.SMUBasketText;
  if (ReadFirstMain(LTxtr,1,true)) then begin
    RecordNew(Mailr);
    Mailr.Header = LTxtr.Comment;    
    BlockLoad(MSr);
    ClearRow(Mailr,Mailrw,1);
    Mailrw.RowTyp = kMailRowTypeFrom;
    Mailrw.AddrCode = JOb.MailSender;
    MatRowPut(Mailr,0,Mailrw);
    ClearRow(Mailr,Mailrw,1);
    Mailrw.RowTyp = kMailRowTypeTo;
    Mailrw.AddrCode = SMFr.ContactEmail;
    MatRowPut(Mailr,1,Mailrw);

    Mailr.HtmlFlag = 1;
    style = "border:solid windowtext 1.0pt;mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt";
    table = "";
    rwcnt = MatRowCnt(ORr);
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(ORr,i,ORrw);
      table = table & "<tr><td style='" & style & "'>" & ORrw.Spec & "</td><td style='" & style & "'>" & ORrw.Quant & "</td><td style='" & style & "'>" & ORrw.Price & "</td></tr>";
    end;

    StoreAndUpdateMail(Mailr,LTxtr,RepSpec,table);

  end;    

  return;
end;

updating procedure SendBasketMailToCustomer(record ORVc ORr,record RcVc RepSpec)
begin
  record MailSettingsBlock MSr;
  record MailVc Mailr;
  record SMFVc SMFr;
  record JALOrderSetBlock JOb;
  row ORVc ORrw;
  Integer i,rwcnt;
  record LTxtVc LTxtr;
  row MailVc Mailrw;
  string 255 table,style;

  BlockLoad(MSr);
//CustomerBasketText
  BlockLoad(JOb);
  LTxtr.Code = JOb.CustomerBasketText;
  if (ReadFirstMain(LTxtr,1,true)) then begin
    RecordNew(Mailr);
    Mailr.Header = LTxtr.Comment;    
    ClearRow(Mailr,Mailrw,1);
    Mailrw.RowTyp = kMailRowTypeFrom;
    Mailrw.AddrCode = JOb.MailSender;
    MatRowPut(Mailr,0,Mailrw);
    ClearRow(Mailr,Mailrw,1);
    Mailrw.RowTyp = kMailRowTypeTo;
    Mailrw.AddrCode = RepSpec.f2;
    MatRowPut(Mailr,1,Mailrw);

    Mailr.HtmlFlag = 1;

    style = "border:solid windowtext 1.0pt;mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt";
    table = "";
    rwcnt = MatRowCnt(ORr);
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(ORr,i,ORrw);
      SMFr.SMFCode = ORrw.SMFCode;
      if (ReadFirstMain(SMFr,1,true)) then begin
        table = table & "<tr><td style='" & style & "'>" & SMFr.SMFName & "</td><td style='" & style & "'>" & ORrw.Spec & "</td><td style='" & style & "'>" & ORrw.Quant & "</td><td style='" & style & "'>" & ORrw.Price & "</td></tr>";
      end;
    end;

    StoreAndUpdateMail(Mailr,LTxtr,RepSpec,table);

  end;    

  return;
end;

procedure AddItemToOR(record JALClassBlock JCb,record JALOrderSetBlock JOb,var record ORVc ORr,record SMFItemVc SIr,val qty,string size,string color,string rowsmfcode)
begin
  row ORVc ORrw;
  string 255 tstr,inwarning,warning;
  val res;
  val price;
  Integer num;
  Boolean chsum;

  tstr = SIr.Name;
  if (nonblank(size)) then begin
    tstr = tstr & ", " & ToolWebNGTranslateText2(89245) & " " & GetColorName(SIr,color);
  end;
  if (nonblank(color)) then begin
    tstr = tstr & ", " & ToolWebNGTranslateText2(89246) & " " & size;
  end;
  price = GetSMUItemPrice(JCb,SIr);
  
  ClearRow(ORr,ORrw,1);
  ORrw.ArtCode = JOb.DefArtCode;
  num = MatRowCnt(ORr);
  MatRowPut(ORr,num,ORrw);
  ORVc_PasteArtCode(ORr,num,inwarning,warning,false);
  MatRowGet(ORr,num,ORrw);
  ORrw.SMFItem = SIr.UUID;
  ORrw.Spec = tstr;
  ORrw.Quant = qty;
  ORrw.Price = price; 
  ORrw.SMFCode = rowsmfcode;
  MatRowPut(ORr,num,ORrw);
  ORVc_PastePrice(ORr,num,chsum);
  ORDchsum(ORr,num);
  ORSumup(ORr);

  return;
end;

procedure AddItemToORArray(record JALClassBlock JCb,record JALOrderSetBlock JOb,var array record ORVc arrORr,var record ORVc mainORr,record SMFItemVc SIr,val qty,string size,string color)
begin
  record ORVc ORr;
  row ORVc ORrw;
  Boolean foundf;
  Integer num,i;

  for (i=0;i<arrORr.length;i=i+1) begin
    ORr = arrORr[i];
    if (ORr.SMFCodeHeader==SIr.SMFCode) then begin
      foundf = true;
      AddItemToOR(JCb,JOb,ORr,SIr,qty,size,color,"");
      num = i;
      i = arrORr.length;
    end;
  end;

  if (!foundf) then begin
    RecordNew(ORr);
    ORr.SMFCodeHeader = SIr.SMFCode;
    ORr.InclVAT = 1;
    ORr.OrderClass = JOb.NewOrder;
    AddItemToOR(JCb,JOb,ORr,SIr,qty,size,color,"");
    num = arrORr.length;
  end;
  arrORr[num] = ORr;

  AddItemToOR(JCb,JOb,mainORr,SIr,qty,size,color,SIr.SMFCode);


  return;
end;

global webpublic
updating procedure WebSubmitSMUBasket()
begin
  Longint pos,pos2;
  string 255 items,tmp,item,qty,size,color;
  val nqty;
  record SMFItemVc SIr;
  record ORVc ORr,mainORr;
  array record ORVc arrORr;
  record RcVc RepSpec;
  Integer i;
  record SMFVc SMFr;
  record NotePadVc Noter;
  record JALClassBlock JCb;
  record JALOrderSetBlock JOb;
  
  BlockLoad(JCb);
  BlockLoad(JOb);
  pos = -1;
  items = GetBasketItems;
  while (GetNextSubString(items,pos,",",tmp)) begin
    pos2 = -1;
    GetNextSubString(tmp,pos2,":",item);
    GetNextSubString(tmp,pos2,":",qty);
    GetNextSubString(tmp,pos2,":",size);
    GetNextSubString(tmp,pos2,":",color);
    nqty = StringToInt(qty);
    SIr.UUID = StringToUUID(item);
    if (ReadFirstMain(SIr,1,true)) then begin
      AddItemToORArray(JCb,JOb,arrORr,mainORr,SIr,nqty,size,color);
    end;
  end;

  RepSpec.f1 = WebGetArg("name");
  RepSpec.f2 = WebGetArg("email");
  RepSpec.f3 = WebGetArg("phone");
  RepSpec.f4 = WebGetArg("shipaddr");
  RepSpec.f5 = WebGetArg("Comment");

  for (i=0;i<arrORr.length;i=i+1) begin
    ORr = arrORr[i];
    SMFr.SMFCode = ORr.SMFCodeHeader;
    if (ReadFirstMain(SMFr,1,true)) then begin
      SendSingleSMUBasketMail(ORr,SMFr,RepSpec);
    end;
  end;
  SendBasketMailToCustomer(mainORr,RepSpec);

  for (i=0;i<arrORr.length;i=i+1) begin
    ORr = arrORr[i];
    ORr.Addr0 = RepSpec.f1;
    ORr.OrdDate = CurrentDate;
    ORr.PayDeal = JOb.DefPayTerm;
    //paste pay deal
    ORVc_PastePayDeal(ORr);
    ORr.SerNr = NextSerNr("ORVc",CurrentDate,-1,false,"");

    ORr.Addr1 = RepSpec.f4;
    ORr.Addr2 = RepSpec.f2;
    ORr.Addr3 = RepSpec.f3;
    if (RecordInsert(ORr,true)) then begin
      RecordNew(Noter);
      RecordClear(Noter);
      SetTextField(Noter,RepSpec.f5);
      Noter.SerNr = NextSerNr("NotepadVc",CurrentDate,-1,false,"");
      if (RecordStore(Noter,false)) then begin
        CreateRecordLink(ORr,CurrentCompany,Noter,CurrentCompany);  
      end;
    end;
  end;

  PutSessionString("basket_items","");
  SetDetailedCookie("basket_items","","items","","/",15552000); //180days

  return;
end;


global
function string 255 BasketMailVcReplaceToken(record MailVc Mailr,record RcVc RepSpec,string token)
begin
  string 255 res;

  switch (token) begin
    case "name":     res = RepSpec.f1;
    case "email":    res = RepSpec.f2;
    case "phone":    res = RepSpec.f3;
    case "shipaddr": res = RepSpec.f4;
    case "comment":  res = RepSpec.f5;

  end;

  BasketMailVcReplaceToken = res;
end;

function string 255 JALMessageField(record RcVc RepSpec,string token)
begin
  string 255 res;
  
  switch (token) begin
    case "ordernr": res = RepSpec.long1;
    case "messagelink": res = RepSpec.f1;
    case "smuname": res = RepSpec.f2;
    case "deldate": res = RepSpec.f3;
    case "reason": res = RepSpec.f4;
  end;

  JALMessageField = res;
  return;
end;

global
function string 255 JALMessageLTxtReplaceToken(record LTxtVc LTxtr,record RcVc RepSpec,string token)
begin
  JALMessageLTxtReplaceToken = JALMessageField(RepSpec,token);
end;

global
function string 255 JALMessageEMailQueVcReplaceToken(record MailVc Mailr,record RcVc RepSpec,string token)
begin
  JALMessageEMailQueVcReplaceToken = JALMessageField(RepSpec,token);
end;

/*
global webpublic
procedure WebGetItemImages()
begin
  record SMFItemVc SIr;
  record WebNGStructVc WSr;
  string 255 link,name;
  record WebNGPageVc WPr;
  record JALFileVc JFr;
  record Attach2Vc Attachr;
  record RLinkVc RLr;

  WSr.SerNr = 1051;
  if (ReadFirstMain(WSr,1,true)) then begin
    WPr.Code = WSr.WebPage;

    if (nonblank(WPr.Code)) then begin
      if (ReadFirstMain(WPr,1,true)) then begin end;
    end;
    ShowWebAppPageStart(WPr,"");
    WebOutString("<div class='test_data'></div>");
    while (LoopMain(JFr,1,true)) begin
      if (JFr.Type==0) then begin
        if (ReadRecordLink(JFr,1,Attachr,RLr)) then begin
          link = "/WebShowJALFile.hal?smf=" & JFr.SMFCode & "&id=" & JFr.UUID;

          WebOutString("<div class='test_item_wrap' link='" & link & "' uuid='" & JFr.UUID & "' smf='" & JFr.SMFCode & "' name='" & Attachr.FileName & "'></div>");
        end;
      end;
    end;
    ShowWebAppPageEnd(WPr);
  end;

  return;
end;
*/

