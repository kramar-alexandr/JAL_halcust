external inner procedure StripLeadingSpaces(var string);external inner procedure StripEndingSpaces(var string);//external function Boolean GetNextSchoolCode(var string);external inner procedure NextM4Number(string,var string);updating function boolean RunCheck(record SchoolVc SCr)begin  record SchoolVc SC2r;  boolean res;  boolean Trhs;    res = false;  Trhs = true;  SC2r.SchoolName = SCr.SchoolName;  if ReadFirstKey("SchoolName",SC2r,1,true) begin    TrHs = false;    SCr.SchoolCode = SC2r.SchoolCode;	  SCr.Approved = SC2r.Approved;    if RecordUpdate(SC2r,SCr,true)==0 then begin end;  end;  if Trhs then begin    res = true;  end;RunCheck = res;return;end;function boolean GetNextSchoolCode(var string tstr)begin  boolean res;  record SchoolVc SCr;  string 255 itemnr;    SCr.SchoolCode = "ZZZZZZZZZZZZZZZZZZZ";  if (ReadLastMain(SCr,1,false)) then begin    NextM4Number(SCr.SchoolCode,itemnr);    logtext(0,itemnr & ";" & tstr);    if (nonblank(itemnr)) then begin      tstr = itemnr;      res = true;    end;  end else begin    tstr = "001";    res = true;  end;  GetNextSchoolCode = res;  return;end;globalfunction string 4 GiveCode(var string code)begin  string 4 codeor;  codeor = code;  while len(codeor)<3 begin    codeor = "0" & codeor;  end;GiveCode = codeor;return;end;procedure GiveTrueReg(var string reg)begin  string 50 tstr;  integer i;  tstr = reg;  for (i = 0; i < len(reg); i = i + 1) begin    if (mid(reg,i,1) == ",") then begin	    tstr = left(reg,i);	  end;  end;  reg = tstr;  return;end;procedure TestForRegion(string tstr,var string disctr,var string reg)begin  integer i,rwcnt;  record JALDistrictBlock JALDistrictBlockr;  row JALDistrictBlock JALDistrictBlockrw;  string 50 ireg;  Boolean existsdistrict;  //stopalert(tstr);    BlockLoad(JALDistrictBlockr);  rwcnt = MatRowCnt(JALDistrictBlockr);  for (i=0;i<rwcnt;i=i+1) begin    MatRowGet(JALDistrictBlockr,i,JALDistrictBlockrw);    existsdistrict = (JALDistrictBlockrw.District==tstr);    if(existsdistrict==true) then begin      disctr = JALDistrictBlockrw.District;      reg = JALDistrictBlockrw.Region;      i = rwcnt;    end;  end;    return;end;procedure GetPhone(var string phone,var record SchoolVc SCr)begin  integer i,start,e;  boolean firstf;  firstf = true;  StripLeadingSpaces(phone);  StripEndingSpaces(phone);  phone = phone & " ";  start = 0;  for (i = 0; i < len(phone); i = i + 1) begin    if (mid(phone,i,1) == " " or mid(phone,i,1) == ",") then begin      e = i-start;      if e>0 then begin        if firstf then begin          SCr.Telephone = mid(phone,start,e);          firstf = false;        end else begin          LineTextPut(SCr,LineTextCnt(SCr),USetStr(32295) & ": " & mid(phone,start,e));        end;      end;      start = i + 1;	  end;  end;  return;end;  procedure GetEmail(var string mail,var record SchoolVc SCr)begin  integer i,start,e;  boolean firstf;  firstf = true;  StripLeadingSpaces(mail);  StripEndingSpaces(mail);  mail = mail & " ";  start = 0;  for (i = 0; i < len(mail); i = i + 1) begin    if (mid(mail,i,1) == " " or mid(mail,i,1) == ",") then begin	    e = i-start;      if e>0 then begin        if firstf then begin          SCr.Email = mid(mail,start,e);          firstf = false;        end else begin          LineTextPut(SCr,LineTextCnt(SCr)-1,USetStr(10839) & ": " & mid(mail,start,e));        end;        start = i + 1;      end;    end;  end;  return;end;function string 5 TestForLang(string tstr)begin  integer rwcnt,i;  record JALLangBlock JLr;  row JALLangBlock JLrw;  string 5 res;  res = "";  BlockLoad(JLr);  rwcnt = MatRowCnt(JLr);  for (i = 0; i < rwcnt; i = i + 1) begin    MatRowGet(JLr,i,JLrw);    if tstr == JLrw.Lang then begin	  res = JLrw.Code ;      i = rwcnt;    end;  end;  TestForLang = res;  return;end;updating procedure RemoveSchools()begin  record SchoolVc Schoolr;    while (LoopMain(Schoolr,1,true)) begin    RecordDelete(Schoolr);    StepBack(Schoolr);  end;  return;end;globalupdating procedure SchoolIn()begin  record SchoolVc SCr,SC2r;  string 255 tstr,ccode;  string 240 reg,district;  record SRBlock SRb;  BlockLoad(SRb);    //RemoveSchools;  while (TestEOF==false) begin	tstr = importfield;	//stopalert("ha ha" & tstr);    if (nonblank(tstr)) then begin      TestForRegion(tstr,district,reg);      if NextImportLine(true) then begin end;	    //stopalert("nakama rinda");    end else begin	    //stopalert("ir pilns ieraksts");      //tstr = importfield;      //stopalert("aa" & tstr);	    if (nonblank(district) and nonblank(reg)) then begin        RecordNew(SCr);        SCr.SchoolName = ImportField;        SCr.Address = importfield;        tstr = importfield;        GetEmail(tstr,SCr);        SCr.Region = reg;        SCr.District = district;        tstr = importfield;        //GetPhone(tstr,SCr);        tstr = importfield;        //SCr.Director = tstr & " " & importfield;        tstr = importfield;        //SCr.Lang = TestForLang(tstr);        //SCr.PupilCount = StringToLongint(importfield);        if (RunCheck(SCr)) then begin        //stopalert("ir jauns ieraksts parbaude");          tstr = "";          if GetNextSchoolCode(ccode) then begin            logtext(0,"S Code " & ccode);            SCr.SchoolCode = ccode;        // stopalert("ir kods");            if RecordImportStore(SCr,true) then begin end;          end;        end;      end else begin        reg = "";      end;      if NextImportLine(true) then begin end;    end;    logtext(0,"importing " & tstr);  end;return;end;	