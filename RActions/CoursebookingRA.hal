globalfunction LongInt CourseEventVcRecordCheck(record CourseEventVc CourseEventr,record CourseEventVc CourseEvent2r,LongInt stat,LongInt long4)BEGIN  LongInt res;  Integer insertmode;  record CourseEventVc locCourseEventr;  record CourseVc Courser;  record UserVc USr;  record ResTypeVc RTr;  record CUVc CUr;    record INVc INr;  row CourseEventVc Courserw;  Integer invby;  Boolean gentrans;  LongInt newnr,l;  record SRBlock SRRec;  string 20 guest;  record HotelBlock HotelSet;  Date curd;  Integer rownr,i,rwcnt;  row CourseEventVc CourseEventrw;  record ResVc Resr;  Integer participants,webparticipants;  webparticipants = 0;  curd = CurrentDate;  BlockLoad(SRRec);  BlockLoad(HotelSet);  res = 0;  insertmode = 1;  if (CourseEventr.SerNr<=0) then begin    CourseEventr.SerNr = NextSerNr("CourseEventVc",CourseEventr.CreatedDate,-1,false,"");  end;      if ((stat==insertmode) or (CourseEventr.SerNr!=CourseEvent2r.SerNr)) then begin    locCourseEventr.SerNr = CourseEventr.SerNr;    if (ReadFirstMain(locCourseEventr,1,true)) then begin      RecordCheckError(1115,CourseEventr.SerNr,-1,"SerNr");      res = -1;      goto LCourseEventVcRecordCheck;    end;  end;  /*  INr.Code = CourseEventr.ItemCode;  if (ReadFirstMain(INr,1,true)==false) then begin    RecordCheckError(1120,"",-1,"ItemCode");    res = -1;    goto LCourseEventVcRecordCheck;  end;  */  rwcnt = MatRowCnt(CourseEventr);  for(i=0;i<rwcnt;i=i+1) begin    MatRowGet(CourseEventr,i,CourseEventrw);    CUr.Code = CourseEventrw.CustCode;    if (not ReadFirstMain(CUr,1,true)) then begin      RecordCheckError(1703,"",i,"CustCode");      res = -1;      goto LCourseEventVcRecordCheck;    end;    if (nonblank(CourseEventrw.ItemCode)) then begin      INr.Code = CourseEventrw.ItemCode;      if (ReadFirstMain(INr,1,true)==false) then begin        RecordCheckError(1120,"",i,"ItemCode");        res = -1;        goto LCourseEventVcRecordCheck;      end;    end;  end;  /*  Resr.Code = CourseEventr.ConferenceLocation;  if (not ReadFirstMain(Resr,1,true)) then begin    RecordCheckError(32004,"",-1,"ConferenceLocation");    res = -1;    goto LCourseEventVcRecordCheck;      end;  if(blank(CourseEventr.SalesMan)) then begin    RecordCheckError(32005,"",-1,"SalesMan");    res = -1;    goto LCourseEventVcRecordCheck;      end;    */  if(blankdate(CourseEventr.TransDate)) then begin    RecordCheckError(32006,"",-1,"TransDate");    res = -1;    goto LCourseEventVcRecordCheck;      end;        LCourseEventVcRecordCheck:;  CourseEventVcRecordCheck = res;  RETURN;END;globalupdating function LongInt CourseEventVcRecordSaveAfter(record CourseEventVc CourseEventr,record CourseEventVc CourseEvent2r,LongInt stat,LongInt long4)BEGIN  LongInt res;  record WebNGContentVc WCr;  record JALClassBlock JCbl;   res = 1;  BlockLoad(JCbl);  RecordNew(WCr);  WCr.SerNr=NextSerNr("WebNGContentVc",CurrentDate,-1,false,"");  WCr.ContentCategory= JCbl.Cat;//naak no settinga  WCr.ContentStyle=JCbl.CStyle;//naak no settinga  WCr.Comment = CourseEventr.CourseName;  WCr.SpecDate = CourseEventr.TransDate;  if RecordStore(WCr,true) then begin     CreateRecordLink(CourseEventr,CurrentCompany,WCr,CurrentCompany);    CreateRecordLink(WCr,CurrentCompany,CourseEventr,CurrentCompany);  end;  CourseEventVcRecordSaveAfter = res;return;end;