/*****  windows.hal  *****
 * 10/06    - KZS: Plðsmas, Reìioni
 * 10/04/22 - GJS: SMFatskaite
 * 10/04/21 - KZS: Atskaites spec logi
 * 10/03/31 - GJS: Visu veco aizkoment?ju - s?ku jaunu ?ru. Skolas/skolot?ji/smfi
 * 09/10/29 - GJS: Komp?niju Âener?‡ana - not gonna happen -> aizkoment?ju
 * 09/10/26 - GJS: Komp?niju izveides apkalpo‡anas logs
 ***** ************* *****/

//biksessadfads

remote procedure GetElementGroupAr(array string,array string,var integer);
external inner function Boolean HasMetroTestFeatures();
external inner function Boolean HasJewelleryInterface();
external inner function Boolean HasModHotel();
external inner function Boolean HasModHRM();
external inner function Boolean IsEnterprise();
external inner function Boolean StandardHansa();
external inner function Boolean HasCharts();
external inner function string 60 UserDefined(string,string);
external inner function Boolean HasExtTax();
external inner function Boolean HasSalesGroup();
external inner function Boolean HasTaxMatrix();
external inner function real VATZoneButtonsLabelsLAT(real,real,real,real);
external inner function Boolean HasWithholdingTax();
external inner function Boolean HasCustomerStatusReport();
external inner function Boolean HasSalesman();
external inner function Boolean HasSalesmanBonus();


event DefineWindows
begin
  array string 50 procname,labelname;
  longint curt;
  integer cnt,pos,i;
  boolean TrHs;
  real fs;

  real h,h2,h3,hc,v,v2,vs,vm,tilenr;
  
  SetLangMode(LangLatvian,"LAT",0);

  WindowBegin("Skolas",SchoolLClass,CGmlist,-);
  SpawnClass(SchoolDClass);
  SetWRect(64,80,600,289);
  Sizeable(-1,-1,0,0);
  UseView(SchoolVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,2,"Skolas kods",SchoolCode,false,SchoolCode);
  RlColKey(90,90,"Skolas nosaukums",SchoolName,false,SchoolName);
  RlColKey(-250,-250,"Re®ions",Region,false,Region);
  RlColKey(-190,-190, "Telefons",Telephone,false,Telephone);
  RlColKey(-100,-100,"Skol•nu sk.",PupilCount,false,PupilCount);
  RlCol(-30,-30,"Apst.",Approved,false);
  SearchField("Mekl•t");
  EndWindow;

  WindowBegin("Skola",SchoolDClass,CGview,-);
  SetWRect(64,80,619,380);
  UseView(SchoolVc);
  v = 10; vs = 22; h = 100; h2 = 290;
  CheckBox(h-5,v,0,"Apstiprin‚ta",Approved);
  EditField(h,v+=vs+10, 55,"Skolas kods",Normal,SchoolCode,false,0);
  EditField(h2,v,-30,"Skolas nosaukums",Normal,SchoolName,false,0);
  EditField(h,v+=vs,80,"Re®ions",Normal,Region,false,JALRegionSClass);
  EditField(h2,v,-30,"Direktors",Normal,Director,false,0);
  EditField(h,v+=vs,-30,"Adrese",Normal,Address,false,0);
  EditField(h,v+=vs,80,"Telefons",Normal,Telephone,false,0);
  EditField(h2,v,-30,"E-pasts",Normal,Email,false,0);
  EditField(h,v+=vs,80,"Skol•nu skaits",Normal,PupilCount,false,0);
  EditField(h2,v,-30,"Plðsma",Normal,Lang,false,JALLangSClass);
  EditField(h,v+=vs,120,"Novads",Normal,District,false,JALDistrictSClass);
  TextField(h-2,v+=vs,-28,-30,Comment,0);
  if (GuiType==kGuiCocoa) then begin
    StaticText(h-66,v=v+12,"Koment‚rs",false);
  end else begin
    StaticText(h-58,v=v+12,"Koment‚rs",false);
  end;  
  EndWindow;

  WindowBegin("Ievietot skolu",SchoolSClass,CGslist,-);
  SetWRect(64,80,379,298);
  SpawnClass(SchoolDClass);
  Sizeable(-1,-1,0,0);
  UseView(SchoolVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,2,"Skolas kods",SchoolCode,false,SchoolCode);
  RlColKey(90,90,"Skolas nosaukums",SchoolName,false,SchoolName);
  RlColKey(-60,-60,"Re®ions",Region,false,Region);
  SearchField("Mekl•t");
  EndWindow;

  WindowBegin("Skolot‚ji",TeacherLClass,CGmlist,-);
  SpawnClass(TeacherDClass);
  SetWRect(64,80,700,350);
  Sizeable(-1,-1,0,0);
  UseView(TeacherVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,2,"Kods",TeacherCode,false,TeacherCode);
  RlColKey(44,44,"V‚rds, Uzv‚rds",TeacherName,false,TeacherName);
  RlColKey(-150,-150,"Datums",TransDate,false,TransDate);
  RlCol(-50,-50,"Apst.",Approved,false);
  //RlColKey(-400,-400,"Telefons",Telephone,false,Telephone);
  //RlCol(-305,-305, "E-pasts",Email,false);
  //RlColKey(-390,-160,"Skolas nosaukums",SchoolName,false,SchoolName);
  SearchField("Mekl•t");
  EndWindow;

  WindowBegin("Skolot‚js",TeacherDClass,CGview,-);
  SetWRect(64,80,560,600);
  UseView(TeacherVc);
  v = 10; vs = 22; h = 100; h2 = 260;
  EditField(h,v+=vs, 30,"Skolot‚ja kods",ViewOnly,TeacherCode,false,0);
  EditField(h2,v,-25,"V‚rds, Uzv‚rds",Normal,TeacherName,false,0);
  //EditField(h,v+=vs,90,"Telefons",Normal,Telephone,false,0);
  //EditField(h2,v,-25,"E-pasts",Normal,Email,false,0);
  //EditField(h,v+=vs, 30,"Skolas kods",Normal,SchoolCode,false,SchoolSClass);
  //EditField(h2,v,-25,"Skolas nosaukums",Normal,SchoolName,false,0);
  EditField(h,v+=vs,40,"Kontakta kods",Normal,CustCode,false,CUSClass);
  EditField(h2,v,-25,"Priekämets",Normal,Subject,false,0);
  EditField(h,v+=vs,40,"Glob. lietot‚js",Normal,GlobalUser,false,GlobalUserSClass);
  EditField(h2,v,-25,"Pap. darba vieta",Normal,OtherJob,false,0);
  EditField(h2,v+=vs,-25,"L´guma nr.",Normal,ContractNr,false,0);
  CheckBox(h-3,v+=vs,0,"Apstiprin‚ts",Approved);
	CheckBox(h-3,v+=vs,0,"PSK",PSKFlag);
	CheckBox(h-3,v+=vs,0,"VSK",VSKFlag);
	CheckBox(h-3,v+=vs,0,"PROF",PROFFlag);
	CheckBox(h-3,v+=vs,0,"R‚d´t SMU Nolikumu lap‚",ShowAsConsultant);
  MatrixBegin(4,v+=40,-21,v+=90,-,20);
  MatCol(1,32,"Skolas kods",0,SchoolCode,false,SchoolSClass);
  MatCol(1,186,"Skolas nos.",0,SchoolName,false,0);
  EndMatrix;
  EndWindow;

  WindowBegin("Ievietot skolot‚ju",TeacherSClass,CGslist,-);
  SetWRect(64,80,379,298);
  SpawnClass(TeacherDClass);
  Sizeable(-1,-1,0,0);
  UseView(TeacherVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,2,"Kods",TeacherCode,false,TeacherCode);
  RlColKey(44,44,"V‚rds, Uzv‚rds",TeacherName,false,TeacherName);
  RlCol(-30,-30,"Apst.",Approved,false);
  SearchField("Mekl•t");
  EndWindow;


  WindowBegin("SMU atskaites",ReportsLClass,CGmlist,-);
  SpawnClass(ReportsDClass);
  SetWRect(64,80,560,350);
  Sizeable(-1,-1,0,0);
  UseView(ReportsVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,2,"SMU kods",SMFCode,false,SMFCode);
  RlColKey(94,94,"Nosaukums",SMFName,false,SMFName);
  RlColKey(-130,-130,"Datums",SentDate,false,SentDate);
  RlColKey(-50,-50,"Iesniegts",SentStatuss,false,0);
  SearchField("Mekl•t");
  EndWindow;

  WindowBegin("SMU atskaite",ReportsDClass,CGview,-);
  SetWRect(64,80,660,520);
  Sizeable(-1,-1,0,0);
  UseView(ReportsVc);
  v = 10; vs = 22; v2 = 130; h = 70; h2 = 280; h3 = 500; hc = h-5;
  EditField(h,v,90,"Datums",Viewonly,SentDate,false,0);
  EditField(h2,v,90,"Atskaites numurs",Normal,RepCode,false,0);
  CheckBox(h3,v,0,"Iesniegta",SentStatuss);
  EditField(h,v=v+vs, 90,"SMU kods",Normal,SMFCode,false,SMFSClass);
  EditField(h2,v,-30,"Nosaukums",Normal,SMFName,false,0);
  v=v+27;
  TextField(h,v+=vs,-30,100,Texta,0);
  if (GuiType==kGuiCocoa) then begin
    StaticText(hc,v=v-2,"M‚rketinga aktivit‚tes:",false);
  end else begin
    StaticText(h,v=v-2,"M‚rketinga aktivit‚tes:",false);
  end;  
  TextField(h,v+=v2,-30,100,Textb,0);
  if (GuiType==kGuiCocoa) then begin
    StaticText(hc,v=v-2,"P‚rdoäanas aktivit‚tes:",false);
  end else begin
    StaticText(h,v=v-2,"P‚rdoäanas aktivit‚tes:",false);
  end;  
  TextField(h,v+=v2,-30,100,Textc,0);
  if (GuiType==kGuiCocoa) then begin
    StaticText(hc,v=v-2,"Secin‚jumi:",false);
  end else begin
    StaticText(h,v=v-2,"Secin‚jumi:",false);
  end;  
  EndWindow;


/*
  WindowBegin("Komp‚nijas izveide",AddSMFMnVClass,CGMnt,RcType);
  SetWRect(10,90,600,280);
  h=150; h2=400; v=25;
  StaticText(10,18,"UZMAN±BU! P•c komp‚nijas pievienoäanas serveris tiks p‚rstart•ts",false);
  EditField(h,v=25,50,"Skolas kods",Normal,f3,false,0);
  EditField(h2,v=25,130,"Skolas nosaukums",Normal,f3,false,0);
  EditField(h,v=v+20,130,"Komp‚nijas ID",Normal,f1,false,0);
  EditField(h,v=v+20,130,"Komp‚nijas nosaukums",Normal,f2,false,0);
  EndWindow;
*/
/*
  WindowBegin("þener•t",GenComMnVClass,CGMnt,RcType);
  SetWRect(10,90,260,130);
  StaticText(80,25,"Spied OK",false);
  EndWindow;
*/
  WindowBegin("Dz•st datus",ClearDBVClass,CGMnt,RcType);
  SetWRect(10,90,260,130);
  StaticText(80,25,"Spied OK",false);
  EndWindow;

  WindowBegin("Dz•st pielikumus",ClearSMFAttachVClass,CGMnt,RcType);
  SetWRect(10,90,260,130);
  StaticText(80,25,"Spied OK",false);
  EndWindow;

  WindowBegin("Veidot komp‚nijas",ApproveCompVClass,CGMnt,RcType);
  SetWRect(80,80,500,150);
  EditFieldTL(h=150,v=6,130,"UzÀ•mums",M4Str,Normal,20,f1,false,SMFSClass);
  StaticText(80,45,"Spied OK",false);
  StaticText(10,70,"UZMAN±BU! P•c komp‚niju pievienoäanas serveris tiks p‚rstart•ts",false);
  EndWindow;

  WindowBegin("Aizpild´t skolas",FillTeacherSchoolsVClass,CGMnt,RcType);
  SetWRect(80,80,500,150);
  EndWindow;


  WindowBegin("Labot pielikumus",RepairAppVClass,CGMnt,RcType);
  SetWRect(80,80,500,150);
  EditFieldTL(h=150,v=6,130,"UzÀ•mums",M4Str,Normal,20,f1,false,SMFSClass);
  StaticText(80,45,"Spied OK",false);
  EndWindow;


  WindowBegin("P‚rvietot dokumentus",MoveFilesVClass,CGMnt,RcType);
  SetWRect(80,80,500,150);
  StaticText(80,25,"Spied OK",false);
  EndWindow;

 WindowBegin("Jauna SMU Aktivit‚te",SmuNewActTClass,CGSbl,SRType);
   SetBlid(SmuNewActBlock);
   SetWRect(20,80,570,298);
   Sizeable(-1,-1,0,0);
   EditField(130,10,130,"Aktivit‚tes tips",Normal,ActType,false,0);
   EditField(130,30,130,"Teksts",Normal,ActText,false,0);
   EditField(130,60,130,"Persona",Normal,ActPerson,false,0);
   EndWindow;

  WindowBegin("Komp‚nijas",CompaniesTClass,CGHbl,HBlRecType);
  SetBlid(CompaniesBlock);
  SetWRect(20,80,570,298);
  Sizeable(-1,-1,0,0);
  h = 20; v = 27;
  MatrixBegin(h,v,-50,-20,CompaniesRowType,199);
  Flip(0);
  MatCol(1,29,"Kods",0,CompCode,false,0);
  MatCol(1,96,"Nosaukums",0,CompName,false,0);
  Flip(1);
  MatCol(1,200,"±sais",0,ShortName,false,0);
  MatCol(1,280,"TCP/IP",0,TCPIP,false,0);
  MatCol(1,400,"Ports",0,Port,false,0);
  Flip(2);
  MatCol(1,200,"±sais",0,ShortName,false,0);
  MatCol(1,280,"Kod•äanas atsl•ga",0,EnqKey,false,0);
  MatCol(1,400,"Statuss",0,ActiveStatus,false,SetSClass);
  Flip(3);
  MatCol(1,200,"PVN Nr.",0,PresenceCode,false,0);
  MatCol(1,320,"Re®istr•ts",0,RegInCountry,false,SetSClass);
  MatCol(1,430,"Apakð. kods.",0,PINCode,false,0);
  Flip(4);
  MatCol(1,200,"±sais",0,ShortName,false,0);
  MatCol(1,280,"Veids",0,Mode,false,SetSClass);
  //Flip(5);
  //MatCol(1,200,"Hostinga serviss",0,HostingService,false,0);
  //MatCol(1,320,"Servera UUID",0,ServerUUID,false,0);
  InsertRowTest;
  DeleteRowTest;
  EndMatrix;
  vs = 22;
  v = 28; VTab(-35,v,-16,v+vs,ToolFlip,1,"A");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,2,"B");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,3,"C");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,4,"D");
  //v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,4,"E");
  SpecialMenu("Ievietot komp‚nijas",' ',0,"JALAddServerCompsm");
  EndWindow;


//atskaites:

  WindowBegin("Atskaite par skol‚m",SchoolRClass,CGRcW,RcType);
  SetWRect(80,80,500,230);
  EditFieldTL(h=150,v=6,150,"Re®ions",M4Str,Normal,100,f1,false,JALRegionSClass);
  ButtonFrame(h,v+=40,120,3,"K‚rtot p•c");
  RadioButton(h,v,0,0,"Skolas nosaukuma",flags[0]);
  RadioButton(h,v+=16,1,0,"Skolas koda",flags[0]);
  RadioButton(h,v+=16,2,0,"Skol•nu skaita",flags[0]);
  ButtonFrame(h,v+=50,130,3,"R‚d´t");
  RadioButton(h,v,0,0,"Visus",flags[1]);
  RadioButton(h,v+=16,1,0,"Tikai neapstiprin‚tos",flags[1]);
  RadioButton(h,v+=16,2,0,"Tikai apstiprin‚tos",flags[1]);
  EndWindow;
  
  WindowBegin("Atskaite par kursiem",SMUCourseEventRClass,CGRcW,RcType);
  SetWRect(80,80,500,150);
  PeriodField(h=150,v=6,"Periods");
  EditFieldTL(h=150,v+=vs,150,"Kurss",M4Long,Normal,100,long1,false,CourseEventSClass);
  CheckBox(h,v+=vs,0,"R‚d´t tikai SMU dal´bniekus",flags[0]);
  EndWindow;

  WindowBegin("Atskaite par kursiem",EventParticipantsRClass,CGRcW,RcType);
  SetWRect(80,80,500,250);
  EditFieldTL(h=150,v=6,150,"Kurss",M4Long,Normal,100,long1,false,JALEventSClass);
  ButtonFrame(h,v+=40,130,3,"R‚d´t");
  RadioButton(h,v,0,0,"P‚rskata",ArtMode);
  RadioButton(h,v+=16,1,0,"Detaliz•ti",ArtMode);
  vm = v;
  ButtonFrame(h=50,v+=40,120,4,"Statuss");
  RadioButton(h,v,0,0,"Izveidots",flags[1]);
  RadioButton(h,v+=16,1,0,"Apstiprin‚ts",flags[1]);
  RadioButton(h,v+=16,2,0,"Noraid´ts",flags[1]);
  RadioButton(h,v+=16,3,0,"Visi",flags[1]);
  v = vm;
  ButtonFrame(h2=230,v+=40,120,5,"Tips");
  RadioButton(h2,v,0,0,"SMU",flags[0]);
  RadioButton(h2,v+=16,1,0,"Skolot‚js",flags[0]);
  RadioButton(h2,v+=16,2,0,"Mentors",flags[0]);
  RadioButton(h2,v+=16,3,0,"Cits",flags[0]);
  RadioButton(h2,v+=16,4,0,"Visi",flags[0]);

  EndWindow;

  WindowBegin("Atskaite par skolot‚jiem",TeacherRClass,CGRcW,RcType);
  SetWRect(80,80,500,180);
  EditFieldTL(150,v=6,150,"Skolas kods",M4Str,Normal,100,f1,false,SchoolSClass);
  EditFieldTL(150,v+=vs,150,"Re®ions",M4Str,Normal,100,f2,false,JALRegionSClass);
  ButtonFrame(h=50,v+=40,120,3,"K‚rtot p•c");
  RadioButton(h,v,0,0,"Skolot‚ja v‚rda",flags[0]);
  RadioButton(h,v+=16,1,0,"Skolot‚ja koda",flags[0]);
  RadioButton(h,v+=16,2,0,"Skolas nosaukuma",flags[0]);
  ButtonFrame(h2=200,v=66,130,3,"R‚d´t");
  RadioButton(h2,v,0,0,"Tikai neapstiprin‚tos",flags[1]);
  RadioButton(h2,v+=16,1,0,"Tikai apstiprin‚tos",flags[1]);
  RadioButton(h2,v+=16,2,0,"Visus",flags[1]);
  EndWindow;

  WindowBegin("Atskaite par SMU",SMFRClass,CGRcW,RcType);
  SetWRect(80,80,500,210);
  EditFieldTL(h=150,v=6,150,"Skolas kods",M4Str,Normal,100,f1,false,SchoolSClass);
  EditFieldTL(h,v+=vs,150,"Re®ions",M4Str,Normal,100,f2,false,JALRegionSClass);
  ButtonFrame(h=50,v=66,120,4,"R‚d´t");
  RadioButton(h,v,0,0,"Neapstiprin‚tos",flags[1]);
  RadioButton(h,v+=16,1,0,"Akt´vos",flags[1]);
  RadioButton(h,v+=16,2,0,"Neakt´vos",flags[1]);
  RadioButton(h,v+=16,3,0,"Visus",flags[1]);
  ButtonFrame(h=200,v=66,120,4,"Tips");
  RadioButton(h,v,0,0,"Raìoäana",flags[2]);
  RadioButton(h,v+=16,1,0,"Pakalpojumi",flags[2]);
  RadioButton(h,v+=16,2,0,"Abi",flags[2]);
  RadioButton(h,v+=16,3,0,"Visi",flags[2]);
  CheckBox(h=50,v+=26,1,"R‚d´t dal´bniekus",flags[5]);
  EndWindow;

  WindowBegin("Atskaite par SMU atskait•m",SMFreportsRClass,CGRcW,RcType);
  SetWRect(80,80,500,120);
  PeriodField(h=100,v=6,"Periods");
  EditFieldTL(h,v+=vs,100,"SMU",M4Str,Normal,100,f1,false,SMFSClass);
  EndWindow;

  WindowBegin("Atskaite par mentoriem",MentorRClass,CGRcW,RcType);
  SetWRect(80,80,500,180);
  EditFieldTL(150,v+=vs,150,"Re®ions",M4Str,Normal,100,f1,false,JALRegionSClass);
  EditFieldTL(150,v+=vs,150,"Novads",M4Str,Normal,100,f2,false,JALDistrictSClass);
  CheckBox(150,v+=vs,1,"Izlaist neapstiprin‚tos",flags[1]);
  EndWindow;

  WindowBegin("SMU ziÀojumu iestat´jumi",ReportMailTClass,CGSbl,-);
  SetWRect(80,80,560,260);
  SetBlid(ReportMailBlock);
  StaticText(50,v=25,"ZiÀojumus par iesniegtaj‚m SMU ikm•neäa atskait•m",false);
  StaticText(50,v=v+15,"nosðt´t uz konferenci:",false);
  EditField(180,v,150,"",Normal,Mail,false,ConfSClass);
  StaticText(50,v=v+45,"ZiÀojumi par piere®istr•tu ",false);
  EditField(180,v=v+15,150,"SMU",Normal,SMUMail,false,ConfSClass);
  EditField(180,v=v+20,150,"Skolot‚ju",Normal,TeacherMail,false,ConfSClass);
  EditField(180,v=v+20,150,"Mentoru",Normal,MentorMail,false,ConfSClass);
  EditField(180,v=v+20,150,"Studentu",Normal,STUMail,false,ConfSClass);
  EndWindow;

  WindowBegin("Skolu plðsmas",JALLangTClass,CGHBl,-);
  SetWRect(80,80,400,280);
  SetBlid(JALLangBlock);
  MatrixBegin(10,20,-30,-10,-,10);
  MatCol(1,25,"Kods",0,Code,false,0);
  MatCol(1,100,"Plðsma",0,Lang,false,0);
  EndMatrix;
  EndWindow;

  WindowBegin("Skolu plðsmas",JALLangSClass,CGother,-);
  SetWRect(240,80,470,298);
  StringList(9,9,206,209);
  EndWindow;

  WindowBegin("Re®ioni",JALRegionSClass,CGother,-);
  SetWRect(240,80,470,298);
  StringList(9,9,206,209);
  EndWindow;
	
	
	WindowBegin("Re®ionu defin•äana",JALRegionTClass,CGHBL,-);
  SetWRect(80,80,800,280);
  SetBlid(JALRegionBlock);
  MatrixBegin(10,20,-30,-10,-,10);
  MatCol(1,25,"Re®ions",0,Region,false,0);
  MatCol(1,120,"Apakäre®. vai cits nos.",0,SubRegion,false,0);
  EndMatrix;
  EndWindow;
	
  WindowBegin("Priekämeti defin•äana",JALSubjectTClass,CGHBL,-);// Edit ************************** BPI Ukraine - KramarAlexandr - Tuesday, 9 October 2018 17:02:46
  SetWRect(80,80,800,280);
  SetBlid(JALSubjectBlock);
  MatrixBegin(10,20,-30,-10,-,100);
  MatCol(1,25,"Priekämeti",0,Subject,false,0);
  EndMatrix;
  EndWindow;

  WindowBegin("Jaunumu saÀ•m•ji",NewsEmailTClass,CGHBL,-);
  SetWRect(80,80,500,280);
  SetBlid(NewsEmailBlock);
  MatrixBegin(10,20,-30,-10,-,999);
  MatCol(1,25,"E-pasts",0,Email,false,0);
  EndMatrix;
  EndWindow;


  WindowBegin("Klasifik‚ciju defin•äana",JALClassTClass,CGSbl,-);
  SetWRect(80,80,800,500);
  SetBlid(JALClassBlock);
  h = 250; v=0; vs=20; h2 = 550;
  
  Tile(0,20,false,"",-);  
  tilenr = 1;
  TileButton(tilenr,"Epasti"); tilenr = tilenr + 1;  
  TileButton(tilenr,"T´meklis"); tilenr = tilenr + 1;  
  TileButton(tilenr,"Citi"); tilenr = tilenr + 1;  
  tilenr = 1;
  Tile(tilenr,250,false,"1",STDTextTerm); tilenr = tilenr + 1;  
//  EditField(h2,v=v+vs,100,"Paroles atjaunoäanas virsraksts",Normal,RecoveryHead,false,LTxtSClass);
//  EditField(h2,v=v+vs,100,"Paroles atjaunoäanas s‚kuma teksts",Normal,RecoveryStartTxt,false,LTxtSClass);
//  EditField(h2,v=v+vs,100,"Paroles atjaunoäanas beigu teksts",Normal,RecoveryEndTxt,false,LTxtSClass);
  EditField(h,v=6,100,"Likvid•ta SMU teksts",Normal,STDTextTerm,false,LTxtSClass);
  EditField(h,v=v+vs,100,"Neakt´va SMU teksts",Normal,STDTextDis,false,LTxtSClass);
  EditField(h,v=v+vs,100,"Atjaunotas SMU teksts",Normal,STDTextEn,false,LTxtSClass);
  EditField(h,v=v+vs,100,"Apstiprin‚ts pas‚kumam",Normal,EventAccepted,false,LTxtSClass);
  EditField(h,v=v+vs,100,"Noraid´ts pas‚kumam",Normal,EventDeclined,false,LTxtSClass);
  EditField(h,v=v+vs,100,"Skol•na re®. teksts",Normal,StudentRegText,false,LTxtSClass);
  EditField(h,v=v+vs,100,"Skol•na re®. teksts vec‚kam",Normal,StudentParentText,false,LTxtSClass);
  EditField(h,v=v+vs,100,"Darbinieka piev. teksts",Normal,EmployeeAddText,false,LTxtSClass);
  EditField(h,v=v+vs,100,"Darbinieka piev. teksts vec‚kam",Normal,EmployeeAddText2,false,LTxtSClass);
  EditField(h,v=v+vs,100,"Skol•na apst. piepr. skolot‚jam",Normal,TeacherRequestText,false,LTxtSClass);
  EditField(h,v=v+vs,100,"SMU apst. piepr. skolot‚jam",Normal,TeacherRequestText2,false,LTxtSClass);
  EditField(h,v=v+vs,100,"NoÀemts darbinieks skol•nam",Normal,EmployeeRemoveText,false,LTxtSClass);
  EditField(h,v=v+vs,100,"NoÀemts darbinieks vec‚kam",Normal,EmployeeRemoveText2,false,LTxtSClass);
  EditField(h,v=v+vs,100,"Skolot‚ja re®istr•äan‚s",Normal,TeacherRegText,false,LTxtSClass);
  EditField(h,v=v+vs,100,"Skolot‚ja apstiprin‚äana",Normal,TeacherApproveText,false,LTxtSClass);
  EditField(h,v=v+vs,100,"Paroles maiÀa",Normal,PasswordChangeText,false,LTxtSClass);

  Tile(tilenr,350,false,"2",Template); tilenr = tilenr + 1;  
  EditField(h,v=6,100,"áablona lapa komp‚nij‚m",Normal,Template,false,WebNGPageSClass);
  EditField(h,v=v+vs,100,"Struktðras elements",Normal,Struct,false,WebNGStructSClass);
  EditField(h,v=v+vs,100,"Profila elements",Normal,ProfileElement,false,WebNGElementSClass);
  EditField(h,v=v+vs,100,"Profila laboäanas struktðra",Normal,ProfileCorrectionStruct,false,WebNGStructSClass);
  EditField(h,v=v+vs,100,"Darbinieka pievienoäanas struktðra",Normal,AddEmpStruct,false,WebNGStructSClass);
  EditField(h,v=v+vs,100,"Darbinieka laboäanas struktðra",Normal,EmpChangeStruct,false,WebNGStructSClass);
  EditField(h,v=v+vs,100,"Struktðra p•c veiksm´gas augäupl.",Normal,UploadAfter,false,WebNGStructSClass);
  EditField(h,v=v+vs,100,"Struktðra p•c neveiksm´gas augäupl.",Normal,UploadFail,false,WebNGStructSClass);
  EditField(h,v=v+vs,100,"Augäupl‚des direktorija",Normal,UploadDir,false,0);
  EditField(h,v=v+vs,100,"Lejupl‚des id",Normal,DownloadReq,false,0);
  EditField(h,v=v+vs,100,"Lejupl‚des stat",Normal,DownloadReqStat,false,0);


  Tile(tilenr,250,false,"3",Schoolar); tilenr = tilenr + 1;  
  Editfield(h,v=6,100,"Klienta klase skol•niem",Normal,Schoolar,false,CClassSClass);
  Editfield(h,v=v+vs,100,"Klienta klase skolot‚jiem",Normal,Teacher,false,CClassSClass);
  Editfield(h,v=v+vs,100,"Klienta klase sentoriem",Normal,Mentor,false,CClassSClass);
  EditField(h,v=v+vs,100,"Satura stils pas‚kumiem",Normal,CStyle,false,WebNGContentStyleSClass);
  EditField(h,v=v+vs,100,"Satura stils apstiprin‚tiem pas‚kumiem",Normal,EventSmall,false,WebNGContentStyleSClass);
  Editfield(h,v=v+vs,100,"Kategorija pas‚kumiem",Normal,Cat,false,WebNGContentCatSClass);
  EditField(h,v=v+vs,100,"Skolot‚ja lietot‚ja grupa",Normal,GUTeacher,false,AccessSClass);
  EditField(h,v=v+vs,100,"Skolot‚ja lietot‚ja sl•gt‚ grupa",Normal,GUTeacherClosed,false,AccessSClass);
  EditField(h,v=v+vs,100,"S‚kuma konference saÀemtajiem failiem",Normal,StartConf,false,ConfSClass);
  EditField(h,v=v+vs,100,"Konference veiksm´gi saÀemtajiem failiem",Normal,GoodConf,false,ConfSClass);
  EditField(h,v=v+vs,100,"Konference neveiksm´gi saÀemtajiem failiem",Normal,BadConf,false,ConfSClass);
  EditField(h,v=v+vs,100,"No pas‚kumiem re®istr•to kontaktu klasif.",Normal,EventPart,false,CClassSClass);
  EditField(h,v=v+vs,100,"Konference paziÀojumam par nosðt´tiem failiem",Normal,AttachConf,false,ConfSClass);
  EditField(h,v=v+vs,100,"V•rt•jums no",Normal,ScoreFrom,false,0);
  EditField(h,v=v+vs,100,"V•rt•jums l´dz",Normal,ScoreTo,false,0);
  EndWindow;

  WindowBegin("Finanäu apr•úini",FCSMULClass,CGmlist,-);
  SpawnClass(FCSMUDClass);
  SetWRect(64,80,860,350); 
  Sizeable(-1,-1,0,0);
  UseView(FCSMUVc);
  RecordList(4,17,-21,-39);
  h = 250; v=0; vs=100; h2 = 550;
  RlColKey(32,32,"Kods",SMUCode,false,MainKey);
  RlCol   (120,120,"Prece",ItemName,false);
  SearchField("Mekl•t");
  EndWindow;
  
  WindowBegin("Finanäu apr•úini",FCSMUDClass,CGview,-);
  SetWRect(64,80,860,350);
  Sizeable(-1,-1,0,0);
  UseView(FCSMUVc);
  h = 150; v=0; vs=20; h2 = 550;
  Editfield(h,v,100,"Kods",Normal,SMUCode,false,0);
  Editfield(h,v+=vs,100,"Prece",Normal,ItemName,false,0);

  Editfield(h,v=v+vs,100,"Darbinieka 1 v‚rds,uzv‚rds",Normal,contact1,false,0);
  Editfield(h,v=v+vs,100,"Darbinieka 2 v‚rds,uzv‚rds",Normal,contact2,false,0);
  Editfield(h,v=v+vs,100,"Darbinieka 3 v‚rds,uzv‚rds ",Normal,contact3,false,0);
  EditField(h,v=v+vs,100,"Darbinieka 4 v‚rds,uzv‚rds",Normal,contact4,false,0);
  EditField(h,v=v+vs,100,"Darbinieka 1 alga",Normal,salary1,false,0);
  Editfield(h,v=v+vs,100,"Darbinieka 2 alga",Normal,salary2,false,0);
  EditField(h,v=v+vs,100,"Darbinieka 3 alga",Normal,salary3,false,0);
  EditField(h,v=v+vs,100,"Darbinieka 4 alga",Normal,salary4,false,0);

  MatrixBegin(10,v=v+vs+50,-30,-10,-,10);
  MatCol(1,32,"Produkta nosaukums",0,ProdName,false,0);
  MatCol(1,150,"1 vien. paäizm. EUR",0,UCost,false,0);
  EndMatrix;
  EndWindow;

  
  WindowBegin("Dz•st visas skolas",DelSchoolVClass,CGMnt,RcType);
  SetWRect(80,80,500,150);
  StaticText(80,25,"Spied OK",false);
  EndWindow;

  WindowBegin("Novadi no adres•m",DistrictGuesserVClass,CGMnt,RcType);
  SetWRect(80,80,500,150);
  StaticText(80,25,"Spied OK",false);
  EndWindow;
  
  WindowBegin("Novadu iztrðkums",MissingDistrictCntVClass,CGMnt,RcType);
  SetWRect(80,80,500,150);
  StaticText(80,25,"Spied OK",false);
  EndWindow;
  
  WindowBegin("Novadu t´r´äana",ClearDistrictVClass,CGMnt,RcType);
  SetWRect(80,80,500,150);
  StaticText(80,25,"Spied OK",false);
  EndWindow;

  WindowBegin("Veidot pastkastes Glob‚lajiem lietot‚jiem",GUMailboxesVClass,CGMnt,RcType);
  SetWRect(80,80,500,150);
  StaticText(80,25,"Spied OK",false);
  EndWindow;
  
  WindowBegin("Veidot komp‚nijas",ForceGenCompVClass,CGMnt,RcType);
  SetWRect(80,80,500,150);
  StaticText(80,25,"Spied OK",false);
  EndWindow;
  
  WindowBegin("Piesl•gäan‚s",SetLoginFlagVClass,CGMnt,RcType);
  SetWRect(80,80,500,150);
  StaticText(80,25,"Spied OK",false);
  EndWindow;

  WindowBegin("Mentori",MentorLClass,CGmlist,-);
  SpawnClass(MentorDClass);
  SetWRect(64,80,860,350);
  Sizeable(-1,-1,0,0);
  UseView(MentorVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,2,"V‚rds, uzv‚rds",MentorName,false,MentorName);
  //RlColKey(150,150,"E-pasts",Email,false,Email);
  RlColKey(320,320,"Komp‚nija",Company,False,Company);
  RlColKey(500,500,"Amats",Job,False,Job);
  //RlColKey(94,94,"Re®ions,M4Str,100,0);
  RlColKey(650,650,"Novads",District,false,District);
  RlColKey(-35,-35,"Apst.",Approved,false,Approved);
  SearchField("Mekl•t");
  EndWindow;

	WindowBegin("Piesl•gäan‚s",SetLoginFlagVClass,CGMnt,RcType);
  SetWRect(80,80,500,150);
  StaticText(80,25,"Spied OK",false);
  EndWindow;

  WindowBegin("Run",EmptyVClass,CGMnt,RcType);
  SetWRect(64,80,860,350);
  Sizeable(-1,-1,0,0);

  EndWindow;
	
  WindowBegin("Mentors",MentorDClass,CGview,-);
  SetWRect(64,80,560,250);
  UseView(MentorVc);
  v = 10; vs = 22; h = 100; h2 = 260;
  EditField(h,v+=vs, 30,"Mentora kods",Normal,MentorCode,false,0);
  EditField(h2,v,-25,"V‚rds, Uzv‚rds",Normal,MentorName,false,0);
  //EditField(h,v+=vs,90,"Telefons",Normal,Telephone,false,0);
  //EditField(h2,v,-25,"E-pasts",Normal,Email,false,0);
  EditField(h,v+=vs,90,"Komp‚nija",Normal,Company,false,0);
  EditField(h2,v,-25,"Amats",Normal,Job,false,0);
  EditField(h,v+=vs,90,"Re®ions",Normal,Region,false,JALRegionSClass);
  EditField(h2,v,90,"Novads",Normal,District,false,JALDistrictSClass);
  CheckBox(h-3,v+=28,0,"Apstiprin‚ts",Approved);
  EndWindow;

  WindowBegin("T´mekºa saturs",WebNGContentLClass,CGmlist,-);
  SetWRect(10,80,800,291);
  SpawnClass(WebNGContentDClass);
  Sizeable(-1,-1,0,0);
  UseView(WebNGContentVc);
  RecordList(4,17,-21,-39);
  RlColKey(6,6,"S•r. Nr.",SerNr,false,SerNr);
  RlColKey(75,75,"Stils",ContentStyle,false,ContentStyle);
  RlColKey(185,185,"Datums",SpecDate,false,SpecDate);
  RlCol(260,260,"Kategorija",ContentCategory,false);
  RlColKey(390,390,"Koment‚rs",Comment,false,Comment);
  SearchField("Mekl•t");
  SpecialMenu("Par‚d´t saturu p‚rlðkprogrmm‚",'w',1,"ShowWebNGContentInBrowserLsm");
  SpecialMenu("Mekl•t",'F',1,"TWebNGContSearchDsm");
  EndWindow;

  WindowBegin("T´mekºa saturs",WebNGContentDClass,CGview,-);
  UseView(WebNGContentVc);
  SetWRect(20,80,500,435);
  Sizeable(-1,-1,0,0);
  vs = 20;h = 110;h2 = 320; v = 6; h3 = -160;
  EditField(h,v,80,"S•r. Nr.",Normal,SerNr,false,0);
  EditField(h2,v,120,"Stils",Normal,ContentStyle,false,WebNGContentStyleSClass);
  EditField(h3,v,120,"Kategorija",Normal,ContentCategory,false,WebNGContentCatSClass);
  EditField(h,v+=vs,80,"Datums",Normal,SpecDate,false,PasteCurDate);
  EditField(h2,v,-40,"Virsraksts",Normal,Comment,false,0);
  EditField(h,v+=vs,80,"Valsts",Normal,Country,false,WebNGCountrySClass);
  EditField(h2,v,40,"Noklus•t‚ valoda",Normal,DefLangCode,false,WebNGLanguageSClass);
  HalPushButton(-130,v,-30,v+20,"NewContentTranslationDsm","Jauns tulkojums");
  RecordList2(10,v+=40,-30,-39,"WebNGTranslateVc");
  RlColKey(4,4,"Valoda",LangCode,false,ContentLangCode);
  RlColKey(90,90,"Izmain´ts",LastChanged,false,ContentLastChanged);
  RlCol(180,180,"K‚rtoäana",Sorting,false);
  RlColKey(270,270,"Koment‚rs",Comment,false,ContentComment);
  SpecialMenu("Par‚d´t saturu p‚rlðkprogramm‚",'w',1,"ShowWebNGContentInBrowserDsm");
  //SpecialMenu("Public•t att•lus",' ',1,"PublishGalleryDsm");
  //SpecialMenu("IzÀemt att•lus no t´mekºa",' ',1,"UnPublishGalleryDsm");
  EndWindow;

  WindowBegin("Satura stils",WebNGContentStyleDClass,CGview,-);
  UseView(WebNGContentStyleVc);
  SetWRect(20,80,500,420);
  vs = 20;h = 140;h2 =  360; v = 6;
  EditField(h,v,120,"Kods",Normal,Code,false,0);
  EditField(h,v+=vs,-40,"Koment‚rs",Normal,Comment,false,0);
  EditField(h,v+=vs,80,"Elementu skaits",Normal,ElementCount,false,0);
  EditField(h2,v,-40,"áablona elements",Normal,ElementTemplate,false,WebNGElementSClass);
  EditField(h,v+=vs,80,"<div> ID",Normal,DivID,false,0);
  EditField(h2,v,-40,"<div> klase",Normal,DivClass,false,0);
  EditField(h,v+=vs,80,"R‚d´t app mezglu",Normal,HandlerAppNode,false,WebNGStructSClass); //Possible names?: Hander app, Handler app node, Link handler node
  EditField(h2,v,-40,"Galvenes klase",Normal,HeadingClass,false,0);
  EditField(h,v+=vs,80,"Kategorijas galvenes klase",Normal,CatHeaderDivClass,false,0);
  EditField(h2,v,-40,"Valsts galvenes klase",Normal,CountryHeaderDivClass,false,0);
  ButtonFrame(h=40,vm=(v+=45),150,4,"Iestat´äana");
  CheckBox(h,v,0,"Druk‚t datumu",PrintDate);
  CheckBox(h,v+=16,0,"Neiesiet <div>",NoDiv);
  CheckBox(h,v+=16,0,"Grupu saraksts p•c valsts",GroupByCountry);
  CheckBox(h,v+=16,0,"Grupu saraksts p•c kategorijas",GroupByCategory);
  ButtonFrame(h=270,v=vm,150,3,"Saraksta skata teksts");
  RadioButton(h,v,0,0,"R‚d´t visas rindas",ListViewFlag);
  RadioButton(h,v+=16,1,0,"R‚d´t vienu nejauäu rindu",ListViewFlag);
  RadioButton(h,v+=16,2,0,"R‚d´t galerijas",ListViewFlag);
  RadioButton(h,v+=16,3,0,"R‚d´t pas‚kumus",ListViewFlag);
  ButtonFrame(h,v+=45,150,2,"Tulkojuma koment‚rs");
  RadioButton(h,v,0,0,"Nedruk‚t",CommentFlag);
  RadioButton(h,v+=16,1,0,"R‚d´t k‚ galveni",CommentFlag);
  ButtonFrame(h,v+=45,150,2,"K‚rtoäana");
  RadioButton(h,v,0,0,"S‚kot ar jaun‚ko",SortingFlag);
  RadioButton(h,v+=16,1,0,"Nejauäs",SortingFlag);
  EndWindow;

  WindowBegin("Numuru s•rijas p•c noklus•juma",SRTClass,CGSbl,SRType);
  SetWRect(64,80,509,333);
  SetBlid(SRBlock);
  vs = 20; h=130;
  EditField(h,vm=(v=6),65,"Pasðt´jumi",Normal,LastOrdNr,false,0);
  EditField(h,v+=vs,65,"Nosðt´t‚s preces",Normal,LastShipNr,false,0);
  EditField(h,v+=vs,65,"R•úini",Normal,LastInvNr,false,0);
  EditField(h,v+=vs,65,"Ien‚koäie r•úini",Normal,LastVINr,false,0);
  EditField(h,v+=vs,65,"SaÀemt‚s preces",Normal,LastPurNr,false,0);
  EditField(h,v+=vs,65,"Soda naudas r•ú.",Normal,LastIntNr,false,0);
  EditField(h,v+=vs,65,"Kontakti",Normal,LastCustCode,false,0);
  EditField(h,v+=vs,65,"Artikuli",Normal,LastArtCode,false,0);
    EditField(h,v+=vs,65,"Maks‚jumi",Normal,LastPayNr,false,0);  
    EditField(h=330,v=vm,65,"Gr‚matojumi",Normal,LastTRNr,false,0);  
  EditField(h,v+=vs,65,"Kred´ta r•úini",Normal,LastCredInvNr,false,0);
  EditField(h,v+=vs,65,"SaÀ. kred´ta r•úini",Normal,LastCredVINr,false,0);
  EditField(h,v+=vs,65,"Maks. uzdevumi",Normal,LastOPNr,false,0);
  EditField(h,v+=vs,65,"Pied‚v‚jumi",Normal,LastQTNr,false,0);
  EditField(h,v+=vs,65,"L´gumu r•úini",Normal,LastCOInvNr,false,0);
  EditField(h,v+=vs,65,"POS r•úini",Normal,LastIVCashNr,false,0);
  EditField(h,v+=vs,65,"S/N r•úini",Normal,LastCashInvNr,false,0);
  EditField(h,v+=vs,65,"Pasðt´jumi",Normal,LastPONr,false,0);
    EditField(h,v+=vs,65,"Standarta rezerv.",Normal,LastDaughterJobNr,false,0);  
    EditField(h,v+=vs,65,"P•d•jais SKU",Normal,LastSKU,false,0);  
  EditField(h,v+=vs,65,"Skolot‚ja kods",Normal,LastTeacherCode,false,0);
  EditField(h,v+=vs,65,"Skolas kods",Normal,LastSchoolCode,false,0);

  EndWindow;


  WindowBegin("Koment‚rs",WebNGBlogCommentDClass,CGview,-);
  SetWRect(20,80,680,500);
  h = 110; h2 = 330; h3 = 450; v = 16; vs=20;
  UseView(WebNGBlogCommentVc);
  EditField(h,v ,100,"Numurs",Normal,SerNr,false,0);
  EditField(h2,v ,100,"Ieraksta numurs",Normal,MailSerNr,false,0);
  EditField(h,v+=vs ,100,"Datums",Normal,TransDate,false,0);
  EditField(h2,v ,100,"Laiks",Normal,TransTime,false,0);
  EditField(h,v+=vs ,100,"Bloga autors",Normal,MailboxName,false,0);
  EditField(h2,v ,100,"Ieraksta virsraksts",Normal,MailHeader,false,0);
  EditField(h,v+=vs ,100,"Koment‚ra autors",Normal,UserName,false,0);
  EditField(h2,v ,100,"Klienta kods",Normal,CustCode,false,CUSClass);
  EditField(h,v+=vs ,100,"IP",Normal,IPAddress,false,0);
  EditField(h2,v ,100,"E-pasts",Normal,Email,false,0);
  EditField(h,v+=vs ,320,"Koment‚rs",Normal,CommentHeader,false,0);
  ButtonFrame(h3,vm=(v=20),140,3,"Tips");
  RadioButton(h3,v,0,0,"Koment‚rs",CommentType);
  RadioButton(h3,v+=16,1,0,"Pozit´vs v•rt•jums",CommentType);
  RadioButton(h3,v+=16,2,0,"Negat´vs v•rt•jums",CommentType);
  ButtonFrame(h3,vm=(v=v+48),80,3,"Statuss");
  RadioButton(h3,v,0,0,"Apstiprin‚ts",AcceptFlag);
  RadioButton(h3,v+=16,1,0,"Noraid´ts",AcceptFlag);
  RadioButton(h3,v+=16,2,0,"Nenoteikts",AcceptFlag);
  ButtonFrame(h3+=110,vm,30,2,"Teksta tips");
  RadioButton(h3,v=v-32,0,0,"Blogs",TextType);
  RadioButton(h3,v+=16,1,0,"ZiÀa",TextType);
  TextField(h,v+=46,-21,-16,Math,0);
  EndWindow;

  WindowBegin("Koment‚ri un v•rt•jumi",WebNGBlogCommentLClass,CGmlist,-);
  SetWRect(20,80,700,350);
  Sizeable(-1,-1,0,0);
  SpawnClass(WebNGBlogCommentDClass);
  UseView(WebNGBlogCommentVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Numurs",SerNr,false,SerNr);
  RlColKey(100,100,"E-pasts",MailSerNr,false,MailSerNr);
  RlColKey(220,220,"Bloga autors",MailboxName,false,MailboxName);
  RlColKey(300,300,"Ieraksta virsraksts",MailHeader,false,MailHeader);
  RlColKey(-140,-140,"Datums",TransDate,false,NegActSerNr);
  RlCol   (-60,-60,"Laiks",TransTime,false);
  SearchField("Mekl•t");
  EndWindow;

  WindowBegin("Sðt´t jaunumus",SendNewsToEmailsVClass,CGMnt,RcType);
  SetWRect(80,80,500,150);
  EditFieldTL(100,10, -20,"Satura ieraksti",M4Str,Normal,50,f1,false,WebNGContentLClass);
  StaticText(100,40,"Spied OK",false);
  EndWindow;

  WindowBegin("PieÀemt E-pastus",SaveAttachmentsVClass,CGMnt,RcType);
  SetWRect(80,80,500,150);
   //EditFieldTL(100,10, -20,"Satura ieraksti",M4Str,Normal,50,f1,false,WebNGContentLClass);
  StaticText(100,40,"Spied OK",false);
  EndWindow;

  WindowBegin("Aizpild´t kontaktu kodus",FillCUCodesVClass,CGMnt,RcType);
  SetWRect(80,80,500,150);
  StaticText(100,40,"Spiediet OK",false);
  EndWindow;

  WindowBegin("Novadi",JALDistrictSClass,CGother,-);
  SetWRect(240,80,470,298);
  StringList(9,9,206,209);
  EndWindow;

  WindowBegin("Re®ionu defin•äana",JALDistrictTClass,CGHBL,-);
  SetWRect(80,80,600,280);
  SetBlid(JALDistrictBlock);
  MatrixBegin(10,20,-30,-10,-,200);
  MatCol(1,25,"Novads",0,District,false,0);
  MatCol(1,120,"Re®ions",0,Region,false,JALRegionSClass);
  EndMatrix;
  EndWindow;

  WindowBegin("Dokumenti",JALFileLClass,CGmList,-);
  SpawnClass(JALFileDClass);
  UseView(JALFileVc);
  SetWRect(80,80,300,300);

  RecordList(4,17,-21,-39);
  RlColKey(4,4,"S•r. nr.",SerNr,false,SerNr);
  RlColKey(80,80,"SMU kods",SMFCode,false,SMFCode);
  RLCol   (180,180,"SMU nos.",SMFName,false);
  SearchField("Mekl•t");
  EndWindow;

  WindowBegin("Dokuments",JALFileDClass,CGView,-);
  v=6;h=100;h2=250;vs=20;
  UseView(JALFileVc);
  SetWRect(80,80,440,400);
  EditField(h,v,80,"S•r. nr.",Normal,SerNr,false,0);
	EditField(h,v+=vs,-40,"Dok name",Normal,Name,false,0);
  EditField(h,v+=vs,80,"SMU kods",Normal,SMFCode,false,SMFSClass);
  EditField(h,v+=vs,-40,"SMU nosaukums",Normal,SMFName,false,0);
	EditField(h,v+=vs,-40,"Reg Date",Normal,TransDate,false,0);
	EditField(h,v+=vs,80,"V•rt•jums",Normal,Score,false,0);
  ButtonFrame(h,v+=40,100,4,"Statuss");
  RadioButton(h,v,0,0,"Iesðt´ts",Status);
  RadioButton(h,v+=16,1,0,"Apstiprin‚ts(skolot‚js)",Status);
  RadioButton(h,v+=16,2,0,"Apstiprin‚ts(JAL)",Status);
  RadioButton(h,v+=16,3,0,"Noraid´ts",Status);
  RadioButton(h,v+=16,4,0,"Att•ls",Status);
 
  EndWindow;

  WindowBegin("Atskaite par skol‚m",JALDocsRClass,CGRcW,RcType);
  SetWRect(80,80,500,250);
  EditFieldTL(h=150,v=6,150,"SMU",M4Str,Normal,100,f1,false,SMFSClass);
  EditFieldTL(h=150,v+=vs,150,"Skola",M4Str,Normal,100,f2,false,SchoolSClass);
  EditFieldTL(h=150,v+=vs,150,"Skolot‚js",M4Str,Normal,100,f3,false,TeacherSClass);
  ButtonFrame(h,v+=40,120,3,"Statuss");
  CheckBox(h,v,0,"Iesðt´ts",flags[0]);
  CheckBox(h,v+=16,0,"Apstiprin‚ts(skolot‚js)",flags[1]);
  CheckBox(h,v+=16,0,"Apstiprin‚ts(JAL)",flags[2]);
  CheckBox(h,v+=16,0,"Noraid´ts",flags[3]);
  EndWindow;


  WindowBegin("Dz•st komp‚nijas visas",DeleteCompNewVClass,CGMnt,RcType);
  SetWRect(80,80,500,150);
  EndWindow;

  WindowBegin("Dz•st JAL saturu",ClearJALContentVClass,CGMnt,RcType);
  SetWRect(80,80,500,150);
  EndWindow;

  WindowBegin("Dz•st JAL e-pastus",ClearJALMailBoxesVClass,CGMnt,RcType);
  SetWRect(80,80,500,150);
  EndWindow;

  WindowBegin("P‚rveidot visus SMU par neakt´viem",ChangeSMUVClass,CGMnt,RcType);
  SetWRect(80,80,500,150);
  EndWindow;

  WindowBegin("JAL serveri",JALServerLClass,CGmList,-);
  SetWRect(80,80,300,300);
  UseView(JALServerVc);
  SpawnClass(JALServerDClass);
  RecordList(4,17,-21,-39);
  RlColKey(4,2,"Kods",Code,false,Code);
  RlCol   (90,90,"Koment‚rs",Comment,false);
  RlCol   (200,200,"P•d•j‚ komp.",LastComp,false);

  EndWindow;

  WindowBegin("JAL serveris",JALServerDClass,CGView,-);
  SetWRect(80,80,400,280);
  UseView(JALServerVc);
  EditField(h=100,v=6,80,"Kods",Normal,Code,false,0);
  EditField(h,v+=vs,-20,"Koment‚rs",Normal,Comment,false,0);
  EditField(h,v+=vs,-20,"Ceºä l´dz serv.",Normal,FilePath,false,0);
  EditField(h,v+=vs,80,"P•d•j‚ komp.",Normal,LastComp,false,0);
  EditField(h,v+=vs,80,"Skolot‚ja grupa",Normal,TeacherAccGr,false,AccessSClass);
  EditField(h,v+=vs,80,"Skolnieku grupa",Normal,SMFAccGr,false,AccessSClass);
  EditField(h,v+=vs,80,"Web ports",Normal,WebPort,false,0);
  EditField(h,v+=vs,80,"Programmas ports",Normal,AppPort,false,0);
  EditField(h,v+=vs,-20,"IP adrese",Normal,IP,false,0);

  EndWindow;


  WindowBegin("Pieteikumi skolot‚jiem/mentoriem",JALTeacherAccLClass,CGmlist,-);
  SpawnClass(JALTeacherAccDClass);
  SetWRect(64,80,560,350);
  Sizeable(-1,-1,0,0);
  UseView(JALTeacherAccVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,2,"S•r.Nr.",SerNr,false,SerNr);
  RlColKey(100,100,"SMU",SMFCode,False,SMFCode);
  RlCol(200,200,"Datums",TransDate,False);
  SearchField("Mekl•t");
  EndWindow;

  WindowBegin("Pieteikums",JALTeacherAccDClass,CGview,-);
  SetWRect(64,80,560,230);
  UseView(JALTeacherAccVc);
  v = 10; vs = 22; h = 100; h2 = 260;
  EditField(h,v=6,90,"S•r. nr.",Normal,SerNr,false,0);
  EditField(h,v+=vs,90,"SMU",Normal,SMFCode,false,SMFSClass);
  EditField(h,v+=vs,90,"Datums",Normal,TransDate,false,PasteCurDate);
  EditField(h2,v,90,"Laiks",Normal,TransTime,false,PasteCurTime);
  EditField(h,v+=vs,90,"Tips",Normal,RecType,false,SetSClass);
  EditField(h2,v,90,"Kods",Normal,RecCode,false,0);
  ButtonFrame(h,v+=40,120,3,"Statuss");
  RadioButton(h,v,0,0,"Izveidots",StatusFlag);
  RadioButton(h,v+=16,1,0,"Apstiprin‚ts",StatusFlag);
  RadioButton(h,v+=16,2,0,"Noraid´ts",StatusFlag);
  EndWindow;

  WindowBegin("Pas‚kumi",JALEventLClass,CGmlist,-);
  SpawnClass(JALEventDClass);
  SetWRect(64,80,560,350);
  Sizeable(-1,-1,0,0);
  UseView(JALEventVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,2,"S•r.Nr.",SerNr,false,SerNr);
  RlColKey(100,100,"Datums",StartDate,False,StartDate);
  RlCol(200,200,"Koment‚rs",Comment,False);
  SearchField("Mekl•t");
  EndWindow;

  WindowBegin("Pas‚kumi",JALEventSClass,CGslist,-);
  SpawnClass(JALEventDClass);
  SetWRect(64,80,560,350);
  Sizeable(-1,-1,0,0);
  UseView(JALEventVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,2,"S•r.Nr.",SerNr,false,SerNr);
  RlColKey(100,100,"Datums",StartDate,False,StartDate);
  RlCol(200,200,"Koment‚rs",Comment,False);
  SearchField("Mekl•t");
  EndWindow;

  WindowBegin("Pas‚kums",JALEventDClass,CGview,-);
  SetWRect(64,80,740,560);
  UseView(JALEventVc);
  AutoSizeWindow(false);
  v = 10; vs = 22; h = 100; h2 = 300; h3=450;
  EditField(h,v=6,90,"S•r. nr.",Normal,SerNr,false,0);
  EditField(h2,v,90,"Datums",Normal,TransDate,false,PasteCurDate);
  CheckBox(h3-30,v,0,"Akt´vs",ActiveFlag);
  EditField(h,v+=vs,290,"Koment‚rs",Normal,Comment,false,0);
  CheckBox(h3-30,v,0,"Sl•gts",ClosedFlag);  
	
  EditField(h,v+=vs,90,"S‚kuma Datums",Normal,StartDate,false,PasteCurDate);
  EditField(h2,v,90,"Beigu Datums",Normal,EndDate,false,PasteCurDate);
  EditField(h,v+=vs,90,"S‚kuma laiks",Normal,StartTime,false,PasteCurTime);
  EditField(h2,v,90,"Nokl. valoda",Normal,DefLangCode,false,WebNGLanguageSClass);
  EditField(h,v+=vs,90,"Re®istr•äan‚s no",Normal,RegFrom,false,PasteCurDate);
  EditField(h2,v,90,"Re®istr•äan‚s l´dz",Normal,RegUntil,false,PasteCurDate);
  CheckBox(h-5,v+=vs,0,"Tikai re®istr•tiem lietot‚jiem",RegFlag);
  HalPushButton(-300,v,-200,v+20,"NewJALEventTranslationDsm","Jauns tulkojums");
  //HalPushButton(-250,v,-150,v+20,"OpenJALEventTranslationDsm","Atv•rt tulkojumu");
  ButtonFrame(h3+50,v=20,150,7,"Dal´ba");
  RadioButton(h3+50,v,0,0,"Cits",StatusFlag);
  //RadioButton(h3+50,v+=16,1,0,"”nu diena",StatusFlag);
  //RadioButton(h3+50,v+=16,2,0,"TITAN",StatusFlag);
  RadioButton(h3+50,v+=16,3,0,"Cits Baz‚rs ziema",StatusFlag);
  RadioButton(h3+50,v+=16,4,0,"Cits Baz‚rs re®ionos",StatusFlag);
  RadioButton(h3+50,v+=16,5,0,"Cits Baz‚rs pavasar´",StatusFlag);
  RadioButton(h3+50,v+=16,6,0,"Jauno uzÀ•m•ju dienas",StatusFlag);
  RecordList2(10,v+=40,-30,v+=100,"WebNGTranslateVc");
  RlColKey(4,4,"Valoda",LangCode,false,EventLangCode);
  RlColKey(90,90,"Izmain´ts",LastChanged,false,EventLastChanged);
  RlCol(180,180,"K‚rtoäana",Sorting,false);
  RlColKey(270,270,"Koment‚rs",Comment,false,EventComment);


  MatrixBegin(10,v+=20,-30,-40,-,20);
  MatCol(1,32,"Lauks",0,Field,false,JALEventFieldSClass);
  MatCol(1,100,"Koment‚rs",0,Comment,false,0);
  MatCol(1,-100,"Oblig‚ts",0,Req,false,SetSClass);
  MatCol(1,-50,"R‚d´t",0,Show,false,SetSClass);
  EndMatrix;
  HalPushButton(h=10,-35,h+150,-5,"JALCourseEventParticipantsDsm","Dal´bnieku saraksts");

  EndWindow;

  WindowBegin("Pas‚kumu lauki",JALEventFieldLClass,CGmlist,-);
  SpawnClass(JALEventFieldDClass);
  SetWRect(64,80,560,350);
  Sizeable(-1,-1,0,0);
  UseView(JALEventFieldVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,2,"S•r.Nr.",SerNr,false,SerNr);
  RlCol(200,200,"Koment‚rs",Comment,False);
  SearchField("Mekl•t");
  EndWindow;

  WindowBegin("Ievietot pas‚kuma lauku",JALEventFieldSClass,CGslist,-);
  SpawnClass(JALEventFieldDClass);
  SetWRect(64,80,560,350);
  Sizeable(-1,-1,0,0);
  UseView(JALEventFieldVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,2,"S•r.Nr.",SerNr,false,SerNr);
  RlCol(200,200,"Koment‚rs",Comment,False);
  SearchField("Mekl•t");
  EndWindow;

  WindowBegin("Pas‚kuma  lauks",JALEventFieldDClass,CGview,-);
  SetWRect(64,80,560,350);
  UseView(JALEventFieldVc);
  v = 10; vs = 22; h = 100; h2 = 300;
  EditField(h,v=6,90,"S•r. nr.",Normal,SerNr,false,0);
  EditField(h,v+=vs,-20,"Koment‚rs",Normal,Comment,false,0);
  EditField(h,v+=vs,-20,"Teksts",Normal,Text,false,0);
  vm = v+40;
  EditField(h,v+=vs,120,"Tips",Normal,Type,false,SetSClass);
  EditField(h2,v,120,"Izv•lne",Normal,SelectBox,false,JALEventSelectBoxSClass);
  
  MatrixBegin(4,v+=vm,-21,0,-,20);
  MatCol(1,32,"Valoda",0,LangCode,false,WebNGLanguageSClass);
  MatCol(1,100,"Teksts",0,Comment,false,0);
  EndMatrix;

  EndWindow;

    WindowBegin("Pas‚kumu izv•lnes",JALEventSelectBoxLClass,CGmlist,-);
  SpawnClass(JALEventSelectBoxDClass);
  SetWRect(64,80,560,350);
  Sizeable(-1,-1,0,0);
  UseView(JALEventSelectBoxVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,2,"S•r.Nr.",SerNr,false,SerNr);
  RlCol(200,200,"Koment‚rs",Comment,False);
  SearchField("Mekl•t");
  EndWindow;

  WindowBegin("Ievietot pas‚kuma izv•lni",JALEventSelectBoxSClass,CGslist,-);
  SpawnClass(JALEventSelectBoxDClass);
  SetWRect(64,80,560,350);
  Sizeable(-1,-1,0,0);
  UseView(JALEventSelectBoxVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,2,"S•r.Nr.",SerNr,false,SerNr);
  RlCol(200,200,"Koment‚rs",Comment,False);
  SearchField("Mekl•t");
  EndWindow;

  WindowBegin("Pas‚kuma  izv•lne",JALEventSelectBoxDClass,CGview,-);
  SetWRect(64,80,500,250);
  UseView(JALEventSelectBoxVc);
  v = 10; vs = 22; h = 100; h2 = 300;
  EditField(h,v=6,90,"S•r. nr.",Normal,SerNr,false,0);
  EditField(h,v+=vs,-20,"Koment‚rs",Normal,Comment,false,0);  
  EditField(h,v+=vs,-20,"Lauka v•rt´bas",Normal,Text,false,0);  
  MatrixBegin(4,v+=40,-21,-10,-,20);
  MatCol(1,32,"Valoda",0,LangCode,false,WebNGLanguageSClass);
  MatCol(1,100,"Teksts",0,Comment,false,0);
  EndMatrix;

  EndWindow;

  WindowBegin("Pas‚kumu pieteikumi",JALEventEntryLClass,CGmlist,-);
  SpawnClass(JALEventEntryDClass);
  SetWRect(64,80,560,350);
  Sizeable(-1,-1,0,0);
  UseView(JALEventEntryVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,2,"S•r.Nr.",SerNr,false,SerNr);
  RlCol(100,100,"Datums",TransDate,False);
  SearchField("Mekl•t");
  EndWindow;

  WindowBegin("Pas‚kuma pieteikums",JALEventEntryDClass,CGview,-);
  SetWRect(64,80,650,530);
  UseView(JALEventEntryVc);
  v = 10; vs = 22; h = 100; h2 = 280; h3=400;
  EditField(h,v=6,90,"S•r. nr.",Normal,SerNr,false,0);
  EditField(h2,v,90,"Datums",Normal,TransDate,false,PasteCurDate);
  EditField(h,v+=vs,90,"Tips",Normal,CustType,false,SetSClass);
  EditField(h2,v,90,"Kods",Normal,AddCode,false,0);
  EditField(h,v+=vs,90,"Klients",Normal,CustCode,false,CUDClass);
  EditField(h,v+=vs,90,"Pas‚kums",Normal,EventNr,false,0);
  EditField(h,v+=vs,90,"Skolot‚js",Normal,TeacherCode,false,0);
  
  vm = v;
  ButtonFrame(h3,v=20,150,5,"Statuss");
  RadioButton(h3,v,0,0,"Jauns",StatusFlag);
  RadioButton(h3,v+=16,1,0,"Apstiprin‚ts",StatusFlag);
  RadioButton(h3,v+=16,2,0,"Noraid´ts",StatusFlag);
	RadioButton(h3,v+=16,3,0,"Apmekleja",StatusFlag);
	RadioButton(h3,v+=16,4,0,"Apstiprin‚ts - skolot‚js",StatusFlag);
  v = vm;

  MatrixBegin(4,v+=40,-21,-10,-,20);
  MatCol(1,32,"Lauks",0,Field,false,JALEventFieldSClass);
  MatCol(1,100,"Koment‚rs",0,Comment,false,0);
  MatCol(1,240,"V•rt´ba",0,Value,false,SetSClass);
  EndMatrix;
  EndWindow;


 WindowBegin("Elementi",WebNGElementSortedLClass,CGmList,-);
//  DynamicWindow;
  SetWRect(50,50,700,300);
  UseView(WebNGElementVc);
  SpawnClass(WebNGElementDClass);
  v = 6;
  h = 20;
  HalPushButton(h,v,h+90,v+20,"ElementGroupList","Visi elementi");
  pos = 1;
  cnt = 1;
  GetElementGroupAr(procname,labelname,cnt);
  for (i = 0; i < cnt;i = i + 1) begin
    if cnt < 11 then begin
      if pos>5 then begin
        h = 20;
        pos = 1;
        v = v + 30;
      end;
      HalPushButton(h+=100,v,h+90,v+20,procname[i],labelname[i]);
      pos = pos + 1;
    end else begin
      i = cnt;
    end;
  end;
  

  RecordList(4,v+=50,-21,-39);
  RlColKey(6,6,"Kods",Code,false,Code);
  RlCol(150,150,"Koment‚rs",Comment,false);
  SearchField("Mekl•t");
  EndWindow;

  WindowBegin("Elementu grupas",WebElementGroupLClass,CGmList,-);
  SetWRect(50,50,700,300);
  UseView(WebElementGroupVc);
  SpawnClass(WebElementGroupDClass);  

  RecordList(4,17,-21,-39);
  RlColKey(6,6,"Kods",Code,false,Code);
  RlCol(150,150,"Koment‚rs",Comment,false);
  SearchField("Mekl•t");
  EndWindow;

  WindowBegin("Elementu grupas",WebElementGroupSClass,CGsList,-);
  SetWRect(50,50,700,300);
  UseView(WebElementGroupVc);
  SpawnClass(WebElementGroupDClass);  

  RecordList(4,17,-21,-39);
  RlColKey(6,6,"Kods",Code,false,Code);
  RlCol(150,150,"Koment‚rs",Comment,false);
  SearchField("Mekl•t");
  EndWindow;


  
  WindowBegin("Elementu grupa",WebElementGroupDClass,CGView,-);
  SetWRect(80,80,400,280);
  UseView(WebElementGroupVc);
  EditField(h=100,v=6,80,"Kods",Normal,Code,false,0);
  EditField(h,v+=vs,-20,"Koment‚rs",Normal,Comment,false,0);
  EndWindow;

  WindowBegin("Elementu veidnes",WebTemplateLClass,CGmList,-);
  SetWRect(50,50,700,300);
  UseView(WebTemplateVc);
  SpawnClass(WebTemplateDClass);  
  RecordList(4,17,-21,-39);
  RlColKey(6,6,"Kods",Code,false,Code);
  RlCol(150,150,"Koment‚rs",Comment,false);
  SearchField("Mekl•t");
  EndWindow;

  WindowBegin("Ievietot elementa veidni",WebTemplateSClass,CGsList,-);
  SetWRect(50,50,700,300);
  UseView(WebTemplateVc);
  SpawnClass(WebTemplateDClass);  
  RecordList(4,17,-21,-39);
  RlColKey(6,6,"Kods",Code,false,Code);
  RlCol(150,150,"Koment‚rs",Comment,false);
  SearchField("Mekl•t");
  EndWindow;

  
  WindowBegin("Elementu veidne",WebTemplateDClass,CGView,-);
  SetWRect(80,80,600,380);
  UseView(WebTemplateVc);
  vs = 20;
  EditField(h=100,v=6,80,"Kods",Normal,Code,false,0);
  EditField(h,v+=vs,-20,"Koment‚rs",Normal,Comment,false,0);
  EditField(h,v+=vs,-20,"Veidne",Normal,Template,false,WebNGPageSClass);
  MatrixBegin(4,v+=40,-21,-30,-,20);
  MatCol(1,32,"Kods",0,ElementCode,false,WebNGElementSClass);
  MatCol(1,-200,"Tips",0,Type,false,SetSClass);
  MatCol(1,-100,"Tulkojums",0,TransFlag,false,SetSClass);
  EndMatrix;
  EndWindow;

  WindowBegin("Veidot izv•lni",WebNGChildMenuDClass,CGView,-);
  SetWRect(20,100,500,300);
  BrowseButtons(false);
  UseView(WebNGMenuVc);

  EditField(h,v=15,70,"Sagatave",Normal,WebElement,false,WebTemplateSClass);
  EditField(h,v+=vs,70,"Mezgla nosaukums",Normal,Comment,false,0);

  HalPushButton(-300,12,-200,32,"CreateChildMenuBtn","Veidot");
  HalPushButton(-180,12,-80,32,"CreateChildMenuNoBtn","Atcelt");

  EndWindow;

  WindowBegin("Kop•t izv•lni",WebNGDuplicateMenuDClass,CGView,-);
  SetWRect(20,100,500,300);
  BrowseButtons(false);
  UseView(WebNGMenuVc);

  EditField(h,v=15,70,"Sagatave",Normal,WebElement,false,WebTemplateSClass);
  EditField(h,v+=vs,70,"Mezgla nosaukums",Normal,Comment,false,0);

  HalPushButton(-300,12,-200,32,"DuplicateChildMenuBtn","Veidot");
  HalPushButton(-180,12,-80,32,"CreateChildMenuNoBtn","Atcelt");

  EndWindow;

  WindowBegin("Atskaite par skol‚m",JALNewsListRClass,CGRcW,RcType);
  SetWRect(80,80,500,100);
  StaticText(80,45,"Spied OK",false);
  endWindow;

  WindowBegin("Atskaite par skol‚m",ListLostAttachmentsRClass,CGRcW,RcType);
  SetWRect(80,80,500,100);
  StaticText(80,45,"Spied OK",false);
  endWindow;
  
  WindowBegin("P‚rveidot kontaktus",JALMarkasCUVClass,CGMnt,RcType);
  SetWRect(10,90,260,130);
  StaticText(80,25,"Spied OK",false);
  EndWindow;

  WindowBegin("Atskaite par studentiem",StudentAnomaliesRClass,CGRcW,RcType);
  SetWRect(80,80,500,150);
  EndWindow;
  
  WindowBegin("JAL partneri",JALPartnerTClass,CGHBl,-);
  SetWRect(80,80,400,280);
  SetBlid(JALPartnerBlock);
  MatrixBegin(10,20,-30,-10,-,10);
  MatCol(1,25,"Klasifik‚cijas",0,Classification,false,CClassSClass);
  EndMatrix;
  EndWindow;

  WindowBegin("JAL darbinieku amati",JALJobPositionTClass,CGHBl,-);
  SetWRect(80,80,400,280);
  SetBlid(JALJobPositionBlock);
  MatrixBegin(10,20,-30,-10,-,10);
  MatCol(1,25,"Amati",0,JobPosition,false,JobTitleSClass);
  EndMatrix;
  EndWindow;

  WindowBegin("JAL nozares",JALIndustryTClass,CGHBl,-);
  SetWRect(80,80,400,280);
  SetBlid(JALIndustryBlock);
  MatrixBegin(10,20,-30,-10,-,10);
  MatCol(1,25,"Nozare",0,Industry,false,0);
  EndMatrix;
  EndWindow;

  WindowBegin("Semestri",JALSemesterTClass,CGHBl,-);
  SetWRect(80,80,500,280);
  SetBlid(JALSemesterBlock);
  MatrixBegin(10,20,-30,-10,-,10);
  MatCol(1,25,"No",0,DateFrom,false,PasteCurDate);
  MatCol(1,105,"L´dz",0,DateTo,false,PasteCurDate);
  MatCol(1,185,"Gads",0,YearStr,false,0);
  EndMatrix;
  EndWindow;

  WindowBegin("Pas‚kumu ien‚kumi",EventTurnoverLClass,CGmlist,-);
  SpawnClass(EventTurnoverVcDClass);
  SetWRect(64,80,860,350); 
  Sizeable(-1,-1,0,0);
  UseView(EventTurnoverVc);
  RecordList(4,17,-21,-39);
  h = 250; v=0; vs=100; h2 = 550;
  RlColKey(32,32,"Kods",SMUCode,false,MainKey);
  RlCol   (120,120,"Prece",ItemName,false);
  SearchField("Mekl•t");
  EndWindow;
 
  
  WindowBegin("Pas‚kumu ien‚kumi",EventTurnoverVcDClass,CGview,-);
  SetWRect(64,80,860,350);
  UseView(EventTurnoverVc);
  h = 100; v=6; vs=20; h2 = 550;
  Editfield(h,v,100,"Kods",Normal,SMUCode,false,0);
  Editfield(h,v+=vs,100,"Prece",Normal,ItemName,false,0);
  MatrixBegin(10,v=v+vs+50,-30,-10,-,10);
  MatCol(1,32,"Pas‚kums",0,EventType,false,SetSClass);
  MatCol(1,150,"1 vien. paäizm. EUR",0,UCost,false,0);
  MatCol(1,280,"1 vien. cena",0,UPrice,false,0);
  MatCol(1,380,"P‚rdoto vien. sk.",0,SoldUnits,false,0);
  MatCol(1,480,"Ien‚kumi",0,Income,false,0);
  MatCol(1,580,"Izdevumi",0,Costs,false,0);
  MatCol(1,680,"PeºÀa",0,Profit,false,0);
  EndMatrix;
  EndWindow;

  return;
end;

window WebNGMenuDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h1,h2,h3,h4,h5,v,vs;
  WindowBegin("Web Menu",WebNGMenuDClass,CGview,-);
  AutoSizeWindow(false);
  UseView(WebNGMenuVc);
  SpawnClass(WebNGLanguageDClass);
  SetWRect(20,80,500,635);
  vs = 20; h1 = 130; h2 = 300; h3 = 340; h4 = 520; h5 = 370;
  EditField(h1,v=6,100,"Code",Normal,Code,false,0);
  EditField(h3,v,-40,"Parent Menu",Normal,ParentMenu,false,WebNGMenuSClass);
  EditField(h1,v+=vs,-40,"Comment",Normal,Comment,false,0);
  EditField(h1,v+=vs,100,"Link To Structure",Normal,LinkToStruct,false,WebNGStructSClass);
  EditField(h1,v+=vs,-40,"Link To URL",Normal,GoToURL,false,0);
  EditField(h1,v+=vs,150,"Show as Web Element",Normal,WebElement,false,WebNGElementSClass);
  EditField(h1,v+=vs,150,"Extra Arguments",Normal,ExtraArgs,false,0);
  EditField(h3,v,-40,"Target",Normal,Target,false,0);
  EditField(h1,v+=vs,150,"Active Class",Normal,ActMenuClass,false,0);
  EditField(h3,v,-40,"Class",Normal,MenuClass,false,0);
  CheckBox(h1,v+=vs,0,"Show while logged out",ShowWhenLoggedOut);
  CheckBox(h2,v,0,"No Session",NoSession);
  CheckBox(h1,v+=16,0,"Show while logged in",ShowWhenLoggedIn);
//  CheckBox(h2,v,0,"Require login",NeedsLogin);
  MatrixBegin(10,v+=41,-40,-200,INTextRowType,99);
  MatCol(1,24,"Language",0,LangCode,false,WebNGLanguageSClass);
  MatCol(1,84,"Text",0,Text,false,0);
  EndMatrix;
  RecordList2(10,-170,-40,-10,"WebNGMenuVc");
  RlColKey(4,4,"Code",Code,false,Code);
  RlColKey(104,104,"Comment",Comment,false,Comment);
  SpecialMenu("Veidot apakäizv•lni",'n',1,"GenereteChildMenuDsm");
  SpecialMenu("Aizpild´t izv•lni",'w',1,"CreateSubMenuDsm");
  SpecialMenu("Kop•t apakäizv•lni",'t',1,"DuplicateSubMenuDsm");
  EndWindow;
end;



window CUDClass:14
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h1,h2,h3,h4,h5,l,v,vm,vm2,vs;
  string 255 label;
  record CUVc CUr;
  Integer wn,tilenr;
  record ModuleBlock Modb;
  
  BlockLoad(Modb);
  WindowBegin("Kontakts",CUDClass,CGview,-);
  DynamicWindow;
  SetWRect(20,80,850,441);
  Sizeable(-1,-1,0,0);
  UseView(CUVc);
  FormName(PrintCUD);  
  
  wn = CurWindow;
  if (wn>0) then begin
    if (GetWindowClass(wn)=="CUDClass") then begin 
      GetWindowRecord(wn,CUr);
    end;
  end;
  
  if (HasLocalization("EST,GBR,LTU,LVA,NOR")) then begin
  ActiveFieldOnNew("Code"); //dont change, otherwise automatic address lookup helper window wont show automatically //wns
                              // this should not be based on localization, but rather on if the
                              // address lookup is enabled, erik
  end else begin
    ActiveFieldOnNew("Name");
  end;
  if (HasMetroTestFeatures or GUIType!=kGUIMetro) then begin
  CommunicateButton;
  end;
  if (HasJewelleryInterface) then begin
    Tile(0,155,false,"",Code); 
  end else begin
  Tile(0,95,false,"",Code);
  end;
  v = 6; h = 130; l=223; vs = 20; h1=410; h2 = 350; h3 = 430; h4 = 580; h5 = 460;
  EditField(h,v ,   95,"Nr.",Normal,Code,false,TSerSClass);
  EditField(h1,v,50,"Klienta kategorija",Normal,CustCat,false,CCatSClass);
  EditField(h,v+=vs,95,"Kods",Normal,SearchKey,false,0);
  EditField(h1,v,50,"Pieg‚d‚t‚ja kategorija",Normal,VECat,false,VGSClass);
  if (HasJewelleryInterface) then begin
    EditField(h,v+=vs,95,"Uzruna 1",Normal,Salutation1,false,0); 
    EditField(h1,v,50,"Sufikss",Normal,ANACode,false,0); 
    EditField(h,v+=vs,h1-h+50,"Uzruna 2",Normal,Salutation2,false,0); 
    EditField(h,v+=vs,h1-h+50,"Uzruna 3",Normal,Salutation3,false,0); 
  EditField(h,v+=vs,h1-h+50,"Nosaukums",Normal,Name,false,0);
  end else begin
    EditField(h,v+=vs,h1-h+50,"Nosaukums",Normal,Name,false,0);
  end;
  CheckBox(h1+80,v=6,0,"K_lients",CUType);
  CheckBox(h1+80,v+=16,0,"P_ieg‚d‚t‚js",VEType);
  if (HasModHotel) then begin
  CheckBox(h1+80,v+=16,0,"Viesis",GuestType);
  end;
  if (HasJewelleryInterface) then begin
    CheckBox(h1+80,v+=16,0,"Bez masu v•stul•m",NoLetterPosting);  
    CheckBox(h1+80,v+=16,0,"Bez masu e-pastiem",NoMailPosting);  
    EditField(h1+120,v+=20,100,"A®ents",Normal,SalesMan,false,UserSClass);  
  end;
  v=6;
  if (HasModHRM or IsEnterprise) then begin
    CheckBox(h1+180,v,0,"Darbinieks",EmployeeType); v = v + 16;
  end;
  if (StandardHansa==false) then begin
    CheckBox(h1+180,v,0,"Partneris",DealerType);  
  end;
  CheckBox(h1+180,v+=16,0,"Iesp•ja",LeadType);
//  HalPushButton(h1+170,v=10,h1+170+100,v+20,"CreditInfoCUDsm","Credit Info");
  CheckBox(h1+280,v=6,0,"Fili‚le",BranchType);

//  HalPushButton(h1+170,v=10,h1+170+100,v+20,"CreditInfoCUDsm","");
//  HalPushButton(h1+170,v=10,h1+170+100,v+20,"UpdCustomerAddressCUDsm","Update Address");
  tilenr = 1;
  TileButton(tilenr,"Kontaktinf."); tilenr = tilenr + 1;
//CUST-BEGIN  
  TileButton(tilenr,"JAL"); tilenr = tilenr + 1;  
//CUST-END
  TileButton(tilenr,"Pieg‚de"); tilenr = tilenr + 1;  
  TileButton(tilenr,"Nosac."); tilenr = tilenr + 1;  
  TileButton(tilenr,"Cenas"); tilenr = tilenr + 1;  
  TileButton(tilenr,"Komp‚nija"); tilenr = tilenr + 1;  
  TileButton(tilenr,"Konti"); tilenr = tilenr + 1;  
  TileButton(tilenr,"E-ieraksti"); tilenr = tilenr + 1; 
  if (StandardHansa==false) then begin
    TileButton(tilenr,"T´m."); tilenr = tilenr + 1;  
  end;
  TileButton(tilenr,"Koment‚rs"); tilenr = tilenr + 1;  
  if (true) then begin//HasModHotel
    TileButton(tilenr,"Viesis"); tilenr = tilenr + 1;  
  end;
  if (StandardHansa==false) then begin
    if (GuiType==kGuiMetro) then begin//UGLY
      TileButton(tilenr,"Cits"); tilenr = tilenr + 1;  
    end else begin
      TileButton(tilenr,"Liet. def."); tilenr = tilenr + 1;  
    end;
  end;
  TileButton(tilenr,"Piez´mes"); tilenr = tilenr + 1;  
  if (CUr.CUType!=0 and HasCharts) then begin
    TileButton(tilenr,"BI"); tilenr = tilenr + 1;   
  end;
  tilenr = 1;
  Tile(tilenr,290,true,tilenr,InvAddr0); tilenr = tilenr + 1;
  v=6;
  HalPushButton(h+120,v,h+120+100,v+20,"UpdCustomerAddressCUDsm","Atjaunot adresi");
  v=v+10;
  StaticText(h,v+13,"R•úina adrese",false);
  label = UserDefined("CUVc","InvAddr0");
  EditField(h,v+=vs,-20,label,Normal,InvAddr0,false,0);
  label = UserDefined("CUVc","InvAddr1");
  EditField(h,v+=vs,-20,label,Normal,InvAddr1,false,0);
  label = UserDefined("CUVc","InvAddr2");
  EditField(h,v+=vs,-20,label,Normal,InvAddr2,false,0);
  label = UserDefined("CUVc","InvAddr3");
  EditField(h,v+=vs,-20,label,Normal,InvAddr3,false,0);
  label = UserDefined("CUVc","InvAddr4");
  EditField(h,v+=vs,-20,label,Normal,InvAddr4,false,0);
  EditField(h,v+=vs,50,"Valsts",Normal,CountryCode,false,CountrySClass);//tsp-101118
  if (HasLocalization("BRA")) then begin   
    EditField(h2-159,v,214,"",ViewOnly,InvCountryName,false,0);  
    v = v + vs;
  end;  
  EditField(h1,v,-20,"Departaments",Normal,Department,false,0);
  EditField(h,v+=vs,150,"T‚lrunis 1",Normal,Phone,false,0);
  EditField(h1,v,-20,"Fakss",Normal,Fax,false,0);
  EditField(h,v+=vs,150,"T‚lrunis 2",Normal,AltPhone,false,0);
  EditField(h1,v,-20,"Mobilais tel.",Normal,Mobile,false,0);
  EditField(h,v+=vs,150,"Skype v‚rds",Normal,SkypeName,false,0);
  EditField(h1,v,-20,"SIP v‚rds",Normal,SIPCode,false,0);
  EditField(h,v+=vs,150,"E-pasts",Normal,eMail,false,0);  
  EditField(h1,v,-20,"Paplaäin‚jums",Normal,Extension,false,0);
  EditField(h,v+=vs,150,"Sazin‚ties ar",Normal,Person,false,ContactSClass);
  EditField(h1,v,-20,"Interneta lapa",Normal,wwwAddr,false,0);
  EditField(h,v+=vs,-20,"Klasifik‚cija",Normal,Classification,false,CClassSClass);
  if (HasLocalization("CHN")) then begin  
    EditField(h,v+=vs,150,"QQ konta numurs",Normal,QQName,false,0);   
    EditField(h1,v,-20,"Weibo konta numurs",Normal,WeiboName,false,0);   
  end;
  RecordList2(10,v+=40,-30,-39,"ContactRelVc");
  RlColKey(4,4,"Kods",ContactCode,false,ActCustContactCode);
  RlCol(55,55,"Amats",ContactTitle,false);
  RlColKey(105,105,"V‚rds",ContactName,false,ActCustContactName);
  RlCol(235,235,"T‚lr.",ContactPhone,false);
  RlCol(335,335,"Mobilais",ContactMobile,false);
  RlCol(435,435,"Profesija",JobTitle,false);
  RlCol(535,535,"E-pasts",ContacteMail,false);
  //  RlCol(-1,-1,"",Invalid,true);
//CUST-BEGIN
  Tile(tilenr,240,false,tilenr,DelAddr0); tilenr = tilenr + 1;
  EditField(h,v=6,100,"Skola",Normal,SchoolCode,false,0);
  EditField(h,v=v+vs,100,"Skolot‚ja",Normal,TeacherCode,false,0);
  EditField(h,v=v+vs,50,"Klase",Normal,ClassNum,false,0);
  EditField(h+80,v=v,50,"",Normal,ClassChar,false,0);
  EditField(h,v=v+vs,100,"Alga",Normal,Salary,false,0);
  EditField(h,v=v+vs,100,"Amats",Normal,JobDesc,false,0);

  CheckBox(h,v=v+30,0,"Zem 13 gadu vecuma",AgeFlag);
  EditField(h,v=v+vs,150,"Vec‚ka v‚rds",Normal,ParentName,false,0);
  EditField(h,v=v+vs,150,"Vec‚ka uzv‚rds",Normal,ParentSurName,false,0);
  EditField(h,v=v+vs,150,"Vec‚ka e-pasts",Normal,ParenteMail,false,0);
  
  ButtonFrame(h,v=v+40,150,3,"Apstiprin‚ts");
  CheckBox(h,v=v,0,"Skol•ns",ConfirmSKL);
  CheckBox(h,v=v+16,0,"Vec‚k/aizbildnis",ConfirmPar);
  CheckBox(h,v=v+16,0,"Skolot‚js",ConfirmTeach);
//CUST-END
  Tile(tilenr,240,false,tilenr,DelAddr0); tilenr = tilenr + 1;
  v=6;
  if (HasLocalization("CAN,GBR,LVA,EST,SWE,USA")) then begin
  HalPushButton(h+120,v,h+120+100,v+20,"UpdDeliveryAddressCUDsm","Atjaunot adresi");
  end;
  v=v+12;
  StaticText(h,v+13,"Pieg‚des adrese",false);
  label = UserDefined("CUVc","DelAddr0");
  EditField(h,v+=vs,-20,label,Normal,DelAddr0,false,0);
  label = UserDefined("CUVc","DelAddr1");
  EditField(h,v+=vs,-20,label,Normal,DelAddr1,false,0);
  label = UserDefined("CUVc","DelAddr2");
  EditField(h,v+=vs,-20,label,Normal,DelAddr2,false,0);
  label = UserDefined("CUVc","DelAddr3");
  EditField(h,v+=vs,-20,label,Normal,DelAddr3,false,0);
  label = UserDefined("CUVc","DelAddr4");
  EditField(h,v+=vs,-20,label,Normal,DelAddr4,false,0);  
  EditField(h,v+=vs,50,"Valsts",Normal,DelCountry,false,CountrySClass);
  if (HasLocalization("BRA")) then begin   
    EditField(h2-159,v,203,"",ViewOnly,DelCountryName,false,0);  
    v = v + vs;
  end;    
  EditField(h2+50,v,-20,"Pasðt. koment‚rs",Normal,OrderComment,false,0);
  EditField(h,v+=vs,120,"Kravas Nr.",Normal,FreightNr,false,0);
  EditField(h2+50,v,70,"Re®ions",Normal,Region,false,RegionSClass); 
  EditField(h,vm=(v+=vs),120,"Klienta nosðt. nosac.",Normal,ShipDeal,false,ShipDealSClass);
  EditField(h2+50,v,70,"Nosðt´äanas tips",Normal,VEShipDeal,false,ShipDealSClass); 
  EditField(h,v+=vs,120,"Klienta nosðt. veids",Normal,ShipMode,false,DMSClass);
  EditField(h2+50,v,70,"Nosðt´äanas veids",Normal,VEShipMode,false,DMSClass); 
  EditField(h,v+=vs,120,"Maräruts",Normal,Sorting,false,DelRouteSClass);
/* these fields were used for securities trading, this module doesnt exist in hansa anymore */
/* Two of these fields are used in Russia and Ukraine */
//  EditField(h,vm=(v+=vs),120,"Securities Acc.",Normal,SecAccount,false,0);
//  EditField(h,v+=vs,120,"Bank Account",Normal,BankAccount,false,0);//xx
//  EditField(h,v+=vs,120,"Account Operator",Normal,AccOperator,false,BankSClass);//xx
//##  EditField(h,v+=vs ,70, "Com. Matrix",Normal,ComCode,false,ComSClass);
  ButtonFrame(h5+30,v=vm,150,2,"Nosðt. dat., pamatojoties uz");
  RadioButton(h5+30,v,0,0,"Paäreiz•jo datumu",DeliveryBasedOn);
  RadioButton(h5+30,v+=16,1,0,"Pl‚noto nosðt. datumu",DeliveryBasedOn);  
  Tile(tilenr,190,false,tilenr,PayDeal); tilenr = tilenr + 1;
  EditField(h,v=6,35,"Klienta sam. term",Normal,PayDeal,false,PDSClass);
  EditField(h,v+=vs,80,"Klienta kred´tlimits",Normal,CreditLimit,true,0);
  EditField(h,v+=vs,80,"Kl. kred´tlimita dienas",Normal,CreditLimitDays,false,0);
  EditField(h,v+=vs,80,"Klienta pieg. kods",Normal,TheirCode,false,0);  
  EditField(h,v+=vs,80,"R•úina adres‚ts",Normal,InvoiceToCode,false,CUSClass);
//  EditField(h,v+=vs,80,"On Account A/C",Normal,ANACode,false,0);
  EditField(h,v+=2*vs,80,"Soda %",Normal,IntRate,false,0);
  EditField(h,v+=vs,80,"Izveides datums",ViewOnly,DateCreated,false,0);
  EditField(h,v+=vs,80,"Galv. partneris",Normal,MainPartner,false,CUSClass);
  EditField(h2,v=6,35,"Pieg. sam. term.",Normal,VEPayDeal,false,PDSClass);
  EditField(h2,v+=vs,80,"Pieg. kred´tlimits",Normal,VECreditLimit,true,0);
  EditField(h2,v+=vs,80,"Pieg. kred´tlimita dienas",Normal,VECreditLimitDays,false,0);
  EditField(h2,v+=vs,80,"Pieg. klienta kods",Normal,VECustID,false,0);  
  EditField(h2,v+=vs,80,"R•úina adres‚ts",Normal,VEInvoiceToCode,false,VESClass);
  EditField(h2,v+=vs,80,"Faktorings",Normal,VEFactoring,false,VESClass);
  EditField(h2,v+=vs,80,"Min. pasðt. summa",Normal,MinOrdSum,false,0);
  EditField(h2,v+=vs,80,"Atsauksme",Normal,RefStr,false,0);
  EditField(h2,v+=vs,80,"P•d•j‚s izmaiÀas",Normal,DateChanged,false,0);
  CheckBox(h5,v=12,0,"Sl•gts",blockedFlag);
  CheckBox(h5,v+=16,0,"Dar´jumi aptur•ti",OnHoldFlag);
  CheckBox(h5,v+=16,0,"Atg‚din‚jumi",RemndrFlag);
//  CheckBox(h5,v+=16,0,"Iekas•ts",ColectionFlag);
  CheckBox(h5,v+=16,0,"Soda nauda",InterestFlag);
  CheckBox(h5,v+=16,0,"Priekäapmaksas",OnAccount);
  if (StandardHansa==false) then begin
  CheckBox(h5,v+=16,0,"Bez faktoringa",NoFactoringFlag);
  CheckBox(h5,v+=16,0,"Bez papildnod.",NoTax1);
  CheckBox(h5,v+=16,0,"Tikai apvien. r•ú.",GroupInv);
  CheckBox(h5,v+=16,0,"Paäu r•úini",SelfBilling);
    CheckBox(h5,v+=16,0,"Piem•rots úimiskai uzglab‚äanai",ChemicalStorageApproved);  
  CheckBox(h4,v=12,0,"EGO klients",EGOFlag);
  CheckBox(h4,v+=16,0,"EDI klients",EDIFlag);
  CheckBox(h4,v+=16,0,"Atºaut piesl•gties",AllowLogin);
//  CheckBox(h4,v+=16,0,"Atºaut piesl•gties FTP",FTPLogin);
  CheckBox(h4,v+=16,0,"Tikai fisk‚lie ‹eki",FiscalFlag);
  CheckBox(h4,v+=16,0,"Neiekº. v•st. kopsar.",NoLetterPosting);
  end else begin
    CheckBox(h4,v=12,0,"Neiekº. v•st. kopsar.",NoLetterPosting);  
  end;
  CheckBox(h4,v+=16,0,"Neiekº. epasta kops.",NoMailPosting);
  CheckBox(h4,v+=16,0,"Bez vides nodokºa",NoRepa);
  if (HasLocalization("GBR,LTU,POL,LVA")) then begin
    CheckBox(h4,v+=16,0,"Reversais #PVN#",RvrsVAT);
  end;
  if (HasExtTax) then begin
  CheckBox(h4,v+=16,0,"Bez re®iona nodokºa",NoTax2);
  end;
  Tile(tilenr,110,false,tilenr,PLCode); tilenr = tilenr + 1;
  EditField(h,v=6,  80,"Real. valðta",Normal,CurncyCode,false,CurncyCodeSClass);
  EditField(h,v+=vs ,80, "Cenu lapa",Normal,PLCode,false,PLDefSClass);
  EditField(h,v+=vs ,80, "Atlaiìu matrica",Normal,RebCode,false,RebSClass);
  if (HasSalesman or HasSalesmanBonus) then begin
  EditField(h,v+=vs,80,"A®ents",Normal,SalesMan,false,UserSClass);
  end;
  EditField(h,v+=vs,80,"Nokl. artikuli",Normal,CompItemCode,false,CompItemSClass);
  EditField(h2,v=6,80,"Ieg. valðta",Normal,VECurncyCode,false,CurncyCodeSClass);
  EditField(h2,v+=2*vs ,80, "Pieg. atl. matrica",Normal,VERebCode,false,RebSClass);
  if (HasSalesGroup) then begin
  EditField(h2,v+=vs,80,"A®entu grupa",Normal,SalesGroup,false,SalesGroupSClass);
  end;
  ButtonFrame(h5,v=24,150,3,"Cenas p•c");
  RadioButton(h5,v,0,0,"Pasðt´juma datuma",PriceBasedOn);
  RadioButton(h5,v+=16,1,0,"Pl‚not‚ nosðt´äanas dat.",PriceBasedOn);
  RadioButton(h5,v+=16,2,0,"Izveäanas datuma",PriceBasedOn);  
  Tile(tilenr,180,false,tilenr,Comment); tilenr = tilenr + 1;
  EditField(h,v=6,-20,"Koment‚rs",Normal,Comment,false,0);
  EditField(h,v+=vs,-20,"Real. br´din‚jums",Normal,WarnText1,false,0);
  EditField(h,v+=vs,-20,"Pieg. br´din‚jums",Normal,VEWarnText1,false,0);
  EditField(h,v+=vs,120,"PVN re®. Nr.",Normal,VATNr,false,0);  
  EditField(h2-20,v,120,"Re®. Nr.1",Normal,RegNr1,false,0);
  ButtonFrame(h5+30,v+18,143,1,"Tips");  
  RadioButton(h5+30,v+18,0,0,"Komp‚nija",CustType);  
  RadioButton(h5+110,v+18,1,0,"Persona",CustType);  
  v = v + vs;
	EditField(h,v,120,"Valsts PVN Re®. Nr.",Normal,CountryVATNr,false,0);
  EditField(h2-20,v,120,"Re®. Nr.2",Normal,RegNr2,false,RegDefSClass);  
  EditField(h,v+=vs,120,"PVN Nr. p‚rb. dat.",Normal,VATNrCheckDate,false,PasteCurDate);  
  EditField(h2-20,v,120,"GVN",Normal,RecipientGLN,false,0); 
  if (HasLocalization("HRV,SVN")) then begin 
    EditField(h,v+=vs,120,"Juridisk‚ forma",Normal,LegalForm,false,CULegalFormSClass);
  end;  
  EditField(h,v+=vs,20,"Real. PVN kods",Normal,VATCode,false,VATCodeSClass);
  if (HasTaxMatrix) then begin
  EditField(h+135,v,50,"Real. nod.veidne",Normal,TaxTemplateCode,false,TaxTemplateSClass);
  end;
  HalPushButton(h2-10,v,h2-10+100,v+20,"UpdCustomerAddressCUDsm","Atjaunot adresi");
  EditField(h,v+=vs,20,"Pieg. PVN kods",Normal,VEVATCode,false,VATCodeSClass);
  if (HasTaxMatrix) then begin
  EditField(h+135,v,50,"Pieg. nod.veidne",Normal,VETaxTemplateCode,false,TaxTemplateSClass);
  end;
  EditField(h,v+=vs,50,"Valoda",Normal,LangCode,false,LangSClass);  
  EditField(h2-20, v,50,"Biznesa daba",Normal,BusinessNature,false,BNSClass); 
  EditField(h,v+=vs, 260,"UzÀ•mums",Normal,BusinessEntity,false,SetSClass); 
  if (HasLocalization("ARG")) then begin 
	  ButtonFrame(h+125,v+=20,177,4,"Nodokºu nosac´jumi "); 
    RadioButton(h+125,v,2,0,"Bez ieraksta",TaxCondition); 
    RadioButton(h+125,v+=16,0,0,"Viet•jais",TaxCondition); 
    RadioButton(h+125,v+=16,1,0,"Daudzpus•js l´gums",TaxCondition); 
    RadioButton(h+125,v+=16,3,0,"Simplified Taxpaying Regimen",TaxCondition);    
  end;  
  if (HasLocalization("BRA")) then begin  
    EditField(h,v+=vs,120,"SUFRAMA Re®. Nr.",Normal,SuframaRegNr,false,0);  
  end;
//  EditField(h,v+=vs,120,"Kan‚ls",Normal,WebServiceChannel,false,SetSClass);
  v = 130;
  v = VATZoneButtonsLabelslat(h5+30,v,170,16);
  Tile(tilenr,130,false,tilenr,AccAP); tilenr = tilenr + 1;
  EditField(h,v=6,80,"Kreditoru konts",Normal,AccAP,false,AccSClass);
  EditField(h,v+=vs,80,"Izmaksu konts",Normal,AccCost,false,AccSClass);
  EditField(h,v+=vs,80,"Kred. priekä. konts",Normal,OnAccAccAP,false,AccSClass);
  EditField(h,v+=vs,120,"Real. objekti",Normal,Objects,false,ObjSClass);
  EditField(h,v+=vs,120,"Pieg. objekti",Normal,VEObjects,false,ObjSClass);  
  EditField(h,v+=vs,50,"Maks‚juma uzd. kods",Normal,PaymentCode,false,PaymentCodeSClass);  
  EditField(h,v+=vs,50,"Nodokºu atvieglojumi",Normal,TaxExemption,false,TaxExemptionsSClass); 
  if (HasLocalization("HRV,HUN,POL,SRB,SLV,SVN")) then begin
  ButtonFrame(h,v+=40,150,3,"Gr‚matot maks‚juma PVN");  
  RadioButton(h,v,0,0,"Noklus•juma",IPBookVAT);  
  RadioButton(h,v+=16,1,0,"Gr‚matot PVN",IPBookVAT);  
  RadioButton(h,v+=16,2,0,"Negr‚matot PVN",IPBookVAT);  
  end;
  EditField(h1,v=6,200,"IBAN kods",Normal,IBANCode,false,0);  
  EditField(h1,v+=vs,-20,"Banka",Normal,AccOperator,false,BankSClass);  
  EditField(h1,v+=vs,-20,"Bankas konts",Normal,BankAccount,false,0);  
  EditField(h1,v+=vs,-20,"Bankas konts 2",Normal,Bank,false,0);  
  EditField(h1,v+=vs,80,"K‚rt. atsl.",Normal,SortCode,false,0);
  if (HasWithholdingTax) then begin
  EditField(h1,v+=vs,120,"Ietur•juma samaksas veidi",Normal,WithPayMode,false,PMSClass);
  end;
  if (HasLocalization("HRV,HUN,POL,SRB,SLV,SVN")) then begin
    ButtonFrame(h1,v+=60,150,3,"Gr‚matot maks‚juma uzd. PVN");
  RadioButton(h1,v,0,0,"Noklus•juma",OPBookVAT);  
  RadioButton(h1,v+=16,1,0,"Gr‚matot PVN",OPBookVAT);  
  RadioButton(h1,v+=16,2,0,"Negr‚matot PVN",OPBookVAT);  
  end;  
  Tile(tilenr,170,false,tilenr,ANACode); tilenr = tilenr + 1;
  StaticText(h,v=20,"E-r•úini",true); 
  EditField(h,vm=(v+=10),80,"E-r•úinu konts",Normal,ANACode,false,0); 
  EditField(h,v+=vs,80,"Alt. E-r•úinu konts",Normal,eInvAlternativeAccount,false,0);

  ButtonFrame(h,v+=40,163,1,"R•úina veids"); 
  RadioButton(h,v,kEInvoiceRcvPreferenceDefault,0,"Noklus•juma",eInvRcvPref); 
  RadioButton(h,v+=16,kEInvoiceRcvPreferenceElectronic,0,"Elektroniskais",eInvRcvPref); 
  if (HasLocalization("LVA")) then begin
    RadioButton(h,v+=16,kEInvoiceRcvPreferenceEMail,0,"e-pasts",eInvRcvPref); 
    RadioButton(h,v+=16,kEInvoiceRcvPreferencePaper,0,"Pap´ra r•úins",eInvRcvPref); 
    RadioButton(h,v+=16,kEInvoiceRcvPreferenceInternetBank,0,"Internete banka",eInvRcvPref); 
  end else begin
  if (HasLocalization("FIN,NOR,SWE")) then begin
    RadioButton(h,v+=16,kEInvoiceRcvPreferenceEMail,0,"E-pasts",eInvRcvPref);
  end else begin
    RadioButton(h,v+=16,kEInvoiceRcvPreferencePaper,0,"Pap´ra",eInvRcvPref); 
    end;
  end;  
  if (Modb.InterCompany) then begin
    RadioButton(h,v+=16,kEInvoiceRcvPreferenceInternal,0,"Iekä•jais",eInvRcvPref); 
    EditField(h+130,v,30,"",Normal,eInvRcvToCompanyCode,false,Companies2SClass);
  end;
  RadioButton(h,v+=16,kEInvoiceRcvPreferenceNone,0,"NesaÀemt",eInvRcvPref); 
  EndFrame;
  if (HasLocalization("EST,LTU")) then begin
    ButtonFrame(h,v+=40,143,1,"Papildu pieg‚de (nav oblig.)"); 
    RadioButton(h,v,kEInvoiceRcvPreferenceDefault,0,"Neizmantot",eInvAltRcvPref); 
    RadioButton(h,v+=16,kEInvoiceRcvPreferenceElectronic,0,"Elektronisks r•úins",eInvAltRcvPref); 
    RadioButton(h,v+=16,kEInvoiceRcvPreferencePaper,0,"Reúins pap. form‚",eInvAltRcvPref); 
    RadioButton(h,v+=16,kEInvoiceRcvPreferenceEMail,0,"E-pasts",eInvAltRcvPref); 
    RadioButton(h,v+=16,kEInvoiceRcvPreferenceInternetBank,0,"Internetbanka",eInvAltRcvPref); 
    EndFrame;
  end;
  vm2 = v;

  CheckBox(h1,v=vm,0,"Nesðt´t e-r•úinus",eInvStop); 
  if (HasLocalization("FIN")==false) then begin
    CheckBox(h1,v+=16,0,"E-r•úini ar pdf failiem",eInvAttachPDF); 
    ButtonFrame(h1,v+=44,143,3,"Pasta tarifs pap´ra r•úiniem"); 
  end else begin
    ButtonFrame(h1,v+=60,143,3,"Pasta tarifs pap´ra r•úiniem"); 
  end;
  RadioButton(h1,v,2,0,"Noklus•juma",eInvPostage); 
  RadioButton(h1,v+=16,0,0,"Priorit‚rs",eInvPostage); 
  RadioButton(h1,v+=16,1,0,"Ekonomisks",eInvPostage); 
  if (HasLocalization("EST,LTU")) then begin
    CheckBox(h1,v+=84,0,"Sa´sin‚ti e-r•úini",eInvShortNote); 
  end;
  StaticText(h,v=(vm2+40),"Pieg‚d‚t‚ju pasðt´jumi",true);
  ButtonFrame(h,v+=20,163,3,"SaÀemäanas veids"); 
  RadioButton(h,v,kPORcvPreferenceNone,0,"NesaÀemt",ePORcvPref); 
  RadioButton(h,v+=16,kPORcvPreferenceDefault,0,"Noklus•juma",ePORcvPref); 
  if (Modb.InterCompany) then begin
  RadioButton(h,v+=16,kPORcvPreferenceInternal,0,"Iekä•j‚ komp‚nija",ePORcvPref); 
  EditField(h+130,v,30,"",Normal,ePORcvToCompanyCode,false,Companies2SClass);
  end;
  EndFrame;

  if (StandardHansa==false) then begin
    Tile(tilenr,70,false,tilenr,WebConf); tilenr = tilenr + 1;
  EditField(h,vm=(v=6),120,"Interneta konf.",Normal,WebConf,true,0);
  EditField(h1,v,150,"Galven‚ klasifik‚cija",Normal,MainDispGroup,false,WebNGProductCatSClass);
  EditField(h,v+=vs,120,"Web s‚kuma lapa",Normal,WebStartPage,false,0);
  EditField(h1,v,150,"R‚d´t m‚jas lap‚",Normal,WebDisplays,false,WebDisplaySClass);
  EditField(h,v+=vs,120,"Pieg‚des kods",Normal,FreightCode,false,WebFreightSClass);
    EditField(h1,v,150,"T´mekºa objekta tips",Normal,WebOTCode,false,OTSClass); 
  end;
  Tile(tilenr,170,false,tilenr,Comment0); tilenr = tilenr + 1;
  EditField(h,v=6,-20,"Koment‚rs",Normal,Comment0,false,0);
  EditField(h,v+=vs,-20,"",Normal,Comment1,false,0);
  EditField(h,v+=vs,-20,"",Normal,Comment2,false,0);
  EditField(h,v+=vs,-20,"Tituls",Normal,Title,false,CourtesyTitlesSClass);
  EditField(h,v+=vs,-20,"Amats",Normal,JobDesc,false,JobTitleSClass);
  EditField(h,v+=vs,-20,"Uzruna 1",Normal,Salutation1,false,0);
  EditField(h,v+=vs,-20,"Uzruna 2",Normal,Salutation2,false,0);
  EditField(h,v+=vs,-20,"Uzruna 3",Normal,Salutation3,false,0);
  if (true) then begin//HasModHotel
    Tile(tilenr,250,false,tilenr,DocType); tilenr = tilenr + 1;
  EditField(h,v=6,100,"Dok. tips",Normal,DocType,false,CUDocTypeSClass);
  EditField(h2,v,-20,"ID",Normal,PassportNr,false,0); 
    EditField(h2,v+=vs,-20,"V‚rds dokument‚",Normal,NameinDocument,false,0); 
//  EditFieldTL(h,vm=(v+=20),100,"Nationality",M4StrSet,Normal,423,Nationality,false,StrSetSClass);
  EditField(h,vm=(v+=20),100,"Taut´ba",Normal,Nationality,false,CountrySClass);
    EditField(h,v+=20,100,"Dzimis",Normal,BirthDate,false,PasteCurDate);
    EditField(h,v+=20,100,"Dzim. vieta",Normal,BirthPlace,false,0);  
    EditField(h,v+=20,100,"Dzim. valsts",Normal,BirthCountry,false,CountrySClass);  
  EditField(h,v+=20,100,"Profesija",Normal,Profesion,false,0);   
  EditField(h,v+=20,100,"Av´ze",Normal,Newspaper,false,NewspaperSClass);
  EditField(h,v+=20,100,"Balss parole",Normal,Passphrase,false,0);
  EditField(h,v+=vs,100,"Tðrisma firma",Normal,TourOperator,false,CUSClass);
  EditField(h,v+=vs,100,"A®ents",Normal,Agent,false,CUSClass);
  EditField(h,v+=vs,100,"Maks‚äanas metode",Normal,DefGuestPayMode,false,PMSClass);
  EditField(h,v+=vs,100,"Noklus. rezerv. avots",Normal,BookOrigin,false,BookOrgSClass);
  EditField(h,v+=vs,300,"Uztura piez´mes",Normal,DietRemarks,false,0);
  EditField(h,v+=vs,300,"Pras´bas",Normal,RequirementRemarks,false,0);

  ButtonFrame(h2,v=vm+20,100,2,"Dzimums");
  RadioButton(h2,v,0,0,"V´rietis",Gender);
  RadioButton(h2,v+=17,1,0,"Sieviete",Gender);

  CheckBox(h2+130,v=vm+20,0,"Sm•ú•t‚js",Smoking);
  CheckBox(h2+130,v+=17,0,"Melnaj‚ sarakst‚",Blacklist);

  ButtonFrame(h2,vm=(v+=40),100,4,"þimenes st‚voklis");
  RadioButton(h2,v,0,0,"Neprec•jies",MarStatus);
  RadioButton(h2,v+=17,1,0,"Prec•jies",MarStatus);
  RadioButton(h2,v+=17,2,0,"áú´ries",MarStatus);
  RadioButton(h2,v+=17,3,0,"Atraitnis",MarStatus);

  ButtonFrame(h2=h2+130,v=vm,100,3,"Vecuma grupa");
  RadioButton(h2,v,1,0,"B•rns",AgeStatus);
  RadioButton(h2,v+=17,0,0,"Pieauguäais",AgeStatus);
  RadioButton(h2,v+=17,2,0,"Pension‚rs",AgeStatus);
  end;
  
  if (StandardHansa==false) then begin
    Tile(tilenr,270,false,tilenr,UserStr1); tilenr = tilenr + 1;
  v=6;h=180;
  label = UserDefined("CUVc","UserStr1");
  if (nonblank(label)) then begin
    EditField(h,v,-20,label,Normal,UserStr1,false,0);
  end;
  label = UserDefined("CUVc","UserStr2");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-20,label,Normal,UserStr2,false,0);
  end;
  label = UserDefined("CUVc","UserStr3");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-20,label,Normal,UserStr3,false,0);
  end;
  label = UserDefined("CUVc","UserStr4");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-20,label,Normal,UserStr4,false,0);
  end;
  label = UserDefined("CUVc","UserStr5");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-20,label,Normal,UserStr5,false,0);
  end;
  label = UserDefined("CUVc","UserVal1");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-20,label,Normal,UserVal1,false,0);
  end;
  label = UserDefined("CUVc","UserVal2");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-20,label,Normal,UserVal2,false,0);
  end;
  label = UserDefined("CUVc","UserVal3");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-20,label,Normal,UserVal3,false,0);
  end;
  label = UserDefined("CUVc","UserDate1");
  if (nonblank(label)) then begin
      EditField(h,v+=vs,80,label,Normal,UserDate1,false,PasteCurDate);
  end;
  label = UserDefined("CUVc","UserDate2");
  if (nonblank(label)) then begin
      EditField(h,v+=vs,80,label,Normal,UserDate2,false,PasteCurDate);
  end;
  label = UserDefined("CUVc","UserDate3");
  if (nonblank(label)) then begin
      EditField(h,v+=vs,80,label,Normal,UserDate3,false,PasteCurDate);
  end;
  
  EditField(h,v+=vs,-20,"Adreäu saraksti",Normal,AddressBooks,false,0);
  end;

  Tile(tilenr,500,false,tilenr,Math2); tilenr = tilenr + 1;
  CheckBox(50,v=6,0,"HTML",HtmlFlag); 
  StaticText(50,v+=30,"Piez´mes",true);
  TextField(60,v-5,-20,370,Math2,0);
  if (CUr.CUType!=0 and HasCharts) then begin
    Tile(tilenr,400,false,tilenr,-); tilenr = tilenr + 1;
    ChartArea(10,6,-10,390,"$CUDCLass_BIChart");  
  end;
  
  if (GuiType==kGuiMetro) then begin // Temporarily disabled on Windows 8
    if (UserCanReport("CustPSRn","",true) and HasCustomerStatusReport) then begin
      SpecialMenu("Klienta statuss",'e',0,"CUStatusCUDsm"); 
    end;
    if (UserCanReport("VEPSRn","",true)) then begin 
      SpecialMenu("Pieg‚d‚t‚ja statuss",'u',4,"VEStatusVEDsm"); 
    end;
    SpecialMenu("Pievienot esoäu kontaktpersonu",' ',1,"AddContactCUDsm"); 
    SpecialMenu("Veidot jaunu kontaktpersonu",' ',1,"NewContactCUDsm"); 
    SpecialMenu("Veidot aktivit‚ti",'c',2,"NewActCUDsm");
  end else begin
    if (UserCanReport("CustPSRn","",true) and HasCustomerStatusReport) then begin
  SpecialMenu("Klienta statuss",'e',0,"CUStatusCUDsm");
  end;
    if (UserCanReport("VEPSRn","",true)) then begin
      SpecialMenu("Pieg‚d‚t‚ja statuss",'u',4,"VEStatusVEDsm");
    end;
  SpecialMenu("Pievienot esoäu kontaktpersonu",' ',1,"AddContactCUDsm");
  SpecialMenu("Dz•st pievienotu kontaktpersonu",' ',1,"DelContactCUDsm");
  SpecialMenu("Labot pievienotas kontaktpers. datus",' ',1,"EditContactCUDsm");
  SpecialMenu("Atjaunot kontaktpersonas",' ',6,"UpdContactAddrCUDsm");
    if (HasLocalization("ARG")) then begin
      SpecialMenu("Atv•rt re®ion‚lo p‚rskatu",' ',1,"RPCUTaxDsm"); 
    end;
    if (HasLocalization("ARG,BRA,ITA,KEN,MEX,PRT,SGP,ZAF")) then begin
      SpecialMenu("Atv•rt #Supplier# ietur•jumus",' ',1,"WHVEDsm"); 
    end; //EMZ
  if (GuiType==kGuiCocoa) then begin
    SpecialMenu("Kop•t uz lok‚lo adreäu gr‚matu",' ',7,"CopyToLocalAddressBookDsm");
  end;
  if (GuiType==kGuiiPhone) then begin
    SpecialMenu("Main´t paroli",' ',1,"ChangePasswdCUDsm");
  end;
    SpecMenuGroup("",kSpecMenuGroupTypeExtendedPlusMenu,0); 
//    SpecialMenu("Activity",'c',2,"NewActCUDsm");
    SpecialMenu("Kontaktpersonu",' ',1,"NewContactCUDsm"); 
    if (StandardHansa==false) then begin
      SpecialMenu("E-pastu",'m',5,"NewMailCUDsm"); 
    end;
    SpecialMenu("Objektu",' ',1,"CreateObjectCUDsm"); 
    SpecialMenu("Paroles paziÀojumu",' ',3,"RandomPassMailCUDsm"); 
  end;
  EndWindow;
  

end;

