//external function string 255 GetCleanName(string);//external inner updating procedure TestAndDeleteMail(record MailVc);updating procedure RemoveCompFromTeacher()begin  record GlobalUserVc GUr,oldGUr;  row GlobalUserVc GUrw;  record TeacherVc TCr;  integer i,rwcnt;    ResetLoop(TCr);  while loopmain(TCr,1,true) begin    GUr.Code = TCr.GlobalUser;    if readfirstmain(GUr,1,true) then begin      RecordCopy(oldGUr,Gur);      rwcnt = MatRowCnt(GUr);      for(i = rwcnt; i > 1; i = i - 1) begin        MatRowGet(GUr,i,GUrw);        MatRowDelete(GUr,i);      end;      if RecordUpdate(oldGUr,GUr,false) == 0 then begin end;    end;  end;return;end;updating procedure DeleteWebContent()begin  record WebNGStructVc WSr;  record WebNGPageVc WPr;  record WebNGElementVc WEr;  record WebNGCountryVc WCr;  record WebNGCompCountryVc WCCr;  record SMFVc  SMFr;  string 255 name;    WSr.Name = "cmp_";    ResetLoop(WSr);    while loopkey("Name",WSr,1,true) begin      if mid(WSr.Name,0,4) == "cmp_" then begin        RecordRemove(WSr);        Stepback(WSr);      end;    end;    WPr.Code = UpperCase("CMP_");    ResetLoop(WPr);    while loopkey("Code",WPr,1,true) begin      if mid(WPr.Code,0,4) == "cmp_" then begin        RecordRemove(WPr);        Stepback(WPr);      end;    end;    WEr.Code = UpperCase("CMP_");    ResetLoop(WEr);    while loopkey("Code",WEr,1,true) begin      if mid(WEr.Code,0,4) == "CMP_" then begin        RecordRemove(WEr);        Stepback(WEr);      end;    end;    WCr.Code = "CMP_";    ResetLoop(WCr);    while loopkey("Code",WCr,1,true) begin      if mid(WCr.Code,0,4) == "CMP_" then begin        RecordRemove(WCr);        Stepback(WCr);      end;    end;    WCCr.CompanyNr = 2;    while loopmain(WCCr,1,true) begin      RecordRemove(WCCr);      Stepback(WCCr);    end;        RemoveCompFromTeacher;return;end;updating procedure DeleteUsers()begin  record UserVc Userr;  ResetLoop(Userr);  while loopmain(Userr,1,true) begin    RecordRemove(Userr);    StepBack(Userr);  end;return;end;updating procedure DeleteAllContent(row CompaniesBlock Cblrw)begin  integer oldcomp;  oldcomp = CurrentCompany;  SetCompany(StringToInt(Cblrw.CompCode),false);  DeleteUsers;  ResetCompany(oldcomp);  DeleteWebContent;return;end;global updating procedure DeleteCompNewMn(record RcVc RepSpec)begin  record UserVc Userr;  record CompaniesBlock Cbl;  row CompaniesBlock Cblrw;  integer i,rwcnt;  record SMFVc SMFr,oldSMFr;  record MailVc Mailr;  BlockLoad(Cbl);  rwcnt = MatRowCnt(Cbl);  for(i = 1; i < rwcnt; i = i + 1) begin    MatRowGet(Cbl,i,Cblrw);    Cblrw.ShortName = "";    Cblrw.CompName = "";    Cblrw.ActiveStatus = 1;    MatRowPut(Cbl,i,Cblrw);    DeleteAllContent(Cblrw);  end;    ResetLoop(SMFr);  while loopmain(SMFr,1,true) begin    RecordCopy(oldSMFr,SMFr);    SMFr.CompNr = "";    if RecordUpdate(oldSMFr,SMFr,false) == 0 then begin end;  end;  BlockStore(Cbl);return;end;globalupdating procedure ClearJALContentMn(record RCVc RepSpec)begin  record CUVc CUr;  record TeacherVc Tr;  record SMFVc SMFr;  record MentorVc Mr;  record GlobalUserVc GLr;  record JALFileVc JDr;  record ConfVc Confr;   ResetLoop(CUr);  while loopmain(CUr,1,true) begin    RecordDelete(CUr);    StepBack(CUr);  end;  ResetLoop(JDr);  while loopmain(JDr,1,true) begin    RecordDelete(JDr);    StepBack(JDr);  end;  Tr.TeacherCode = "";  while loopmain(Tr,1,true) begin    RecordDelete(Tr);    StepBack(Tr);  end;  SMFr.SMFCode = "";  while loopmain(SMFr,1,true) begin    RecordDelete(SMFr);    StepBack(SMFr);  end;  Mr.MentorCode = "";  while loopmain(Mr,1,true) begin    RecordDelete(Mr);    StepBack(Mr);  end;  resetLoop(Confr);  while loopmain(Confr,1,true) begin    if ((left(Confr.AddrCode,1) == "D") or (left(Confr.AddrCode,2) == "SK")) then begin      RecordDelete(Confr);      StepBack(Confr);    end;  end;  GLr.Code = "";  ResetLoop(GLr);  while loopmain(GLr,1,true) begin    if left(GLr.Code,2) == "SK" then begin      RecordDelete(GLr);      StepBack(GLr);    end;  end;return;end;updating function DeleteAllMailRead(LongInt sernr)begin  record MailReadVc MailReadr;  Boolean TrHs;    LogText(0,"Deleating MailReadVc for mail " & sernr);    TrHs = true;  MailReadr.mailSerNr = sernr;  while (LoopMain(MailReadr,1,TrHs)) begin    if (MailReadr.mailSerNr!=sernr) then begin      LogText(0,"-- Found MailReadVc for mail " & MailReadr.mailSerNr & ", breaking loop");      TrHs = false;    end;    if (TrHs) then begin      LogText(0,"-- Found MailReadVc for mail " & sernr);      RecordDelete(MailReadr);      StepBack(MailReadr);    end;  end;  return;end;updating procedure TestAndDeleteMail(record MailVc Mailr)begin  LongInt i,rwcnt;  row MailVc Mailrw;  record RLinkVc RLr;  string 255 rlink;    RecordDelete(Mailr);  DeleteAllMailRead(Mailr.SerNr);  //DeleteAllMailAttach(Mailr.SerNr);    out:;  return;end;function boolean CanDelete(record MailVc Mailr,array longint arr,integer size)begin  row MailVc Mailrw;  integer i,j,rwcnt;  boolean res;  res = true;  rwcnt = MatRowCnt(Mailr);  for (i = 0; i < rwcnt; i = i + 1) begin    MatRowGet(Mailr,i,Mailrw);    for (j = 0; j< size;j = j + 1) begin      if arr[j] == Mailrw.Mailbox then begin        res = false;        i = rwcnt;      end;    end;  end;   CanDelete = res;return;end;global updating procedure ClearJALMailBoxesMn()begin  record MailVc Mailr,Mail2r;  boolean TrHs;  longint sernr;  array longint arr;  integer size;  TrHs = true;  arr[0] = 8;  arr[1] = 178;  arr[2] = 67;  arr[3] = 78;  size = 4;  ResetLoop(Mailr);  Mailr.SerNr = 999999999;  while loopBackKey("SerNr",Mailr,1,true)and TrHs begin    sernr = Mailr.SerNr;    if (CanDelete(Mailr,arr,size)) then begin      TestAndDeleteMail(Mailr);      Mail2r.SerNr = sernr;      if readfirstmain(Mail2r,1,true) then begin TrHs = false; end else begin logtext(0,"neatrada " & sernr); end;    end;  end;end;global updating procedure FillTeacherSchoolsMn()begin  record TeacherVc TCr,oldTCr;  row TeacherVc TCrw;    while loopmain(TCr,1,true) begin    if blank(TCr.SchoolCode) then begin      recordCopy(oldTCr,TCr);      MatRowGet(TCr,0,TCrw);      TCr.SchoolCode = TCrw.SchoolCode;      TCr.SchoolName = TCrw.SchoolName;      if recordUpdate(oldTCr,TCr,true) then begin end;    end;  end;return;end;