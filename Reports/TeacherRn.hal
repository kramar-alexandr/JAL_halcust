globalprocedure TeacherRn(record RCVc RepSpec)begin  record TeacherVc Tr;  record TeacherVc Tr2;  record SchoolVc Sr;  boolean testf, testsch;  string 20 ckey;  integer cnt,s;  string 40 tstr;  string 20 sort,showstr,region;  record CUVc CUr;  row TeacherVc Trw;  region = "a";  switch (RepSpec.flags[0]) begin    case 0:sort = UsetStr(32296);    case 1:sort = UsetStr(32279);    case 2:sort = UsetStr(32297);  end;  switch (RepSpec.flags[1]) begin    case 0:showstr = UsetStr(32298) & UsetStr(32274);    case 1:showstr = UsetStr(32299) & UsetStr(32274);    case 2:showstr = UsetStr(32292) & UsetStr(32274);  end;    cnt = 0;  StartReportJob(UsetStr(32321));  s = 1;    if (RepSpec.flags[0]<2) then begin	  Header(s,showstr,1);	  s=s+1;	end;	tstr = UsetStr(32281) & sort;    Header(s,tstr,1);	s=s+1;	if (nonblank(RepSpec.f1)) then begin	  Sr.SchoolCode=RepSpec.f1;    if (readfirstmain(Sr,1,true)) then begin	  tstr = Sr.SchoolName;    end;	  Header(s,tstr,1);	  s=s+1;	end;	if (nonblank(RepSpec.f2)) then begin	  tstr = UsetStr(32280) & RepSpec.f2;	  Header(s,tstr,1);	end;  EndHeader;  SetRepCol(0,0);  SetRepCol(1,765);  SetRepCol(2,50);  SetRepCol(3,200);  SetRepCol(4,290);  SetRepCol(5,450);  SetRepCol(6,660);    StartFormat(15);    OutString(0,0,USetStr(12501),false);    OutString(2,0,USetStr(9232),false);    OutString(3,0,USetStr(32295),false);    OutString(4,0,USetStr(12112),false);    OutString(5,0,USetStr(32264),false);    OutString(6,0,UsetStr(17603),false);  EndFormat;  StartFormat(4);    Black_Divider(0,1);  EndFormat;    switch RepSpec.flags[0] begin    case 0: ckey="TeacherName";    case 1: ckey="TeacherCode";    case 2: ckey="SchoolName";    otherwise ckey = "TeacherName";  end;  while loopkey(ckey,Tr,1,true) begin    testf = true;    testsch = true;    if (nonblank(RepSpec.f1) and Tr.SchoolCode != RepSpec.f1) then begin      testf = false;    end;    if ((Tr.Approved == 0 and RepSpec.flags[1] == 1) or (Tr.Approved == 1 and RepSpec.flags[1] == 0)) then begin      testf = false;    end;    if ((cnt == 0) or (RepSpec.flags[0] != 2) or (RepSpec.flags[0] == 2 and Tr2.SchoolName == Tr.SchoolName)) then begin      testsch = false;    end;    Sr.SchoolCode = Tr.SchoolCode;    if (readfirstmain(Sr,1,true)) then begin	  region = Sr.Region;    end else begin	  region = "-";	end;	if (nonblank(RepSpec.f2) and (region != RepSpec.f2)) then begin	  testf = false;	end;    if testf then begin      StartFormat(15);        OutString(0,"TeacherDbl",Tr.TeacherCode,false);        OutString(2,0,Tr.TeacherName,false);        CUr.Code = Tr.CustCode;        if readfirstmain(CUr,1,true) then begin          OutString(3,0,CUr.Phone,false);          OutString(4,0,CUr.eMail,false);        end;        MatRowGet(Tr,0,Trw);        OutString(5,0,Trw.SchoolName,false);        OutString(6,0,region,false);        if testsch then begin          Gray_Divider(0,1);        end;      Endformat;	  cnt = cnt + 1;	  Tr2 = Tr;    end;   end;  StartFormat(4);    Black_Divider(0,1);  EndFormat;  StartFormat(15);    OutString(6,0,UsetStr(32263) & cnt,false);  EndFormat;  EndJob;  return;end;globalprocedure TeacherRClassReportDefaults(Integer wn)begin  record RcVc RepSpec;    DeselectWindow(wn,false);  GetWindowRecord(wn,RepSpec);   RepSpec.flags[0] = 0;  RepSpec.flags[1] = 2;  PutWindowRecord(wn,RepSpec);  SelectWindow(wn);  return;end;