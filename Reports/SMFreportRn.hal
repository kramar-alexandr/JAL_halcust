function string 2 getClassType(string num)begin  string 2 res;  if stringtoint(num) > 9 then begin    res = "V";  end else begin    res = "P";  end;  getClassType = res;return;end;procedure DocPoints(record SMFVc SMFr,integer pos,integer c)begin  record JALFileVc JFr;  integer res;  boolean TrHs;  integer p,cnt;  p = pos;  cnt = 0;  TrHs = true;  res = 0;  JFr.SMFCode = SMFr.SMFCode;  while loopkey("SMFCode",JFr,1,TrHs) begin    if JFr.SMFCode <> SMFr.SMFCode then begin      TrHs = false;    end else begin      cnt = cnt + 1;      if JFr.Status == 2 then begin        res = res + JFr.Score;      end;    end;  end;  if cnt > 0 then begin    OutString(p,0,"Ir",false);p = p + c;  end else begin    OutString(p,0,"Nav",false);p = p + c;  end;  OutString(p,0,res,false);p = p + c;return;end;globalprocedure SMFRn(record RCVc RepSpec) begin  record SMFVc SMFr;  record CUVc CUr;  record RLinkVc RLr;  boolean testf;  integer cnt,cntpup,s,i,j;  string 70 showstr,Type,tstr;  string 255 cunametest;  integer st,p,c,rwcnt;  row SMFVc SMFrw;  record TeacherVc TCr;  st = 20;  c = 50;          switch (RepSpec.flags[1]) begin    case 0:showstr = UsetStr(32289);    case 1:showstr = UsetStr(32290);    case 2:showstr = UsetStr(32291);    case 3:showstr = UsetStr(32292);  end;  switch (RepSpec.flags[2]) begin    case 0:Type = UsetStr(32285);    case 1:Type = UsetStr(32286);    case 2:Type = UsetStr(32287);    case 3:Type = UsetStr(32288);  end;    i = 0;  j = 0;  cntpup = 0;  cnt = 0;  s = 1;  StartReportJob(UsetStr(32322));	 if (RepSpec.flags[1]<3) then begin	   Header(s,showstr,1); s=s+1;	 end;	 tstr = UsetStr(32293) & Type;	 Header(s,tstr,1);	 s = 3;	 if (nonblank(RepSpec.f1)) then begin	   tstr = UsetStr(32294) & RepSpec.f1;	   Header(s,tstr,1);	   s=s+1;	 end;	 if (nonblank(RepSpec.f2)) then begin	   tstr = UsetStr(32280) & RepSpec.f2;	   Header(s,tstr,1);	 end;   EndHeader;  SetRepCol(0,0);  SetRepCol(1,765);  SetRepCol(2,120);  SetRepCol(3,300);  SetRepCol(4,400);  SetRepCol(5,490);  SetRepCol(6,610);  SetRepCol(7,680);  SetRepCol(8,700);  SetRepCol(9,750);  StartFormat(15);    OutString(p,0,USetStr(32260),false);p = p + c;    OutString(p,0,USetStr(12164),false);p = p + c;    OutString(p,0,USetStr(32463),false);p = p + c;    OutString(p,0,USetStr(32464),false);p = p + c;    OutString(p,0,USetStr(10338),false);p = p + c;    OutString(p,0,USetStr(17603),false);p = p + c;    OutString(p,0,USetStr(32460),false);p = p + c;    OutString(p,0,USetStr(23213),false);p = p + c;    OutString(p,0,USetStr(32465),false);p = p + c;    OutString(p,0,USetStr(32466),false);p = p + c;    //OutString(p,0,USetStr(10839),false);p = p + c;    if (RepSpec.flags[5]==1) begin      for (i = 0; i < 5; i = i + 1) begin        OutString(p,0,USetStr(32455) & " " & (i+1),false);p = p + c;        OutString(p,0,USetStr(10839),false);p = p + c;      end;    end;    for (i = 0; i < 5; i = i + 1) begin      OutString(p,0,USetStr(32462) & " " & (i+1),false);p = p + c;      OutString(p,0,USetStr(11611),false);p = p + c;      OutString(p,0,USetStr(10839),false);p = p + c;    end;  EndFormat;  StartFormat(4);    Black_Divider(0,1);  EndFormat;  while (loopkey("SMFCode",SMFr,1,true)) begin    testf = true;    if (nonblank(RepSpec.f1) and (SMFr.SchoolCode!=RepSpec.f1)) then begin      testf = false;    end;	    if (nonblank(RepSpec.f2) and (SMFr.Region!=RepSpec.f2)) then begin      testf = false;    end;        	    switch RepSpec.flags[1] begin      case 0: if (SMFr.StatusFlag != 0) then begin testf = false; end;      case 1: if (SMFr.StatusFlag != 1) then begin testf = false; end;      case 2: if (SMFr.StatusFlag != 2) then begin testf = false; end;    end;    switch RepSpec.flags[2] begin      case 0: if (SMFr.TypeFlag != 0) then begin testf = false; end;      case 1: if (SMFr.TypeFlag != 1) then begin testf = false; end;      case 2: if (SMFr.TypeFlag != 2) then begin testf = false; end;    end;    if testf then begin      p = st;      StartFormat(15);        OutString(p,"SMFDbl",SMFr.SMFCode,false);p = p + c;        OutString(p,0,SMFr.SMFName,false);p = p + c;        OutString(p,0,SMFr.SchoolName,false);p = p + c;                OutString(p,0,getClassType(SMFr.ClassNum),false);p = p + c;                OutString(p,0,SMFr.TypeName,false);p = p + c;        OutString(p,0,SMFr.Region,false);p = p + c;        OutString(p,0,SMFr.ProdSpec,false);p = p + c;        OutString(p,0,SMFr.StatusName,false);p = p + c;        DocPoints(SMFr,p,c);        /*CUr.Code = SMFr.CustCode;p = p + c;        if readfirstmain(CUr,1,true) then begin          OutString(p,0,CUr.eMail,false);p = p + c;        end else begin          OutString(p,0,"",false);p = p + c;        end;        */        //OutString(p,0,SMFr.TeacherName,false);p = p + c;      /*EndFormat;      StartFormat(1);        Gray_Divider(2,1);      EndFormat;*/      if (RepSpec.flags[5]==1) begin        i = 1;                while (ReadRecordLink(SMFr,i,CUr,RLr)) begin          OutString(p,0,CUr.Name,false);p = p + c;          OutString(p,0,CUr.eMail,false);p = p + c;          i = i + 1;        end;        for (i = i; i < 6; i = i + 1) begin          OutString(p,0,"",false);p = p + c;          OutString(p,0,"",false);p = p + c;        end;      end;        rwcnt = MatRowCnt(SMFr);      for (i = 0; i < rwcnt; i = i + 1) begin        MatRowGet(SMFr,i,SMFrw);        if SMFrw.Type == 0 then begin          TCr.TeacherCode = SMFrw.Code;          if readfirstmain(TCr,1,true) then begin            CUr.Code = TCr.CustCode;            if readfirstmain(CUr,1,true) then begin              OutString(p,0,CUr.Name,false);p = p + c;              OutString(p,0,CUr.Phone,false);p = p + c;              OutString(p,0,CUr.eMail,false);p = p + c;            end;          end;         end;      end;      endformat;	  cnt = cnt + 1;    end;   end;  StartFormat(1);  Black_divider(0,1);  endformat;  StartFormat(15);    OutString(0,0,UsetStr(32263) & cnt,false);  EndFormat;  EndJob;  return;end;  globalprocedure SMFRClassReportDefaults(Integer wn)begin  record RcVc RepSpec;    DeselectWindow(wn,false);  GetWindowRecord(wn,RepSpec);   RepSpec.flags[1] = 3;  RepSpec.flags[2] = 3;  PutWindowRecord(wn,RepSpec);  SelectWindow(wn);  return;end;        